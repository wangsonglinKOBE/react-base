{"version":3,"sources":["components/9_ErrorBoundary错误边界/Child.jsx","components/9_ErrorBoundary错误边界/Parent.jsx","App.js","index.js"],"names":["Child","state","users","this","map","userObj","name","age","id","Component","Parent","hasError","console","log","error","App","ReactDOM","render","document","getElementById"],"mappings":"yLAEqBA,E,4MAEjBC,MAAQ,CAMJC,MAAO,Q,4CAGX,WACI,OACI,gCACI,+DAEIC,KAAKF,MAAMC,MAAME,KAAI,SAAAC,GAAO,OACxB,+BAAsBA,EAAQC,KAA9B,MAAuCD,EAAQE,MAAtCF,EAAQG,c,GAjBNC,aCCdC,E,4MAEjBT,MAAQ,CACJU,SAAU,I,uDAad,WACIC,QAAQC,IAAI,gD,oBAGhB,WACI,OACI,gCACI,gEAEEV,KAAKF,MAAMU,SAAW,8FAAsB,cAAC,EAAD,U,uCAhB1D,SAAgCG,GAG5B,OAFAF,QAAQC,IAAIC,GAEL,CAACH,SAAUG,O,GAZUL,aCYfM,E,4JAEjB,WAEI,OACI,mCAUI,cAAC,EAAD,U,GAfiBN,a,QCVjCO,IAASC,OACL,cAAC,IAAD,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.b7430ef5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Child extends Component {\r\n\r\n    state = {\r\n        // users: [\r\n        //     { id: '001', name: 'kobe', age: 46 },\r\n        //     { id: '002', name: 'jack', age: 18 },\r\n        //     { id: '003', name: 'tom', age: 19 }\r\n        // ]\r\n        users: 'kobe'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>我是Child组件</h2>\r\n                {\r\n                    this.state.users.map(userObj =>\r\n                        <h3 key={userObj.id}>{userObj.name}---{userObj.age}</h3>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Child from './Child'\r\n\r\nexport default class Parent extends Component {\r\n\r\n    state = {\r\n        hasError: '' //用于标识子组件是否产生错误\r\n        // 当子组件产生错误，则携带错误调用下面的钩子函数，\r\n        // 钩子函数返回一个新的状态对象，新的状态对象直接更新状态\r\n    }\r\n\r\n    // 当Parent组件的子组件出现报错则会调用该钩子函数并携带错误信息\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error)\r\n        // 注意这里返回一个状态对象\r\n        return {hasError: error}\r\n    }\r\n\r\n    // 当子组件在渲染过程中出现错误则会调用该钩子函数\r\n    componentDidCatch() {\r\n        console.log('渲染组件时出错')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>我是Parent组件</h2>\r\n                {/* 这里判断一下错误状态是否为真 */}\r\n                { this.state.hasError ? <h4>网络繁忙，请稍后再试</h4> : <Child /> }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n// import Demo from './components/1_setState'\r\n// import Demo2 from './components/2_lazyLoad'\r\n// import Demo3 from './components/3_hooks'\r\n// import Demo4 from './components/4_Fragment'\r\n// import Demo5 from './components/5_Context'\r\n// import Demo6 from './components/6_optimize_优化'\r\n// import Demo7 from './components/7_render-props'\r\n// import Demo8 from './components/8_hooks详解'\r\n// import Example from './components/001_hooks初识'\r\nimport Demo9 from './components/9_ErrorBoundary错误边界/Parent'\r\n\r\n// import * as echarts from 'echarts'\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    render() {\r\n        // console.log(echarts)\r\n        return (\r\n            <>\r\n                {/* <Demo/> */}\r\n                {/* <Demo2/> */}\r\n                {/* <Demo3/> */}\r\n                {/* <Demo4/> */}\r\n                {/* <Demo5/> */}\r\n                {/* <Demo6/> */}\r\n                {/* <Demo7/> */}\r\n                {/* <Demo8/> */}\r\n                {/* <Example/> */}\r\n                <Demo9/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>,\r\n    document.getElementById('root'))"],"sourceRoot":""}
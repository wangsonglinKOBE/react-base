{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport ChartView from '../../view/Chart';\nimport * as graphic from '../../util/graphic';\nimport { setStatesStylesFromModel } from '../../util/states';\nimport Path from 'zrender/lib/graphic/Path';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys';\nimport { saveOldStyle } from '../../animation/basicTrasition';\nvar SKIP_PROPS = ['color', 'borderColor'];\n\nvar CandlestickView =\n/** @class */\nfunction (_super) {\n  __extends(CandlestickView, _super);\n\n  function CandlestickView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = CandlestickView.type;\n    return _this;\n  }\n\n  CandlestickView.prototype.render = function (seriesModel, ecModel, api) {\n    // If there is clipPath created in large mode. Remove it.\n    this.group.removeClipPath();\n\n    this._updateDrawMode(seriesModel);\n\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\n  };\n\n  CandlestickView.prototype.incrementalPrepareRender = function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  };\n\n  CandlestickView.prototype.incrementalRender = function (params, seriesModel, ecModel, api) {\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\n  };\n\n  CandlestickView.prototype._updateDrawMode = function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  };\n\n  CandlestickView.prototype._renderNormal = function (seriesModel) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var needsClip = seriesModel.get('clip', true);\n    var coord = seriesModel.coordinateSystem;\n    var clipArea = coord.getArea && coord.getArea(); // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n\n        if (needsClip && isNormalBoxClipped(clipArea, itemLayout)) {\n          return;\n        }\n\n        var el = createNormalBox(itemLayout, newIdx, true);\n        graphic.initProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        setBoxCommon(el, data, newIdx, isSimpleBox);\n        group.add(el);\n        data.setItemGraphicEl(newIdx, el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (needsClip && isNormalBoxClipped(clipArea, itemLayout)) {\n        group.remove(el);\n        return;\n      }\n\n      if (!el) {\n        el = createNormalBox(itemLayout, newIdx);\n      } else {\n        graphic.updateProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        saveOldStyle(el);\n      }\n\n      setBoxCommon(el, data, newIdx, isSimpleBox);\n      group.add(el);\n      data.setItemGraphicEl(newIdx, el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  };\n\n  CandlestickView.prototype._renderLarge = function (seriesModel) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  };\n\n  CandlestickView.prototype._incrementalRenderNormal = function (params, seriesModel) {\n    var data = seriesModel.getData();\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var itemLayout = data.getItemLayout(dataIndex);\n      var el = createNormalBox(itemLayout, dataIndex);\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\n      el.incremental = true;\n      this.group.add(el);\n    }\n  };\n\n  CandlestickView.prototype._incrementalRenderLarge = function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  };\n\n  CandlestickView.prototype.remove = function (ecModel) {\n    this._clear();\n  };\n\n  CandlestickView.prototype._clear = function () {\n    this.group.removeAll();\n    this._data = null;\n  };\n\n  CandlestickView.type = 'candlestick';\n  return CandlestickView;\n}(ChartView);\n\nvar NormalBoxPathShape =\n/** @class */\nfunction () {\n  function NormalBoxPathShape() {}\n\n  return NormalBoxPathShape;\n}();\n\nvar NormalBoxPath =\n/** @class */\nfunction (_super) {\n  __extends(NormalBoxPath, _super);\n\n  function NormalBoxPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'normalCandlestickBox';\n    return _this;\n  }\n\n  NormalBoxPath.prototype.getDefaultShape = function () {\n    return new NormalBoxPathShape();\n  };\n\n  NormalBoxPath.prototype.buildPath = function (ctx, shape) {\n    var ends = shape.points;\n\n    if (this.__simpleBox) {\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[6][0], ends[6][1]);\n    } else {\n      ctx.moveTo(ends[0][0], ends[0][1]);\n      ctx.lineTo(ends[1][0], ends[1][1]);\n      ctx.lineTo(ends[2][0], ends[2][1]);\n      ctx.lineTo(ends[3][0], ends[3][1]);\n      ctx.closePath();\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[5][0], ends[5][1]);\n      ctx.moveTo(ends[6][0], ends[6][1]);\n      ctx.lineTo(ends[7][0], ends[7][1]);\n    }\n  };\n\n  return NormalBoxPath;\n}(Path);\n\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\n  var ends = itemLayout.ends;\n  return new NormalBoxPath({\n    shape: {\n      points: isInit ? transInit(ends, itemLayout) : ends\n    },\n    z2: 100\n  });\n}\n\nfunction isNormalBoxClipped(clipArea, itemLayout) {\n  var clipped = true;\n\n  for (var i = 0; i < itemLayout.ends.length; i++) {\n    // If any point are in the region.\n    if (clipArea.contain(itemLayout.ends[i][0], itemLayout.ends[i][1])) {\n      clipped = false;\n      break;\n    }\n  }\n\n  return clipped;\n}\n\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\n  var itemModel = data.getItemModel(dataIndex);\n  el.useStyle(data.getItemVisual(dataIndex, 'style'));\n  el.style.strokeNoScale = true;\n  el.__simpleBox = isSimpleBox;\n  setStatesStylesFromModel(el, itemModel);\n}\n\nfunction transInit(points, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[1] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar LargeBoxPathShape =\n/** @class */\nfunction () {\n  function LargeBoxPathShape() {}\n\n  return LargeBoxPathShape;\n}();\n\nvar LargeBoxPath =\n/** @class */\nfunction (_super) {\n  __extends(LargeBoxPath, _super);\n\n  function LargeBoxPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'largeCandlestickBox';\n    return _this;\n  }\n\n  LargeBoxPath.prototype.getDefaultShape = function () {\n    return new LargeBoxPathShape();\n  };\n\n  LargeBoxPath.prototype.buildPath = function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n\n    for (var i = 0; i < points.length;) {\n      if (this.__sign === points[i++]) {\n        var x = points[i++];\n        ctx.moveTo(x, points[i++]);\n        ctx.lineTo(x, points[i++]);\n      } else {\n        i += 3;\n      }\n    }\n  };\n\n  return LargeBoxPath;\n}(Path);\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var largePoints = data.getLayout('largePoints');\n  var elP = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: 1\n  });\n  group.add(elP);\n  var elN = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: -1\n  });\n  group.add(elN);\n  setLargeStyle(1, elP, seriesModel, data);\n  setLargeStyle(-1, elN, seriesModel, data);\n\n  if (incremental) {\n    elP.incremental = true;\n    elN.incremental = true;\n  }\n}\n\nfunction setLargeStyle(sign, el, seriesModel, data) {\n  // TODO put in visual?\n  var borderColor = seriesModel.get(['itemStyle', sign > 0 ? 'borderColor' : 'borderColor0']) || seriesModel.get(['itemStyle', sign > 0 ? 'color' : 'color0']); // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n}\n\nexport default CandlestickView;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/chart/candlestick/CandlestickView.js"],"names":["__extends","zrUtil","ChartView","graphic","setStatesStylesFromModel","Path","createClipPath","saveOldStyle","SKIP_PROPS","CandlestickView","_super","_this","apply","arguments","type","prototype","render","seriesModel","ecModel","api","group","removeClipPath","_updateDrawMode","_isLargeDraw","_renderLarge","_renderNormal","incrementalPrepareRender","_clear","incrementalRender","params","_incrementalRenderLarge","_incrementalRenderNormal","isLargeDraw","pipelineContext","large","data","getData","oldData","_data","isSimpleBox","getLayout","needsClip","get","coord","coordinateSystem","clipArea","getArea","removeAll","diff","add","newIdx","hasValue","itemLayout","getItemLayout","isNormalBoxClipped","el","createNormalBox","initProps","shape","points","ends","setBoxCommon","setItemGraphicEl","update","oldIdx","getItemGraphicEl","remove","updateProps","execute","createLarge","clipPath","setClipPath","dataIndex","next","incremental","NormalBoxPathShape","NormalBoxPath","opts","call","getDefaultShape","buildPath","ctx","__simpleBox","moveTo","lineTo","closePath","isInit","transInit","z2","clipped","i","length","contain","itemModel","getItemModel","useStyle","getItemVisual","style","strokeNoScale","map","point","slice","initBaseline","LargeBoxPathShape","LargeBoxPath","__sign","x","largePoints","elP","elN","setLargeStyle","sign","borderColor","itemStyle","getModel","getItemStyle","fill","stroke"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport ChartView from '../../view/Chart';\nimport * as graphic from '../../util/graphic';\nimport { setStatesStylesFromModel } from '../../util/states';\nimport Path from 'zrender/lib/graphic/Path';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys';\nimport { saveOldStyle } from '../../animation/basicTrasition';\nvar SKIP_PROPS = ['color', 'borderColor'];\n\nvar CandlestickView =\n/** @class */\nfunction (_super) {\n  __extends(CandlestickView, _super);\n\n  function CandlestickView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = CandlestickView.type;\n    return _this;\n  }\n\n  CandlestickView.prototype.render = function (seriesModel, ecModel, api) {\n    // If there is clipPath created in large mode. Remove it.\n    this.group.removeClipPath();\n\n    this._updateDrawMode(seriesModel);\n\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\n  };\n\n  CandlestickView.prototype.incrementalPrepareRender = function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  };\n\n  CandlestickView.prototype.incrementalRender = function (params, seriesModel, ecModel, api) {\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\n  };\n\n  CandlestickView.prototype._updateDrawMode = function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  };\n\n  CandlestickView.prototype._renderNormal = function (seriesModel) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var needsClip = seriesModel.get('clip', true);\n    var coord = seriesModel.coordinateSystem;\n    var clipArea = coord.getArea && coord.getArea(); // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n\n        if (needsClip && isNormalBoxClipped(clipArea, itemLayout)) {\n          return;\n        }\n\n        var el = createNormalBox(itemLayout, newIdx, true);\n        graphic.initProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        setBoxCommon(el, data, newIdx, isSimpleBox);\n        group.add(el);\n        data.setItemGraphicEl(newIdx, el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (needsClip && isNormalBoxClipped(clipArea, itemLayout)) {\n        group.remove(el);\n        return;\n      }\n\n      if (!el) {\n        el = createNormalBox(itemLayout, newIdx);\n      } else {\n        graphic.updateProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        saveOldStyle(el);\n      }\n\n      setBoxCommon(el, data, newIdx, isSimpleBox);\n      group.add(el);\n      data.setItemGraphicEl(newIdx, el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  };\n\n  CandlestickView.prototype._renderLarge = function (seriesModel) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  };\n\n  CandlestickView.prototype._incrementalRenderNormal = function (params, seriesModel) {\n    var data = seriesModel.getData();\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var itemLayout = data.getItemLayout(dataIndex);\n      var el = createNormalBox(itemLayout, dataIndex);\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\n      el.incremental = true;\n      this.group.add(el);\n    }\n  };\n\n  CandlestickView.prototype._incrementalRenderLarge = function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  };\n\n  CandlestickView.prototype.remove = function (ecModel) {\n    this._clear();\n  };\n\n  CandlestickView.prototype._clear = function () {\n    this.group.removeAll();\n    this._data = null;\n  };\n\n  CandlestickView.type = 'candlestick';\n  return CandlestickView;\n}(ChartView);\n\nvar NormalBoxPathShape =\n/** @class */\nfunction () {\n  function NormalBoxPathShape() {}\n\n  return NormalBoxPathShape;\n}();\n\nvar NormalBoxPath =\n/** @class */\nfunction (_super) {\n  __extends(NormalBoxPath, _super);\n\n  function NormalBoxPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'normalCandlestickBox';\n    return _this;\n  }\n\n  NormalBoxPath.prototype.getDefaultShape = function () {\n    return new NormalBoxPathShape();\n  };\n\n  NormalBoxPath.prototype.buildPath = function (ctx, shape) {\n    var ends = shape.points;\n\n    if (this.__simpleBox) {\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[6][0], ends[6][1]);\n    } else {\n      ctx.moveTo(ends[0][0], ends[0][1]);\n      ctx.lineTo(ends[1][0], ends[1][1]);\n      ctx.lineTo(ends[2][0], ends[2][1]);\n      ctx.lineTo(ends[3][0], ends[3][1]);\n      ctx.closePath();\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[5][0], ends[5][1]);\n      ctx.moveTo(ends[6][0], ends[6][1]);\n      ctx.lineTo(ends[7][0], ends[7][1]);\n    }\n  };\n\n  return NormalBoxPath;\n}(Path);\n\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\n  var ends = itemLayout.ends;\n  return new NormalBoxPath({\n    shape: {\n      points: isInit ? transInit(ends, itemLayout) : ends\n    },\n    z2: 100\n  });\n}\n\nfunction isNormalBoxClipped(clipArea, itemLayout) {\n  var clipped = true;\n\n  for (var i = 0; i < itemLayout.ends.length; i++) {\n    // If any point are in the region.\n    if (clipArea.contain(itemLayout.ends[i][0], itemLayout.ends[i][1])) {\n      clipped = false;\n      break;\n    }\n  }\n\n  return clipped;\n}\n\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\n  var itemModel = data.getItemModel(dataIndex);\n  el.useStyle(data.getItemVisual(dataIndex, 'style'));\n  el.style.strokeNoScale = true;\n  el.__simpleBox = isSimpleBox;\n  setStatesStylesFromModel(el, itemModel);\n}\n\nfunction transInit(points, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[1] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar LargeBoxPathShape =\n/** @class */\nfunction () {\n  function LargeBoxPathShape() {}\n\n  return LargeBoxPathShape;\n}();\n\nvar LargeBoxPath =\n/** @class */\nfunction (_super) {\n  __extends(LargeBoxPath, _super);\n\n  function LargeBoxPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'largeCandlestickBox';\n    return _this;\n  }\n\n  LargeBoxPath.prototype.getDefaultShape = function () {\n    return new LargeBoxPathShape();\n  };\n\n  LargeBoxPath.prototype.buildPath = function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n\n    for (var i = 0; i < points.length;) {\n      if (this.__sign === points[i++]) {\n        var x = points[i++];\n        ctx.moveTo(x, points[i++]);\n        ctx.lineTo(x, points[i++]);\n      } else {\n        i += 3;\n      }\n    }\n  };\n\n  return LargeBoxPath;\n}(Path);\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var largePoints = data.getLayout('largePoints');\n  var elP = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: 1\n  });\n  group.add(elP);\n  var elN = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: -1\n  });\n  group.add(elN);\n  setLargeStyle(1, elP, seriesModel, data);\n  setLargeStyle(-1, elN, seriesModel, data);\n\n  if (incremental) {\n    elP.incremental = true;\n    elN.incremental = true;\n  }\n}\n\nfunction setLargeStyle(sign, el, seriesModel, data) {\n  // TODO put in visual?\n  var borderColor = seriesModel.get(['itemStyle', sign > 0 ? 'borderColor' : 'borderColor0']) || seriesModel.get(['itemStyle', sign > 0 ? 'color' : 'color0']); // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n}\n\nexport default CandlestickView;"]},"metadata":{},"sourceType":"module"}
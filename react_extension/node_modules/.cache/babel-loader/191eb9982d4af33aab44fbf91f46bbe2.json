{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nimport { SINGLE_REFERRING } from '../../util/model';\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n */\n\nexport function layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx.onZero] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx.onZero] : 0;\n\n  if (axisModel.get(['axisTick', 'inside'])) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get(['axisLabel', 'inside']))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get(['axisLabel', 'rotate']);\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\nexport function isCartesian2DSeries(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\nexport function findAxisModels(seriesModel) {\n  var axisModelMap = {\n    xAxisModel: null,\n    yAxisModel: null\n  };\n  zrUtil.each(axisModelMap, function (v, key) {\n    var axisType = key.replace(/Model$/, '');\n    var axisModel = seriesModel.getReferringComponents(axisType, SINGLE_REFERRING).models[0];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!axisModel) {\n        throw new Error(axisType + ' \"' + zrUtil.retrieve3(seriesModel.get(axisType + 'Index'), seriesModel.get(axisType + 'Id'), 0) + '\" not found');\n      }\n    }\n\n    axisModelMap[key] = axisModel;\n  });\n  return axisModelMap;\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js"],"names":["zrUtil","SINGLE_REFERRING","layout","gridModel","axisModel","opt","grid","coordinateSystem","axis","otherAxisOnZeroOf","getAxesOnZeroOf","rawAxisPosition","position","axisPosition","axisDim","dim","rect","getRect","rectBound","x","width","y","height","idx","left","right","top","bottom","onZero","axisOffset","get","posBound","onZeroCoord","toGlobalCoord","dataToCoord","Math","max","min","rotation","PI","dirMap","labelDirection","tickDirection","nameDirection","labelOffset","retrieve","labelInside","labelRotate","z2","isCartesian2DSeries","seriesModel","findAxisModels","axisModelMap","xAxisModel","yAxisModel","each","v","key","axisType","replace","getReferringComponents","models","process","env","NODE_ENV","Error","retrieve3"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,MAAZ,MAAwB,uBAAxB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,MAAT,CAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,GAAtC,EAA2C;AAChDA,EAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;AACA,MAAIC,IAAI,GAAGH,SAAS,CAACI,gBAArB;AACA,MAAIC,IAAI,GAAGJ,SAAS,CAACI,IAArB;AACA,MAAIN,MAAM,GAAG,EAAb;AACA,MAAIO,iBAAiB,GAAGD,IAAI,CAACE,eAAL,GAAuB,CAAvB,CAAxB;AACA,MAAIC,eAAe,GAAGH,IAAI,CAACI,QAA3B;AACA,MAAIC,YAAY,GAAGJ,iBAAiB,GAAG,QAAH,GAAcE,eAAlD;AACA,MAAIG,OAAO,GAAGN,IAAI,CAACO,GAAnB;AACA,MAAIC,IAAI,GAAGV,IAAI,CAACW,OAAL,EAAX;AACA,MAAIC,SAAS,GAAG,CAACF,IAAI,CAACG,CAAN,EAASH,IAAI,CAACG,CAAL,GAASH,IAAI,CAACI,KAAvB,EAA8BJ,IAAI,CAACK,CAAnC,EAAsCL,IAAI,CAACK,CAAL,GAASL,IAAI,CAACM,MAApD,CAAhB;AACA,MAAIC,GAAG,GAAG;AACRC,IAAAA,IAAI,EAAE,CADE;AAERC,IAAAA,KAAK,EAAE,CAFC;AAGRC,IAAAA,GAAG,EAAE,CAHG;AAIRC,IAAAA,MAAM,EAAE,CAJA;AAKRC,IAAAA,MAAM,EAAE;AALA,GAAV;AAOA,MAAIC,UAAU,GAAGzB,SAAS,CAAC0B,GAAV,CAAc,QAAd,KAA2B,CAA5C;AACA,MAAIC,QAAQ,GAAGjB,OAAO,KAAK,GAAZ,GAAkB,CAACI,SAAS,CAAC,CAAD,CAAT,GAAeW,UAAhB,EAA4BX,SAAS,CAAC,CAAD,CAAT,GAAeW,UAA3C,CAAlB,GAA2E,CAACX,SAAS,CAAC,CAAD,CAAT,GAAeW,UAAhB,EAA4BX,SAAS,CAAC,CAAD,CAAT,GAAeW,UAA3C,CAA1F;;AAEA,MAAIpB,iBAAJ,EAAuB;AACrB,QAAIuB,WAAW,GAAGvB,iBAAiB,CAACwB,aAAlB,CAAgCxB,iBAAiB,CAACyB,WAAlB,CAA8B,CAA9B,CAAhC,CAAlB;AACAH,IAAAA,QAAQ,CAACR,GAAG,CAACK,MAAL,CAAR,GAAuBO,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASL,WAAT,EAAsBD,QAAQ,CAAC,CAAD,CAA9B,CAAT,EAA6CA,QAAQ,CAAC,CAAD,CAArD,CAAvB;AACD,GAxB+C,CAwB9C;;;AAGF7B,EAAAA,MAAM,CAACU,QAAP,GAAkB,CAACE,OAAO,KAAK,GAAZ,GAAkBiB,QAAQ,CAACR,GAAG,CAACV,YAAD,CAAJ,CAA1B,GAAgDK,SAAS,CAAC,CAAD,CAA1D,EAA+DJ,OAAO,KAAK,GAAZ,GAAkBiB,QAAQ,CAACR,GAAG,CAACV,YAAD,CAAJ,CAA1B,GAAgDK,SAAS,CAAC,CAAD,CAAxH,CAAlB,CA3BgD,CA2BgG;;AAEhJhB,EAAAA,MAAM,CAACoC,QAAP,GAAkBH,IAAI,CAACI,EAAL,GAAU,CAAV,IAAezB,OAAO,KAAK,GAAZ,GAAkB,CAAlB,GAAsB,CAArC,CAAlB,CA7BgD,CA6BW;;AAE3D,MAAI0B,MAAM,GAAG;AACXd,IAAAA,GAAG,EAAE,CAAC,CADK;AAEXC,IAAAA,MAAM,EAAE,CAFG;AAGXH,IAAAA,IAAI,EAAE,CAAC,CAHI;AAIXC,IAAAA,KAAK,EAAE;AAJI,GAAb;AAMAvB,EAAAA,MAAM,CAACuC,cAAP,GAAwBvC,MAAM,CAACwC,aAAP,GAAuBxC,MAAM,CAACyC,aAAP,GAAuBH,MAAM,CAAC7B,eAAD,CAA5E;AACAT,EAAAA,MAAM,CAAC0C,WAAP,GAAqBnC,iBAAiB,GAAGsB,QAAQ,CAACR,GAAG,CAACZ,eAAD,CAAJ,CAAR,GAAiCoB,QAAQ,CAACR,GAAG,CAACK,MAAL,CAA5C,GAA2D,CAAjG;;AAEA,MAAIxB,SAAS,CAAC0B,GAAV,CAAc,CAAC,UAAD,EAAa,QAAb,CAAd,CAAJ,EAA2C;AACzC5B,IAAAA,MAAM,CAACwC,aAAP,GAAuB,CAACxC,MAAM,CAACwC,aAA/B;AACD;;AAED,MAAI1C,MAAM,CAAC6C,QAAP,CAAgBxC,GAAG,CAACyC,WAApB,EAAiC1C,SAAS,CAAC0B,GAAV,CAAc,CAAC,WAAD,EAAc,QAAd,CAAd,CAAjC,CAAJ,EAA8E;AAC5E5B,IAAAA,MAAM,CAACuC,cAAP,GAAwB,CAACvC,MAAM,CAACuC,cAAhC;AACD,GA9C+C,CA8C9C;;;AAGF,MAAIM,WAAW,GAAG3C,SAAS,CAAC0B,GAAV,CAAc,CAAC,WAAD,EAAc,QAAd,CAAd,CAAlB;AACA5B,EAAAA,MAAM,CAAC6C,WAAP,GAAqBlC,YAAY,KAAK,KAAjB,GAAyB,CAACkC,WAA1B,GAAwCA,WAA7D,CAlDgD,CAkD0B;;AAE1E7C,EAAAA,MAAM,CAAC8C,EAAP,GAAY,CAAZ;AACA,SAAO9C,MAAP;AACD;AACD,OAAO,SAAS+C,mBAAT,CAA6BC,WAA7B,EAA0C;AAC/C,SAAOA,WAAW,CAACpB,GAAZ,CAAgB,kBAAhB,MAAwC,aAA/C;AACD;AACD,OAAO,SAASqB,cAAT,CAAwBD,WAAxB,EAAqC;AAC1C,MAAIE,YAAY,GAAG;AACjBC,IAAAA,UAAU,EAAE,IADK;AAEjBC,IAAAA,UAAU,EAAE;AAFK,GAAnB;AAIAtD,EAAAA,MAAM,CAACuD,IAAP,CAAYH,YAAZ,EAA0B,UAAUI,CAAV,EAAaC,GAAb,EAAkB;AAC1C,QAAIC,QAAQ,GAAGD,GAAG,CAACE,OAAJ,CAAY,QAAZ,EAAsB,EAAtB,CAAf;AACA,QAAIvD,SAAS,GAAG8C,WAAW,CAACU,sBAAZ,CAAmCF,QAAnC,EAA6CzD,gBAA7C,EAA+D4D,MAA/D,CAAsE,CAAtE,CAAhB;;AAEA,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI,CAAC5D,SAAL,EAAgB;AACd,cAAM,IAAI6D,KAAJ,CAAUP,QAAQ,GAAG,IAAX,GAAkB1D,MAAM,CAACkE,SAAP,CAAiBhB,WAAW,CAACpB,GAAZ,CAAgB4B,QAAQ,GAAG,OAA3B,CAAjB,EAAsDR,WAAW,CAACpB,GAAZ,CAAgB4B,QAAQ,GAAG,IAA3B,CAAtD,EAAwF,CAAxF,CAAlB,GAA+G,aAAzH,CAAN;AACD;AACF;;AAEDN,IAAAA,YAAY,CAACK,GAAD,CAAZ,GAAoBrD,SAApB;AACD,GAXD;AAYA,SAAOgD,YAAP;AACD","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nimport { SINGLE_REFERRING } from '../../util/model';\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n */\n\nexport function layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx.onZero] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx.onZero] : 0;\n\n  if (axisModel.get(['axisTick', 'inside'])) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get(['axisLabel', 'inside']))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get(['axisLabel', 'rotate']);\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\nexport function isCartesian2DSeries(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\nexport function findAxisModels(seriesModel) {\n  var axisModelMap = {\n    xAxisModel: null,\n    yAxisModel: null\n  };\n  zrUtil.each(axisModelMap, function (v, key) {\n    var axisType = key.replace(/Model$/, '');\n    var axisModel = seriesModel.getReferringComponents(axisType, SINGLE_REFERRING).models[0];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!axisModel) {\n        throw new Error(axisType + ' \"' + zrUtil.retrieve3(seriesModel.get(axisType + 'Index'), seriesModel.get(axisType + 'Id'), 0) + '\" not found');\n      }\n    }\n\n    axisModelMap[key] = axisModel;\n  });\n  return axisModelMap;\n}"]},"metadata":{},"sourceType":"module"}
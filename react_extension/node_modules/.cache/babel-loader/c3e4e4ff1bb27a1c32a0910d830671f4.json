{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper';\nimport { createFloat32Array } from '../../util/vendor';\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nexport default function lineAnimationDiff(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // let newIdList = newData.mapArray(newData.getId);\n  // let oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin); // const oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  var oldPoints = oldData.getLayout('points') || [];\n  var newPoints = newData.getLayout('points') || [];\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true;\n    var oldIdx2 = void 0;\n    var newIdx2 = void 0; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        oldIdx2 = diffItem.idx * 2;\n        newIdx2 = diffItem.idx1 * 2;\n        var currentX = oldPoints[oldIdx2];\n        var currentY = oldPoints[oldIdx2 + 1];\n        var nextX = newPoints[newIdx2];\n        var nextY = newPoints[newIdx2 + 1]; // If previous data is NaN, use next point directly\n\n        if (isNaN(currentX) || isNaN(currentY)) {\n          currentX = nextX;\n          currentY = nextY;\n        }\n\n        currPoints.push(currentX, currentY);\n        nextPoints.push(nextX, nextY);\n        currStackedPoints.push(oldStackedOnPoints[oldIdx2], oldStackedOnPoints[oldIdx2 + 1]);\n        nextStackedPoints.push(newStackedOnPoints[newIdx2], newStackedOnPoints[newIdx2 + 1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var newIdx = diffItem.idx;\n        var newDataDimsForPoint = newDataOldCoordInfo.dataDimsForPoint;\n        var oldPt = oldCoordSys.dataToPoint([newData.get(newDataDimsForPoint[0], newIdx), newData.get(newDataDimsForPoint[1], newIdx)]);\n        newIdx2 = newIdx * 2;\n        currPoints.push(oldPt[0], oldPt[1]);\n        nextPoints.push(newPoints[newIdx2], newPoints[newIdx2 + 1]);\n        var stackedOnPoint = getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, newIdx);\n        currStackedPoints.push(stackedOnPoint[0], stackedOnPoint[1]);\n        nextStackedPoints.push(newStackedOnPoints[newIdx2], newStackedOnPoints[newIdx2 + 1]);\n        rawIndices.push(newData.getRawIndex(newIdx));\n        break;\n\n      case '-':\n        pointAdded = false;\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var len = currPoints.length;\n  var sortedCurrPoints = createFloat32Array(len);\n  var sortedNextPoints = createFloat32Array(len);\n  var sortedCurrStackedPoints = createFloat32Array(len);\n  var sortedNextStackedPoints = createFloat32Array(len);\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    var i2 = i * 2;\n    var idx2 = idx * 2;\n    sortedCurrPoints[i2] = currPoints[idx2];\n    sortedCurrPoints[i2 + 1] = currPoints[idx2 + 1];\n    sortedNextPoints[i2] = nextPoints[idx2];\n    sortedNextPoints[i2 + 1] = nextPoints[idx2 + 1];\n    sortedCurrStackedPoints[i2] = currStackedPoints[idx2];\n    sortedCurrStackedPoints[i2 + 1] = currStackedPoints[idx2 + 1];\n    sortedNextStackedPoints[i2] = nextStackedPoints[idx2];\n    sortedNextStackedPoints[i2 + 1] = nextStackedPoints[idx2 + 1];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/chart/line/lineAnimationDiff.js"],"names":["prepareDataCoordInfo","getStackedOnPoint","createFloat32Array","diffData","oldData","newData","diffResult","diff","add","idx","push","cmd","update","newIdx","oldIdx","idx1","remove","execute","lineAnimationDiff","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","currPoints","nextPoints","currStackedPoints","nextStackedPoints","status","sortedIndices","rawIndices","newDataOldCoordInfo","oldPoints","getLayout","newPoints","i","length","diffItem","pointAdded","oldIdx2","newIdx2","currentX","currentY","nextX","nextY","isNaN","getRawIndex","newDataDimsForPoint","dataDimsForPoint","oldPt","dataToPoint","get","stackedOnPoint","sort","a","b","len","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","i2","idx2","current","next","stackedOnCurrent","stackedOnNext"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper';\nimport { createFloat32Array } from '../../util/vendor';\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nexport default function lineAnimationDiff(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // let newIdList = newData.mapArray(newData.getId);\n  // let oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin); // const oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  var oldPoints = oldData.getLayout('points') || [];\n  var newPoints = newData.getLayout('points') || [];\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true;\n    var oldIdx2 = void 0;\n    var newIdx2 = void 0; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        oldIdx2 = diffItem.idx * 2;\n        newIdx2 = diffItem.idx1 * 2;\n        var currentX = oldPoints[oldIdx2];\n        var currentY = oldPoints[oldIdx2 + 1];\n        var nextX = newPoints[newIdx2];\n        var nextY = newPoints[newIdx2 + 1]; // If previous data is NaN, use next point directly\n\n        if (isNaN(currentX) || isNaN(currentY)) {\n          currentX = nextX;\n          currentY = nextY;\n        }\n\n        currPoints.push(currentX, currentY);\n        nextPoints.push(nextX, nextY);\n        currStackedPoints.push(oldStackedOnPoints[oldIdx2], oldStackedOnPoints[oldIdx2 + 1]);\n        nextStackedPoints.push(newStackedOnPoints[newIdx2], newStackedOnPoints[newIdx2 + 1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var newIdx = diffItem.idx;\n        var newDataDimsForPoint = newDataOldCoordInfo.dataDimsForPoint;\n        var oldPt = oldCoordSys.dataToPoint([newData.get(newDataDimsForPoint[0], newIdx), newData.get(newDataDimsForPoint[1], newIdx)]);\n        newIdx2 = newIdx * 2;\n        currPoints.push(oldPt[0], oldPt[1]);\n        nextPoints.push(newPoints[newIdx2], newPoints[newIdx2 + 1]);\n        var stackedOnPoint = getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, newIdx);\n        currStackedPoints.push(stackedOnPoint[0], stackedOnPoint[1]);\n        nextStackedPoints.push(newStackedOnPoints[newIdx2], newStackedOnPoints[newIdx2 + 1]);\n        rawIndices.push(newData.getRawIndex(newIdx));\n        break;\n\n      case '-':\n        pointAdded = false;\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var len = currPoints.length;\n  var sortedCurrPoints = createFloat32Array(len);\n  var sortedNextPoints = createFloat32Array(len);\n  var sortedCurrStackedPoints = createFloat32Array(len);\n  var sortedNextStackedPoints = createFloat32Array(len);\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    var i2 = i * 2;\n    var idx2 = idx * 2;\n    sortedCurrPoints[i2] = currPoints[idx2];\n    sortedCurrPoints[i2 + 1] = currPoints[idx2 + 1];\n    sortedNextPoints[i2] = nextPoints[idx2];\n    sortedNextPoints[i2 + 1] = nextPoints[idx2 + 1];\n    sortedCurrStackedPoints[i2] = currStackedPoints[idx2];\n    sortedCurrStackedPoints[i2 + 1] = currStackedPoints[idx2 + 1];\n    sortedNextStackedPoints[i2] = nextStackedPoints[idx2];\n    sortedNextStackedPoints[i2 + 1] = nextStackedPoints[idx2 + 1];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}"]},"metadata":{},"sourceType":"module"}
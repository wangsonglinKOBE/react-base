{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport Model from '../../model/Model';\nimport { isNameSpecified } from '../../util/model';\nimport ComponentModel from '../../model/Component';\n\nvar getDefaultSelectorOptions = function (ecModel, type) {\n  if (type === 'all') {\n    return {\n      type: 'all',\n      title: ecModel.getLocaleModel().get(['legend', 'selector', 'all'])\n    };\n  } else if (type === 'inverse') {\n    return {\n      type: 'inverse',\n      title: ecModel.getLocaleModel().get(['legend', 'selector', 'inverse'])\n    };\n  }\n};\n\nvar LegendModel =\n/** @class */\nfunction (_super) {\n  __extends(LegendModel, _super);\n\n  function LegendModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = LegendModel.type;\n    _this.layoutMode = {\n      type: 'box',\n      // legend.width/height are maxWidth/maxHeight actually,\n      // whereas realy width/height is calculated by its content.\n      // (Setting {left: 10, right: 10} does not make sense).\n      // So consider the case:\n      // `setOption({legend: {left: 10});`\n      // then `setOption({legend: {right: 10});`\n      // The previous `left` should be cleared by setting `ignoreSize`.\n      ignoreSize: true\n    };\n    return _this;\n  }\n\n  LegendModel.prototype.init = function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n\n    this._updateSelector(option);\n  };\n\n  LegendModel.prototype.mergeOption = function (option, ecModel) {\n    _super.prototype.mergeOption.call(this, option, ecModel);\n\n    this._updateSelector(option);\n  };\n\n  LegendModel.prototype._updateSelector = function (option) {\n    var selector = option.selector;\n    var ecModel = this.ecModel;\n\n    if (selector === true) {\n      selector = option.selector = ['all', 'inverse'];\n    }\n\n    if (zrUtil.isArray(selector)) {\n      zrUtil.each(selector, function (item, index) {\n        zrUtil.isString(item) && (item = {\n          type: item\n        });\n        selector[index] = zrUtil.merge(item, getDefaultSelectorOptions(ecModel, item.type));\n      });\n    }\n  };\n\n  LegendModel.prototype.optionUpdated = function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name_1 = legendData[i].get('name');\n\n        if (this.isSelected(name_1)) {\n          // Force to unselect others\n          this.select(name_1);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  };\n\n  LegendModel.prototype._updateData = function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendVisualProvider) {\n        var provider = seriesModel.legendVisualProvider;\n        var names = provider.getAllNames();\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  };\n\n  LegendModel.prototype.getData = function () {\n    return this._data;\n  };\n\n  LegendModel.prototype.select = function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  };\n\n  LegendModel.prototype.unSelect = function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  };\n\n  LegendModel.prototype.toggleSelected = function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  };\n\n  LegendModel.prototype.allSelect = function () {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      selected[dataItem.get('name', true)] = true;\n    });\n  };\n\n  LegendModel.prototype.inverseSelect = function () {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      var name = dataItem.get('name', true); // Initially, default value is true\n\n      if (!selected.hasOwnProperty(name)) {\n        selected[name] = true;\n      }\n\n      selected[name] = !selected[name];\n    });\n  };\n\n  LegendModel.prototype.isSelected = function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  };\n\n  LegendModel.prototype.getOrient = function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  };\n\n  LegendModel.type = 'legend.plain';\n  LegendModel.dependencies = ['series'];\n  LegendModel.defaultOption = {\n    zlevel: 0,\n    z: 4,\n    show: true,\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemGap: 10,\n    itemWidth: 25,\n    itemHeight: 14,\n    symbolRotate: 'inherit',\n    inactiveColor: '#ccc',\n    inactiveBorderColor: '#ccc',\n    inactiveBorderWidth: 'auto',\n    itemStyle: {\n      color: 'inherit',\n      opacity: 'inherit',\n      decal: 'inherit',\n      shadowBlur: 0,\n      shadowColor: null,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      borderColor: 'inherit',\n      borderWidth: 'auto',\n      borderCap: 'inherit',\n      borderJoin: 'inherit',\n      borderDashOffset: 'inherit',\n      borderMiterLimit: 'inherit'\n    },\n    lineStyle: {\n      width: 'auto',\n      color: 'inherit',\n      inactiveColor: '#ccc',\n      inactiveWidth: 2,\n      opacity: 'inherit',\n      type: 'inherit',\n      cap: 'inherit',\n      join: 'inherit',\n      dashOffset: 'inherit',\n      miterLimit: 'inherit',\n      shadowBlur: 0,\n      shadowColor: null,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0\n    },\n    textStyle: {\n      color: '#333'\n    },\n    selectedMode: true,\n    selector: false,\n    selectorLabel: {\n      show: true,\n      borderRadius: 10,\n      padding: [3, 5, 3, 5],\n      fontSize: 12,\n      fontFamily: ' sans-serif',\n      color: '#666',\n      borderWidth: 1,\n      borderColor: '#666'\n    },\n    emphasis: {\n      selectorLabel: {\n        show: true,\n        color: '#eee',\n        backgroundColor: '#666'\n      }\n    },\n    selectorPosition: 'auto',\n    selectorItemGap: 7,\n    selectorButtonGap: 10,\n    tooltip: {\n      show: false\n    }\n  };\n  return LegendModel;\n}(ComponentModel);\n\nexport default LegendModel;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/component/legend/LegendModel.js"],"names":["__extends","zrUtil","Model","isNameSpecified","ComponentModel","getDefaultSelectorOptions","ecModel","type","title","getLocaleModel","get","LegendModel","_super","_this","apply","arguments","layoutMode","ignoreSize","prototype","init","option","parentModel","mergeDefaultAndTheme","selected","_updateSelector","mergeOption","call","selector","isArray","each","item","index","isString","merge","optionUpdated","_updateData","legendData","_data","hasSelected","i","length","name_1","isSelected","select","potentialData","availableNames","eachRawSeries","seriesModel","seriesName","name","push","isPotential","legendVisualProvider","provider","names","getAllNames","isSeriesFiltered","concat","_availableNames","rawData","map","dataItem","getData","selectedMode","data","unSelect","toggleSelected","hasOwnProperty","allSelect","inverseSelect","indexOf","getOrient","dependencies","defaultOption","zlevel","z","show","orient","left","top","align","backgroundColor","borderColor","borderRadius","borderWidth","padding","itemGap","itemWidth","itemHeight","symbolRotate","inactiveColor","inactiveBorderColor","inactiveBorderWidth","itemStyle","color","opacity","decal","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","borderCap","borderJoin","borderDashOffset","borderMiterLimit","lineStyle","width","inactiveWidth","cap","join","dashOffset","miterLimit","textStyle","selectorLabel","fontSize","fontFamily","emphasis","selectorPosition","selectorItemGap","selectorButtonGap","tooltip"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;AAEA,IAAIC,yBAAyB,GAAG,UAAUC,OAAV,EAAmBC,IAAnB,EAAyB;AACvD,MAAIA,IAAI,KAAK,KAAb,EAAoB;AAClB,WAAO;AACLA,MAAAA,IAAI,EAAE,KADD;AAELC,MAAAA,KAAK,EAAEF,OAAO,CAACG,cAAR,GAAyBC,GAAzB,CAA6B,CAAC,QAAD,EAAW,UAAX,EAAuB,KAAvB,CAA7B;AAFF,KAAP;AAID,GALD,MAKO,IAAIH,IAAI,KAAK,SAAb,EAAwB;AAC7B,WAAO;AACLA,MAAAA,IAAI,EAAE,SADD;AAELC,MAAAA,KAAK,EAAEF,OAAO,CAACG,cAAR,GAAyBC,GAAzB,CAA6B,CAAC,QAAD,EAAW,UAAX,EAAuB,SAAvB,CAA7B;AAFF,KAAP;AAID;AACF,CAZD;;AAcA,IAAIC,WAAW;AACf;AACA,UAAUC,MAAV,EAAkB;AAChBZ,EAAAA,SAAS,CAACW,WAAD,EAAcC,MAAd,CAAT;;AAEA,WAASD,WAAT,GAAuB;AACrB,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AAEAF,IAAAA,KAAK,CAACN,IAAN,GAAaI,WAAW,CAACJ,IAAzB;AACAM,IAAAA,KAAK,CAACG,UAAN,GAAmB;AACjBT,MAAAA,IAAI,EAAE,KADW;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACAU,MAAAA,UAAU,EAAE;AATK,KAAnB;AAWA,WAAOJ,KAAP;AACD;;AAEDF,EAAAA,WAAW,CAACO,SAAZ,CAAsBC,IAAtB,GAA6B,UAAUC,MAAV,EAAkBC,WAAlB,EAA+Bf,OAA/B,EAAwC;AACnE,SAAKgB,oBAAL,CAA0BF,MAA1B,EAAkCd,OAAlC;AACAc,IAAAA,MAAM,CAACG,QAAP,GAAkBH,MAAM,CAACG,QAAP,IAAmB,EAArC;;AAEA,SAAKC,eAAL,CAAqBJ,MAArB;AACD,GALD;;AAOAT,EAAAA,WAAW,CAACO,SAAZ,CAAsBO,WAAtB,GAAoC,UAAUL,MAAV,EAAkBd,OAAlB,EAA2B;AAC7DM,IAAAA,MAAM,CAACM,SAAP,CAAiBO,WAAjB,CAA6BC,IAA7B,CAAkC,IAAlC,EAAwCN,MAAxC,EAAgDd,OAAhD;;AAEA,SAAKkB,eAAL,CAAqBJ,MAArB;AACD,GAJD;;AAMAT,EAAAA,WAAW,CAACO,SAAZ,CAAsBM,eAAtB,GAAwC,UAAUJ,MAAV,EAAkB;AACxD,QAAIO,QAAQ,GAAGP,MAAM,CAACO,QAAtB;AACA,QAAIrB,OAAO,GAAG,KAAKA,OAAnB;;AAEA,QAAIqB,QAAQ,KAAK,IAAjB,EAAuB;AACrBA,MAAAA,QAAQ,GAAGP,MAAM,CAACO,QAAP,GAAkB,CAAC,KAAD,EAAQ,SAAR,CAA7B;AACD;;AAED,QAAI1B,MAAM,CAAC2B,OAAP,CAAeD,QAAf,CAAJ,EAA8B;AAC5B1B,MAAAA,MAAM,CAAC4B,IAAP,CAAYF,QAAZ,EAAsB,UAAUG,IAAV,EAAgBC,KAAhB,EAAuB;AAC3C9B,QAAAA,MAAM,CAAC+B,QAAP,CAAgBF,IAAhB,MAA0BA,IAAI,GAAG;AAC/BvB,UAAAA,IAAI,EAAEuB;AADyB,SAAjC;AAGAH,QAAAA,QAAQ,CAACI,KAAD,CAAR,GAAkB9B,MAAM,CAACgC,KAAP,CAAaH,IAAb,EAAmBzB,yBAAyB,CAACC,OAAD,EAAUwB,IAAI,CAACvB,IAAf,CAA5C,CAAlB;AACD,OALD;AAMD;AACF,GAhBD;;AAkBAI,EAAAA,WAAW,CAACO,SAAZ,CAAsBgB,aAAtB,GAAsC,YAAY;AAChD,SAAKC,WAAL,CAAiB,KAAK7B,OAAtB;;AAEA,QAAI8B,UAAU,GAAG,KAAKC,KAAtB,CAHgD,CAGnB;;AAE7B,QAAID,UAAU,CAAC,CAAD,CAAV,IAAiB,KAAK1B,GAAL,CAAS,cAAT,MAA6B,QAAlD,EAA4D;AAC1D,UAAI4B,WAAW,GAAG,KAAlB,CAD0D,CACjC;;AAEzB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,UAAU,CAACI,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,YAAIE,MAAM,GAAGL,UAAU,CAACG,CAAD,CAAV,CAAc7B,GAAd,CAAkB,MAAlB,CAAb;;AAEA,YAAI,KAAKgC,UAAL,CAAgBD,MAAhB,CAAJ,EAA6B;AAC3B;AACA,eAAKE,MAAL,CAAYF,MAAZ;AACAH,UAAAA,WAAW,GAAG,IAAd;AACA;AACD;AACF,OAZyD,CAYxD;;;AAGF,OAACA,WAAD,IAAgB,KAAKK,MAAL,CAAYP,UAAU,CAAC,CAAD,CAAV,CAAc1B,GAAd,CAAkB,MAAlB,CAAZ,CAAhB;AACD;AACF,GAtBD;;AAwBAC,EAAAA,WAAW,CAACO,SAAZ,CAAsBiB,WAAtB,GAAoC,UAAU7B,OAAV,EAAmB;AACrD,QAAIsC,aAAa,GAAG,EAApB;AACA,QAAIC,cAAc,GAAG,EAArB;AACAvC,IAAAA,OAAO,CAACwC,aAAR,CAAsB,UAAUC,WAAV,EAAuB;AAC3C,UAAIC,UAAU,GAAGD,WAAW,CAACE,IAA7B;AACAJ,MAAAA,cAAc,CAACK,IAAf,CAAoBF,UAApB;AACA,UAAIG,WAAJ;;AAEA,UAAIJ,WAAW,CAACK,oBAAhB,EAAsC;AACpC,YAAIC,QAAQ,GAAGN,WAAW,CAACK,oBAA3B;AACA,YAAIE,KAAK,GAAGD,QAAQ,CAACE,WAAT,EAAZ;;AAEA,YAAI,CAACjD,OAAO,CAACkD,gBAAR,CAAyBT,WAAzB,CAAL,EAA4C;AAC1CF,UAAAA,cAAc,GAAGA,cAAc,CAACY,MAAf,CAAsBH,KAAtB,CAAjB;AACD;;AAED,YAAIA,KAAK,CAACd,MAAV,EAAkB;AAChBI,UAAAA,aAAa,GAAGA,aAAa,CAACa,MAAd,CAAqBH,KAArB,CAAhB;AACD,SAFD,MAEO;AACLH,UAAAA,WAAW,GAAG,IAAd;AACD;AACF,OAbD,MAaO;AACLA,QAAAA,WAAW,GAAG,IAAd;AACD;;AAED,UAAIA,WAAW,IAAIhD,eAAe,CAAC4C,WAAD,CAAlC,EAAiD;AAC/CH,QAAAA,aAAa,CAACM,IAAd,CAAmBH,WAAW,CAACE,IAA/B;AACD;AACF,KAzBD;AA0BA;AACJ;AACA;AACA;;AAEI,SAAKS,eAAL,GAAuBb,cAAvB,CAlCqD,CAkCd;AACvC;;AAEA,QAAIc,OAAO,GAAG,KAAKjD,GAAL,CAAS,MAAT,KAAoBkC,aAAlC;AACA,QAAIR,UAAU,GAAGnC,MAAM,CAAC2D,GAAP,CAAWD,OAAX,EAAoB,UAAUE,QAAV,EAAoB;AACvD;AACA,UAAI,OAAOA,QAAP,KAAoB,QAApB,IAAgC,OAAOA,QAAP,KAAoB,QAAxD,EAAkE;AAChEA,QAAAA,QAAQ,GAAG;AACTZ,UAAAA,IAAI,EAAEY;AADG,SAAX;AAGD;;AAED,aAAO,IAAI3D,KAAJ,CAAU2D,QAAV,EAAoB,IAApB,EAA0B,KAAKvD,OAA/B,CAAP;AACD,KATgB,EASd,IATc,CAAjB;AAUA;AACJ;AACA;AACA;;AAEI,SAAK+B,KAAL,GAAaD,UAAb;AACD,GAtDD;;AAwDAzB,EAAAA,WAAW,CAACO,SAAZ,CAAsB4C,OAAtB,GAAgC,YAAY;AAC1C,WAAO,KAAKzB,KAAZ;AACD,GAFD;;AAIA1B,EAAAA,WAAW,CAACO,SAAZ,CAAsByB,MAAtB,GAA+B,UAAUM,IAAV,EAAgB;AAC7C,QAAI1B,QAAQ,GAAG,KAAKH,MAAL,CAAYG,QAA3B;AACA,QAAIwC,YAAY,GAAG,KAAKrD,GAAL,CAAS,cAAT,CAAnB;;AAEA,QAAIqD,YAAY,KAAK,QAArB,EAA+B;AAC7B,UAAIC,IAAI,GAAG,KAAK3B,KAAhB;AACApC,MAAAA,MAAM,CAAC4B,IAAP,CAAYmC,IAAZ,EAAkB,UAAUH,QAAV,EAAoB;AACpCtC,QAAAA,QAAQ,CAACsC,QAAQ,CAACnD,GAAT,CAAa,MAAb,CAAD,CAAR,GAAiC,KAAjC;AACD,OAFD;AAGD;;AAEDa,IAAAA,QAAQ,CAAC0B,IAAD,CAAR,GAAiB,IAAjB;AACD,GAZD;;AAcAtC,EAAAA,WAAW,CAACO,SAAZ,CAAsB+C,QAAtB,GAAiC,UAAUhB,IAAV,EAAgB;AAC/C,QAAI,KAAKvC,GAAL,CAAS,cAAT,MAA6B,QAAjC,EAA2C;AACzC,WAAKU,MAAL,CAAYG,QAAZ,CAAqB0B,IAArB,IAA6B,KAA7B;AACD;AACF,GAJD;;AAMAtC,EAAAA,WAAW,CAACO,SAAZ,CAAsBgD,cAAtB,GAAuC,UAAUjB,IAAV,EAAgB;AACrD,QAAI1B,QAAQ,GAAG,KAAKH,MAAL,CAAYG,QAA3B,CADqD,CAChB;;AAErC,QAAI,CAACA,QAAQ,CAAC4C,cAAT,CAAwBlB,IAAxB,CAAL,EAAoC;AAClC1B,MAAAA,QAAQ,CAAC0B,IAAD,CAAR,GAAiB,IAAjB;AACD;;AAED,SAAK1B,QAAQ,CAAC0B,IAAD,CAAR,GAAiB,UAAjB,GAA8B,QAAnC,EAA6CA,IAA7C;AACD,GARD;;AAUAtC,EAAAA,WAAW,CAACO,SAAZ,CAAsBkD,SAAtB,GAAkC,YAAY;AAC5C,QAAIJ,IAAI,GAAG,KAAK3B,KAAhB;AACA,QAAId,QAAQ,GAAG,KAAKH,MAAL,CAAYG,QAA3B;AACAtB,IAAAA,MAAM,CAAC4B,IAAP,CAAYmC,IAAZ,EAAkB,UAAUH,QAAV,EAAoB;AACpCtC,MAAAA,QAAQ,CAACsC,QAAQ,CAACnD,GAAT,CAAa,MAAb,EAAqB,IAArB,CAAD,CAAR,GAAuC,IAAvC;AACD,KAFD;AAGD,GAND;;AAQAC,EAAAA,WAAW,CAACO,SAAZ,CAAsBmD,aAAtB,GAAsC,YAAY;AAChD,QAAIL,IAAI,GAAG,KAAK3B,KAAhB;AACA,QAAId,QAAQ,GAAG,KAAKH,MAAL,CAAYG,QAA3B;AACAtB,IAAAA,MAAM,CAAC4B,IAAP,CAAYmC,IAAZ,EAAkB,UAAUH,QAAV,EAAoB;AACpC,UAAIZ,IAAI,GAAGY,QAAQ,CAACnD,GAAT,CAAa,MAAb,EAAqB,IAArB,CAAX,CADoC,CACG;;AAEvC,UAAI,CAACa,QAAQ,CAAC4C,cAAT,CAAwBlB,IAAxB,CAAL,EAAoC;AAClC1B,QAAAA,QAAQ,CAAC0B,IAAD,CAAR,GAAiB,IAAjB;AACD;;AAED1B,MAAAA,QAAQ,CAAC0B,IAAD,CAAR,GAAiB,CAAC1B,QAAQ,CAAC0B,IAAD,CAA1B;AACD,KARD;AASD,GAZD;;AAcAtC,EAAAA,WAAW,CAACO,SAAZ,CAAsBwB,UAAtB,GAAmC,UAAUO,IAAV,EAAgB;AACjD,QAAI1B,QAAQ,GAAG,KAAKH,MAAL,CAAYG,QAA3B;AACA,WAAO,EAAEA,QAAQ,CAAC4C,cAAT,CAAwBlB,IAAxB,KAAiC,CAAC1B,QAAQ,CAAC0B,IAAD,CAA5C,KAAuDhD,MAAM,CAACqE,OAAP,CAAe,KAAKZ,eAApB,EAAqCT,IAArC,KAA8C,CAA5G;AACD,GAHD;;AAKAtC,EAAAA,WAAW,CAACO,SAAZ,CAAsBqD,SAAtB,GAAkC,YAAY;AAC5C,WAAO,KAAK7D,GAAL,CAAS,QAAT,MAAuB,UAAvB,GAAoC;AACzCqB,MAAAA,KAAK,EAAE,CADkC;AAEzCkB,MAAAA,IAAI,EAAE;AAFmC,KAApC,GAGH;AACFlB,MAAAA,KAAK,EAAE,CADL;AAEFkB,MAAAA,IAAI,EAAE;AAFJ,KAHJ;AAOD,GARD;;AAUAtC,EAAAA,WAAW,CAACJ,IAAZ,GAAmB,cAAnB;AACAI,EAAAA,WAAW,CAAC6D,YAAZ,GAA2B,CAAC,QAAD,CAA3B;AACA7D,EAAAA,WAAW,CAAC8D,aAAZ,GAA4B;AAC1BC,IAAAA,MAAM,EAAE,CADkB;AAE1BC,IAAAA,CAAC,EAAE,CAFuB;AAG1BC,IAAAA,IAAI,EAAE,IAHoB;AAI1BC,IAAAA,MAAM,EAAE,YAJkB;AAK1BC,IAAAA,IAAI,EAAE,QALoB;AAM1B;AACAC,IAAAA,GAAG,EAAE,CAPqB;AAQ1B;AACAC,IAAAA,KAAK,EAAE,MATmB;AAU1BC,IAAAA,eAAe,EAAE,eAVS;AAW1BC,IAAAA,WAAW,EAAE,MAXa;AAY1BC,IAAAA,YAAY,EAAE,CAZY;AAa1BC,IAAAA,WAAW,EAAE,CAba;AAc1BC,IAAAA,OAAO,EAAE,CAdiB;AAe1BC,IAAAA,OAAO,EAAE,EAfiB;AAgB1BC,IAAAA,SAAS,EAAE,EAhBe;AAiB1BC,IAAAA,UAAU,EAAE,EAjBc;AAkB1BC,IAAAA,YAAY,EAAE,SAlBY;AAmB1BC,IAAAA,aAAa,EAAE,MAnBW;AAoB1BC,IAAAA,mBAAmB,EAAE,MApBK;AAqB1BC,IAAAA,mBAAmB,EAAE,MArBK;AAsB1BC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,SADE;AAETC,MAAAA,OAAO,EAAE,SAFA;AAGTC,MAAAA,KAAK,EAAE,SAHE;AAITC,MAAAA,UAAU,EAAE,CAJH;AAKTC,MAAAA,WAAW,EAAE,IALJ;AAMTC,MAAAA,aAAa,EAAE,CANN;AAOTC,MAAAA,aAAa,EAAE,CAPN;AAQTlB,MAAAA,WAAW,EAAE,SARJ;AASTE,MAAAA,WAAW,EAAE,MATJ;AAUTiB,MAAAA,SAAS,EAAE,SAVF;AAWTC,MAAAA,UAAU,EAAE,SAXH;AAYTC,MAAAA,gBAAgB,EAAE,SAZT;AAaTC,MAAAA,gBAAgB,EAAE;AAbT,KAtBe;AAqC1BC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,MADE;AAETZ,MAAAA,KAAK,EAAE,SAFE;AAGTJ,MAAAA,aAAa,EAAE,MAHN;AAITiB,MAAAA,aAAa,EAAE,CAJN;AAKTZ,MAAAA,OAAO,EAAE,SALA;AAMTxF,MAAAA,IAAI,EAAE,SANG;AAOTqG,MAAAA,GAAG,EAAE,SAPI;AAQTC,MAAAA,IAAI,EAAE,SARG;AASTC,MAAAA,UAAU,EAAE,SATH;AAUTC,MAAAA,UAAU,EAAE,SAVH;AAWTd,MAAAA,UAAU,EAAE,CAXH;AAYTC,MAAAA,WAAW,EAAE,IAZJ;AAaTC,MAAAA,aAAa,EAAE,CAbN;AAcTC,MAAAA,aAAa,EAAE;AAdN,KArCe;AAqD1BY,IAAAA,SAAS,EAAE;AACTlB,MAAAA,KAAK,EAAE;AADE,KArDe;AAwD1B/B,IAAAA,YAAY,EAAE,IAxDY;AAyD1BpC,IAAAA,QAAQ,EAAE,KAzDgB;AA0D1BsF,IAAAA,aAAa,EAAE;AACbrC,MAAAA,IAAI,EAAE,IADO;AAEbO,MAAAA,YAAY,EAAE,EAFD;AAGbE,MAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHI;AAIb6B,MAAAA,QAAQ,EAAE,EAJG;AAKbC,MAAAA,UAAU,EAAE,aALC;AAMbrB,MAAAA,KAAK,EAAE,MANM;AAObV,MAAAA,WAAW,EAAE,CAPA;AAQbF,MAAAA,WAAW,EAAE;AARA,KA1DW;AAoE1BkC,IAAAA,QAAQ,EAAE;AACRH,MAAAA,aAAa,EAAE;AACbrC,QAAAA,IAAI,EAAE,IADO;AAEbkB,QAAAA,KAAK,EAAE,MAFM;AAGbb,QAAAA,eAAe,EAAE;AAHJ;AADP,KApEgB;AA2E1BoC,IAAAA,gBAAgB,EAAE,MA3EQ;AA4E1BC,IAAAA,eAAe,EAAE,CA5ES;AA6E1BC,IAAAA,iBAAiB,EAAE,EA7EO;AA8E1BC,IAAAA,OAAO,EAAE;AACP5C,MAAAA,IAAI,EAAE;AADC;AA9EiB,GAA5B;AAkFA,SAAOjE,WAAP;AACD,CAhSD,CAgSEP,cAhSF,CAFA;;AAoSA,eAAeO,WAAf","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport Model from '../../model/Model';\nimport { isNameSpecified } from '../../util/model';\nimport ComponentModel from '../../model/Component';\n\nvar getDefaultSelectorOptions = function (ecModel, type) {\n  if (type === 'all') {\n    return {\n      type: 'all',\n      title: ecModel.getLocaleModel().get(['legend', 'selector', 'all'])\n    };\n  } else if (type === 'inverse') {\n    return {\n      type: 'inverse',\n      title: ecModel.getLocaleModel().get(['legend', 'selector', 'inverse'])\n    };\n  }\n};\n\nvar LegendModel =\n/** @class */\nfunction (_super) {\n  __extends(LegendModel, _super);\n\n  function LegendModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = LegendModel.type;\n    _this.layoutMode = {\n      type: 'box',\n      // legend.width/height are maxWidth/maxHeight actually,\n      // whereas realy width/height is calculated by its content.\n      // (Setting {left: 10, right: 10} does not make sense).\n      // So consider the case:\n      // `setOption({legend: {left: 10});`\n      // then `setOption({legend: {right: 10});`\n      // The previous `left` should be cleared by setting `ignoreSize`.\n      ignoreSize: true\n    };\n    return _this;\n  }\n\n  LegendModel.prototype.init = function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n\n    this._updateSelector(option);\n  };\n\n  LegendModel.prototype.mergeOption = function (option, ecModel) {\n    _super.prototype.mergeOption.call(this, option, ecModel);\n\n    this._updateSelector(option);\n  };\n\n  LegendModel.prototype._updateSelector = function (option) {\n    var selector = option.selector;\n    var ecModel = this.ecModel;\n\n    if (selector === true) {\n      selector = option.selector = ['all', 'inverse'];\n    }\n\n    if (zrUtil.isArray(selector)) {\n      zrUtil.each(selector, function (item, index) {\n        zrUtil.isString(item) && (item = {\n          type: item\n        });\n        selector[index] = zrUtil.merge(item, getDefaultSelectorOptions(ecModel, item.type));\n      });\n    }\n  };\n\n  LegendModel.prototype.optionUpdated = function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name_1 = legendData[i].get('name');\n\n        if (this.isSelected(name_1)) {\n          // Force to unselect others\n          this.select(name_1);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  };\n\n  LegendModel.prototype._updateData = function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendVisualProvider) {\n        var provider = seriesModel.legendVisualProvider;\n        var names = provider.getAllNames();\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  };\n\n  LegendModel.prototype.getData = function () {\n    return this._data;\n  };\n\n  LegendModel.prototype.select = function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  };\n\n  LegendModel.prototype.unSelect = function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  };\n\n  LegendModel.prototype.toggleSelected = function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  };\n\n  LegendModel.prototype.allSelect = function () {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      selected[dataItem.get('name', true)] = true;\n    });\n  };\n\n  LegendModel.prototype.inverseSelect = function () {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      var name = dataItem.get('name', true); // Initially, default value is true\n\n      if (!selected.hasOwnProperty(name)) {\n        selected[name] = true;\n      }\n\n      selected[name] = !selected[name];\n    });\n  };\n\n  LegendModel.prototype.isSelected = function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  };\n\n  LegendModel.prototype.getOrient = function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  };\n\n  LegendModel.type = 'legend.plain';\n  LegendModel.dependencies = ['series'];\n  LegendModel.defaultOption = {\n    zlevel: 0,\n    z: 4,\n    show: true,\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemGap: 10,\n    itemWidth: 25,\n    itemHeight: 14,\n    symbolRotate: 'inherit',\n    inactiveColor: '#ccc',\n    inactiveBorderColor: '#ccc',\n    inactiveBorderWidth: 'auto',\n    itemStyle: {\n      color: 'inherit',\n      opacity: 'inherit',\n      decal: 'inherit',\n      shadowBlur: 0,\n      shadowColor: null,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      borderColor: 'inherit',\n      borderWidth: 'auto',\n      borderCap: 'inherit',\n      borderJoin: 'inherit',\n      borderDashOffset: 'inherit',\n      borderMiterLimit: 'inherit'\n    },\n    lineStyle: {\n      width: 'auto',\n      color: 'inherit',\n      inactiveColor: '#ccc',\n      inactiveWidth: 2,\n      opacity: 'inherit',\n      type: 'inherit',\n      cap: 'inherit',\n      join: 'inherit',\n      dashOffset: 'inherit',\n      miterLimit: 'inherit',\n      shadowBlur: 0,\n      shadowColor: null,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0\n    },\n    textStyle: {\n      color: '#333'\n    },\n    selectedMode: true,\n    selector: false,\n    selectorLabel: {\n      show: true,\n      borderRadius: 10,\n      padding: [3, 5, 3, 5],\n      fontSize: 12,\n      fontFamily: ' sans-serif',\n      color: '#666',\n      borderWidth: 1,\n      borderColor: '#666'\n    },\n    emphasis: {\n      selectorLabel: {\n        show: true,\n        color: '#eee',\n        backgroundColor: '#666'\n      }\n    },\n    selectorPosition: 'auto',\n    selectorItemGap: 7,\n    selectorButtonGap: 10,\n    tooltip: {\n      show: false\n    }\n  };\n  return LegendModel;\n}(ComponentModel);\n\nexport default LegendModel;"]},"metadata":{},"sourceType":"module"}
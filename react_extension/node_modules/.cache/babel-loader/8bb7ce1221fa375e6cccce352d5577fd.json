{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { isDimensionStacked } from '../../data/helper/dataStackHelper';\nimport { map } from 'zrender/lib/core/util';\nexport function prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked = false;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    stacked = true;\n    dims[0] = stackResultDim;\n  }\n\n  if (isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    stacked = true;\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n    // Both positive\n    if (extent[0] > 0) {\n      valueStart = extent[0];\n    } // Both negative\n    else if (extent[1] < 0) {\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  return valueStart;\n}\n\nexport function getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/chart/line/helper.js"],"names":["isDimensionStacked","map","prepareDataCoordInfo","coordSys","data","valueOrigin","baseAxis","getBaseAxis","valueAxis","getOtherAxis","valueStart","getValueStart","baseAxisDim","dim","valueAxisDim","valueDim","mapDimension","baseDim","baseDataOffset","dims","dimensions","coordDim","stacked","stackResultDim","getCalculationInfo","dataDimsForPoint","stackedOverDimension","extent","scale","getExtent","getStackedOnPoint","dataCoordInfo","idx","value","NaN","get","isNaN","stackedData","dataToPoint"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { isDimensionStacked } from '../../data/helper/dataStackHelper';\nimport { map } from 'zrender/lib/core/util';\nexport function prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked = false;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    stacked = true;\n    dims[0] = stackResultDim;\n  }\n\n  if (isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    stacked = true;\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nexport function getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}"]},"metadata":{},"sourceType":"module"}
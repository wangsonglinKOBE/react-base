{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __spreadArray } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar IS_EXTENDED_CLASS = '___EC__EXTENDED_CLASS___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nexport function parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    var typeArr = componentType.split(TYPE_DELIMITER);\n    ret.main = typeArr[0] || '';\n    ret.sub = typeArr[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n\nexport function isExtendedClass(clz) {\n  return !!(clz && clz[IS_EXTENDED_CLASS]);\n}\n/**\n * Implements `ExtendableConstructor` for `rootClz`.\n *\n * @usage\n * ```ts\n * class Xxx {}\n * type XxxConstructor = typeof Xxx & ExtendableConstructor\n * enableClassExtend(Xxx as XxxConstructor);\n * ```\n */\n\nexport function enableClassExtend(rootClz, mandatoryMethods) {\n  rootClz.$constructor = rootClz; // FIXME: not necessary?\n\n  rootClz.extend = function (proto) {\n    if (process.env.NODE_ENV !== 'production') {\n      zrUtil.each(mandatoryMethods, function (method) {\n        if (!proto[method]) {\n          console.warn('Method `' + method + '` should be implemented' + (proto.type ? ' in ' + proto.type : '') + '.');\n        }\n      });\n    }\n\n    var superClass = this; // For backward compat, we both support ts class inheritance and this\n    // \"extend\" approach.\n    // The constructor should keep the same behavior as ts class inheritance:\n    // If this constructor/$constructor is not declared, auto invoke the super\n    // constructor.\n    // If this constructor/$constructor is declared, it is responsible for\n    // calling the super constructor.\n\n    function ExtendedClass() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      if (!proto.$constructor) {\n        if (!isESClass(superClass)) {\n          // Will throw error if superClass is an es6 native class.\n          superClass.apply(this, arguments);\n        } else {\n          var ins = zrUtil.createObject( // @ts-ignore\n          ExtendedClass.prototype, new (superClass.bind.apply(superClass, __spreadArray([void 0], args)))());\n          return ins;\n        }\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    }\n\n    ExtendedClass[IS_EXTENDED_CLASS] = true;\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nfunction isESClass(fn) {\n  return typeof fn === 'function' && /^class\\s/.test(Function.prototype.toString.call(fn));\n}\n/**\n * A work around to both support ts extend and this extend mechanism.\n * on sub-class.\n * @usage\n * ```ts\n * class Component { ... }\n * classUtil.enableClassExtend(Component);\n * classUtil.enableClassManagement(Component, {registerWhenExtend: true});\n *\n * class Series extends Component { ... }\n * // Without calling `markExtend`, `registerWhenExtend` will not work.\n * Component.markExtend(Series);\n * ```\n */\n\n\nexport function mountExtend(SubClz, SupperClz) {\n  SubClz.extend = SupperClz.extend;\n} // A random offset.\n\nvar classBase = Math.round(Math.random() * 10);\n/**\n * Implements `CheckableConstructor` for `target`.\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n *\n * @usage\n * ```ts\n * class Xxx {}\n * type XxxConstructor = typeof Xxx & CheckableConstructor;\n * enableClassCheck(Xxx as XxxConstructor)\n * ```\n */\n\nexport function enableClassCheck(target) {\n  var classAttr = ['__\\0is_clz', classBase++].join('_');\n  target.prototype[classAttr] = true;\n\n  if (process.env.NODE_ENV !== 'production') {\n    zrUtil.assert(!target.isInstance, 'The method \"is\" can not be defined.');\n  }\n\n  target.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\nfunction superCall(context, methodName) {\n  var args = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * Implements `ClassManager` for `target`\n *\n * @usage\n * ```ts\n * class Xxx {}\n * type XxxConstructor = typeof Xxx & ClassManager\n * enableClassManagement(Xxx as XxxConstructor);\n * ```\n */\n\n\nexport function enableClassManagement(target) {\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   */\n  var storage = {};\n\n  target.registerClass = function (clz) {\n    // `type` should not be a \"instance memeber\".\n    // If using TS class, should better declared as `static type = 'series.pie'`.\n    // otherwise users have to mount `type` on prototype manually.\n    // For backward compat and enable instance visit type via `this.type`,\n    // we stil support fetch `type` from prototype.\n    var componentFullType = clz.type || clz.prototype.type;\n\n    if (componentFullType) {\n      checkClassType(componentFullType); // If only static type declared, we assign it to prototype mandatorily.\n\n      clz.prototype.type = componentFullType;\n      var componentTypeInfo = parseClassType(componentFullType);\n\n      if (!componentTypeInfo.sub) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (storage[componentTypeInfo.main]) {\n            console.warn(componentTypeInfo.main + ' exists.');\n          }\n        }\n\n        storage[componentTypeInfo.main] = clz;\n      } else if (componentTypeInfo.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentTypeInfo);\n        container[componentTypeInfo.sub] = clz;\n      }\n    }\n\n    return clz;\n  };\n\n  target.getClass = function (mainType, subType, throwWhenNotFound) {\n    var clz = storage[mainType];\n\n    if (clz && clz[IS_CONTAINER]) {\n      clz = subType ? clz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !clz) {\n      throw new Error(!subType ? mainType + '.' + 'type should be specified.' : 'Component ' + mainType + '.' + (subType || '') + ' is used but not imported.');\n    }\n\n    return clz;\n  };\n\n  target.getClassesByMainType = function (componentType) {\n    var componentTypeInfo = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentTypeInfo.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  target.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    var componentTypeInfo = parseClassType(componentType);\n    return !!storage[componentTypeInfo.main];\n  };\n  /**\n   * @return Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  target.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   */\n\n\n  target.hasSubTypes = function (componentType) {\n    var componentTypeInfo = parseClassType(componentType);\n    var obj = storage[componentTypeInfo.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  function makeContainer(componentTypeInfo) {\n    var container = storage[componentTypeInfo.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentTypeInfo.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n} // /**\n//  * @param {string|Array.<string>} properties\n//  */\n// export function setReadOnly(obj, properties) {\n// FIXME It seems broken in IE8 simulation of IE11\n// if (!zrUtil.isArray(properties)) {\n//     properties = properties != null ? [properties] : [];\n// }\n// zrUtil.each(properties, function (prop) {\n//     let value = obj[prop];\n//     Object.defineProperty\n//         && Object.defineProperty(obj, prop, {\n//             value: value, writable: false\n//         });\n//     zrUtil.isArray(obj[prop])\n//         && Object.freeze\n//         && Object.freeze(obj[prop]);\n// });\n// }","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/util/clazz.js"],"names":["__spreadArray","zrUtil","TYPE_DELIMITER","IS_CONTAINER","IS_EXTENDED_CLASS","parseClassType","componentType","ret","main","sub","typeArr","split","checkClassType","assert","test","isExtendedClass","clz","enableClassExtend","rootClz","mandatoryMethods","$constructor","extend","proto","process","env","NODE_ENV","each","method","console","warn","type","superClass","ExtendedClass","args","_i","arguments","length","isESClass","apply","ins","createObject","prototype","bind","superCall","superApply","inherits","fn","Function","toString","call","mountExtend","SubClz","SupperClz","classBase","Math","round","random","enableClassCheck","target","classAttr","join","isInstance","obj","context","methodName","enableClassManagement","storage","registerClass","componentFullType","componentTypeInfo","container","makeContainer","getClass","mainType","subType","throwWhenNotFound","Error","getClassesByMainType","result","o","push","hasClass","getAllClassMainTypes","types","hasSubTypes"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __spreadArray } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar IS_EXTENDED_CLASS = '___EC__EXTENDED_CLASS___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nexport function parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    var typeArr = componentType.split(TYPE_DELIMITER);\n    ret.main = typeArr[0] || '';\n    ret.sub = typeArr[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n\nexport function isExtendedClass(clz) {\n  return !!(clz && clz[IS_EXTENDED_CLASS]);\n}\n/**\n * Implements `ExtendableConstructor` for `rootClz`.\n *\n * @usage\n * ```ts\n * class Xxx {}\n * type XxxConstructor = typeof Xxx & ExtendableConstructor\n * enableClassExtend(Xxx as XxxConstructor);\n * ```\n */\n\nexport function enableClassExtend(rootClz, mandatoryMethods) {\n  rootClz.$constructor = rootClz; // FIXME: not necessary?\n\n  rootClz.extend = function (proto) {\n    if (process.env.NODE_ENV !== 'production') {\n      zrUtil.each(mandatoryMethods, function (method) {\n        if (!proto[method]) {\n          console.warn('Method `' + method + '` should be implemented' + (proto.type ? ' in ' + proto.type : '') + '.');\n        }\n      });\n    }\n\n    var superClass = this; // For backward compat, we both support ts class inheritance and this\n    // \"extend\" approach.\n    // The constructor should keep the same behavior as ts class inheritance:\n    // If this constructor/$constructor is not declared, auto invoke the super\n    // constructor.\n    // If this constructor/$constructor is declared, it is responsible for\n    // calling the super constructor.\n\n    function ExtendedClass() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      if (!proto.$constructor) {\n        if (!isESClass(superClass)) {\n          // Will throw error if superClass is an es6 native class.\n          superClass.apply(this, arguments);\n        } else {\n          var ins = zrUtil.createObject( // @ts-ignore\n          ExtendedClass.prototype, new (superClass.bind.apply(superClass, __spreadArray([void 0], args)))());\n          return ins;\n        }\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    }\n\n    ExtendedClass[IS_EXTENDED_CLASS] = true;\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nfunction isESClass(fn) {\n  return typeof fn === 'function' && /^class\\s/.test(Function.prototype.toString.call(fn));\n}\n/**\n * A work around to both support ts extend and this extend mechanism.\n * on sub-class.\n * @usage\n * ```ts\n * class Component { ... }\n * classUtil.enableClassExtend(Component);\n * classUtil.enableClassManagement(Component, {registerWhenExtend: true});\n *\n * class Series extends Component { ... }\n * // Without calling `markExtend`, `registerWhenExtend` will not work.\n * Component.markExtend(Series);\n * ```\n */\n\n\nexport function mountExtend(SubClz, SupperClz) {\n  SubClz.extend = SupperClz.extend;\n} // A random offset.\n\nvar classBase = Math.round(Math.random() * 10);\n/**\n * Implements `CheckableConstructor` for `target`.\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n *\n * @usage\n * ```ts\n * class Xxx {}\n * type XxxConstructor = typeof Xxx & CheckableConstructor;\n * enableClassCheck(Xxx as XxxConstructor)\n * ```\n */\n\nexport function enableClassCheck(target) {\n  var classAttr = ['__\\0is_clz', classBase++].join('_');\n  target.prototype[classAttr] = true;\n\n  if (process.env.NODE_ENV !== 'production') {\n    zrUtil.assert(!target.isInstance, 'The method \"is\" can not be defined.');\n  }\n\n  target.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\nfunction superCall(context, methodName) {\n  var args = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * Implements `ClassManager` for `target`\n *\n * @usage\n * ```ts\n * class Xxx {}\n * type XxxConstructor = typeof Xxx & ClassManager\n * enableClassManagement(Xxx as XxxConstructor);\n * ```\n */\n\n\nexport function enableClassManagement(target) {\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   */\n  var storage = {};\n\n  target.registerClass = function (clz) {\n    // `type` should not be a \"instance memeber\".\n    // If using TS class, should better declared as `static type = 'series.pie'`.\n    // otherwise users have to mount `type` on prototype manually.\n    // For backward compat and enable instance visit type via `this.type`,\n    // we stil support fetch `type` from prototype.\n    var componentFullType = clz.type || clz.prototype.type;\n\n    if (componentFullType) {\n      checkClassType(componentFullType); // If only static type declared, we assign it to prototype mandatorily.\n\n      clz.prototype.type = componentFullType;\n      var componentTypeInfo = parseClassType(componentFullType);\n\n      if (!componentTypeInfo.sub) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (storage[componentTypeInfo.main]) {\n            console.warn(componentTypeInfo.main + ' exists.');\n          }\n        }\n\n        storage[componentTypeInfo.main] = clz;\n      } else if (componentTypeInfo.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentTypeInfo);\n        container[componentTypeInfo.sub] = clz;\n      }\n    }\n\n    return clz;\n  };\n\n  target.getClass = function (mainType, subType, throwWhenNotFound) {\n    var clz = storage[mainType];\n\n    if (clz && clz[IS_CONTAINER]) {\n      clz = subType ? clz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !clz) {\n      throw new Error(!subType ? mainType + '.' + 'type should be specified.' : 'Component ' + mainType + '.' + (subType || '') + ' is used but not imported.');\n    }\n\n    return clz;\n  };\n\n  target.getClassesByMainType = function (componentType) {\n    var componentTypeInfo = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentTypeInfo.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  target.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    var componentTypeInfo = parseClassType(componentType);\n    return !!storage[componentTypeInfo.main];\n  };\n  /**\n   * @return Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  target.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   */\n\n\n  target.hasSubTypes = function (componentType) {\n    var componentTypeInfo = parseClassType(componentType);\n    var obj = storage[componentTypeInfo.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  function makeContainer(componentTypeInfo) {\n    var container = storage[componentTypeInfo.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentTypeInfo.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n} // /**\n//  * @param {string|Array.<string>} properties\n//  */\n// export function setReadOnly(obj, properties) {\n// FIXME It seems broken in IE8 simulation of IE11\n// if (!zrUtil.isArray(properties)) {\n//     properties = properties != null ? [properties] : [];\n// }\n// zrUtil.each(properties, function (prop) {\n//     let value = obj[prop];\n//     Object.defineProperty\n//         && Object.defineProperty(obj, prop, {\n//             value: value, writable: false\n//         });\n//     zrUtil.isArray(obj[prop])\n//         && Object.freeze\n//         && Object.freeze(obj[prop]);\n// });\n// }"]},"metadata":{},"sourceType":"module"}
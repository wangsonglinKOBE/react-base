{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u684C\\u9762\\\\react\\u57FA\\u7840\\u539F\\u7406\\u5206\\u6790\\\\react_extension\\\\src\\\\components\\\\6_optimize_\\u4F18\\u5316\\\\index.jsx\";\nimport React, { Component, PureComponent } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Parent extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      carName: '奔驰c63'\n    };\n\n    this.changeCar = () => {\n      this.setState({\n        carName: '迈巴赫'\n      });\n    };\n  }\n\n  // shouldComponentUpdate(nextProps, nextState) { //这里注意接收参数的顺序\n  //     // console.log(this.props, this.state); //变化前的props和state\n  //     // console.log(nextProps, nextState); //变成的props和state,变化后的\n  //     // if(this.state.carName === nextState.carName) return false\n  //     // else return true\n  //     // 为啥这里 return !this.state.carName === nextState.carName这么写当我两次的状态不一样的时候\n  //     // 也不更新呢？有点怪\n  //     // return !this.state.carName === nextState.carName\n  // }\n  render() {\n    console.log('Parent--------render');\n    const {\n      carName\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u6211\\u662FParent\\u7EC4\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u6211\\u7684\\u8F66\\u540D\\u5B57\\u662F\\uFF1A\", carName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.changeCar,\n        children: \"\\u70B9\\u6211\\u6362\\u8F66\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Child, {\n        carName: this.state.carName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Child extends PureComponent {\n  // shouldComponentUpdate(nextProps, nextState) { //这里注意接收参数的顺序\n  //     console.log(this.props, this.state); //变化前的props和state\n  //     console.log(nextProps, nextState); //变成的props和state,变化后的\n  //     return !this.props.carName === nextProps.carName\n  //     // 同样的情况这里这样写 return !this.props.carName === nextProps.carName，就算发生改变了props\n  //     // 也不更新了，奇怪的很，还是写判断好一些\n  //     // return this.props.carName === nextProps.carName 这句话表示 return trun \n  //     // 如果要表示他两相等返回false，就return !true => return !this.props.carName === nextProps.carName\n  // }\n  render() {\n    console.log('Child--------render');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"child\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u6211\\u662FChild\\u7EC4\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u6211\\u63A5\\u5230\\u7684\\u8F66\\u662F\\uFF1A\", this.props.carName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/src/components/6_optimize_优化/index.jsx"],"names":["React","Component","PureComponent","Parent","state","carName","changeCar","setState","render","console","log","Child","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AACA,OAAO,aAAP;;AAEA,eAAe,MAAMC,MAAN,SAAqBD,aAArB,CAAmC;AAAA;AAAA;AAAA,SAE9CE,KAF8C,GAEtC;AAACC,MAAAA,OAAO,EAAE;AAAV,KAFsC;;AAAA,SAI9CC,SAJ8C,GAIlC,MAAM;AACd,WAAKC,QAAL,CAAc;AAACF,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAN6C;AAAA;;AAQ9C;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEAG,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,UAAM;AAACL,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,iEAAcC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,qBAEmC;AAAA;AAAA;AAAA;AAAA,cAFnC,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAhC6C;;AAmClD,MAAMM,KAAN,SAAoBT,aAApB,CAAkC;AAE9B;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAEAM,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,iEAAc,KAAKE,KAAL,CAAWP,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAxB6B","sourcesContent":["import React, { Component, PureComponent } from 'react'\r\nimport './index.css'\r\n\r\nexport default class Parent extends PureComponent {\r\n\r\n    state = {carName: '奔驰c63'}\r\n\r\n    changeCar = () => {\r\n        this.setState({carName: '迈巴赫'})\r\n    }\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) { //这里注意接收参数的顺序\r\n    //     // console.log(this.props, this.state); //变化前的props和state\r\n    //     // console.log(nextProps, nextState); //变成的props和state,变化后的\r\n    //     // if(this.state.carName === nextState.carName) return false\r\n    //     // else return true\r\n\r\n    //     // 为啥这里 return !this.state.carName === nextState.carName这么写当我两次的状态不一样的时候\r\n    //     // 也不更新呢？有点怪\r\n\r\n    //     // return !this.state.carName === nextState.carName\r\n\r\n    // }\r\n\r\n    render() {\r\n        console.log('Parent--------render');\r\n        const {carName} = this.state\r\n        return (\r\n            <div className=\"parent\">\r\n                <h3>我是Parent组件</h3>\r\n                <span>我的车名字是：{carName}</span>  <br/>\r\n                <button onClick={this.changeCar}>点我换车</button>\r\n                <Child carName={this.state.carName}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Child extends PureComponent {\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) { //这里注意接收参数的顺序\r\n    //     console.log(this.props, this.state); //变化前的props和state\r\n    //     console.log(nextProps, nextState); //变成的props和state,变化后的\r\n        \r\n    //     return !this.props.carName === nextProps.carName\r\n    //     // 同样的情况这里这样写 return !this.props.carName === nextProps.carName，就算发生改变了props\r\n    //     // 也不更新了，奇怪的很，还是写判断好一些\r\n\r\n\r\n    //     // return this.props.carName === nextProps.carName 这句话表示 return trun \r\n    //     // 如果要表示他两相等返回false，就return !true => return !this.props.carName === nextProps.carName\r\n\r\n    // }\r\n    \r\n    render() {\r\n        console.log('Child--------render');\r\n        return (\r\n            <div className=\"child\">\r\n                <h3>我是Child组件</h3>\r\n                <span>我接到的车是：{this.props.carName}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u684C\\u9762\\\\react\\u57FA\\u7840\\u539F\\u7406\\u5206\\u6790\\\\react_extension\\\\src\\\\components\\\\9_ErrorBoundary\\u9519\\u8BEF\\u8FB9\\u754C\\\\Parent.jsx\";\nimport React, { Component } from 'react';\nimport Child from './Child';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Parent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hasError: '' //用于标识子组件是否产生错误\n      // 当子组件产生错误，则携带错误调用下面的钩子函数，\n      // 钩子函数返回一个新的状态对象，新的状态对象直接更新状态\n\n    };\n  }\n\n  // 当Parent组件的子组件出现报错则会调用该钩子函数并携带错误信息\n  static getDerivedStateFromError(error) {\n    console.log(error); // 注意这里返回一个状态对象\n\n    return {\n      hasError: error\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u6211\\u662FParent\\u7EC4\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), this.state.hasError ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u7F51\\u7EDC\\u7E41\\u5FD9\\uFF0C\\u8BF7\\u7A0D\\u540E\\u518D\\u8BD5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(Child, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 63\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/src/components/9_ErrorBoundary错误边界/Parent.jsx"],"names":["React","Component","Child","Parent","state","hasError","getDerivedStateFromError","error","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE1CG,KAF0C,GAElC;AACJC,MAAAA,QAAQ,EAAE,EADN,CACS;AACb;AACA;;AAHI,KAFkC;AAAA;;AAQ1C;AAC+B,SAAxBC,wBAAwB,CAACC,KAAD,EAAQ;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADmC,CAEnC;;AACA,WAAO;AAACF,MAAAA,QAAQ,EAAEE;AAAX,KAAP;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEM,KAAKN,KAAL,CAAWC,QAAX,gBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtB,gBAA4C,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFlD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAtByC","sourcesContent":["import React, { Component } from 'react'\r\nimport Child from './Child'\r\n\r\nexport default class Parent extends Component {\r\n\r\n    state = {\r\n        hasError: '' //用于标识子组件是否产生错误\r\n        // 当子组件产生错误，则携带错误调用下面的钩子函数，\r\n        // 钩子函数返回一个新的状态对象，新的状态对象直接更新状态\r\n    }\r\n\r\n    // 当Parent组件的子组件出现报错则会调用该钩子函数并携带错误信息\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error)\r\n        // 注意这里返回一个状态对象\r\n        return {hasError: error}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>我是Parent组件</h2>\r\n                { this.state.hasError ? <h4>网络繁忙，请稍后再试</h4> : <Child /> }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
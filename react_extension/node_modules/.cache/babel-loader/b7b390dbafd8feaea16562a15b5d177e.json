{"ast":null,"code":"import { normalizeRadian } from './util';\nvar PI2 = Math.PI * 2;\nexport function containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/zrender/lib/contain/arc.js"],"names":["normalizeRadian","PI2","Math","PI","containStroke","cx","cy","r","startAngle","endAngle","anticlockwise","lineWidth","x","y","_l","d","sqrt","abs","tmp","angle","atan2"],"mappings":"AAAA,SAASA,eAAT,QAAgC,QAAhC;AACA,IAAIC,GAAG,GAAGC,IAAI,CAACC,EAAL,GAAU,CAApB;AACA,OAAO,SAASC,aAAT,CAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,CAA/B,EAAkCC,UAAlC,EAA8CC,QAA9C,EAAwDC,aAAxD,EAAuEC,SAAvE,EAAkFC,CAAlF,EAAqFC,CAArF,EAAwF;AAC3F,MAAIF,SAAS,KAAK,CAAlB,EAAqB;AACjB,WAAO,KAAP;AACH;;AACD,MAAIG,EAAE,GAAGH,SAAT;AACAC,EAAAA,CAAC,IAAIP,EAAL;AACAQ,EAAAA,CAAC,IAAIP,EAAL;AACA,MAAIS,CAAC,GAAGb,IAAI,CAACc,IAAL,CAAUJ,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAtB,CAAR;;AACA,MAAKE,CAAC,GAAGD,EAAJ,GAASP,CAAV,IAAiBQ,CAAC,GAAGD,EAAJ,GAASP,CAA9B,EAAkC;AAC9B,WAAO,KAAP;AACH;;AACD,MAAIL,IAAI,CAACe,GAAL,CAAST,UAAU,GAAGC,QAAtB,IAAkCR,GAAlC,GAAwC,IAA5C,EAAkD;AAC9C,WAAO,IAAP;AACH;;AACD,MAAIS,aAAJ,EAAmB;AACf,QAAIQ,GAAG,GAAGV,UAAV;AACAA,IAAAA,UAAU,GAAGR,eAAe,CAACS,QAAD,CAA5B;AACAA,IAAAA,QAAQ,GAAGT,eAAe,CAACkB,GAAD,CAA1B;AACH,GAJD,MAKK;AACDV,IAAAA,UAAU,GAAGR,eAAe,CAACQ,UAAD,CAA5B;AACAC,IAAAA,QAAQ,GAAGT,eAAe,CAACS,QAAD,CAA1B;AACH;;AACD,MAAID,UAAU,GAAGC,QAAjB,EAA2B;AACvBA,IAAAA,QAAQ,IAAIR,GAAZ;AACH;;AACD,MAAIkB,KAAK,GAAGjB,IAAI,CAACkB,KAAL,CAAWP,CAAX,EAAcD,CAAd,CAAZ;;AACA,MAAIO,KAAK,GAAG,CAAZ,EAAe;AACXA,IAAAA,KAAK,IAAIlB,GAAT;AACH;;AACD,SAAQkB,KAAK,IAAIX,UAAT,IAAuBW,KAAK,IAAIV,QAAjC,IACCU,KAAK,GAAGlB,GAAR,IAAeO,UAAf,IAA6BW,KAAK,GAAGlB,GAAR,IAAeQ,QADpD;AAEH","sourcesContent":["import { normalizeRadian } from './util';\nvar PI2 = Math.PI * 2;\nexport function containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n    if (lineWidth === 0) {\n        return false;\n    }\n    var _l = lineWidth;\n    x -= cx;\n    y -= cy;\n    var d = Math.sqrt(x * x + y * y);\n    if ((d - _l > r) || (d + _l < r)) {\n        return false;\n    }\n    if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n        return true;\n    }\n    if (anticlockwise) {\n        var tmp = startAngle;\n        startAngle = normalizeRadian(endAngle);\n        endAngle = normalizeRadian(tmp);\n    }\n    else {\n        startAngle = normalizeRadian(startAngle);\n        endAngle = normalizeRadian(endAngle);\n    }\n    if (startAngle > endAngle) {\n        endAngle += PI2;\n    }\n    var angle = Math.atan2(y, x);\n    if (angle < 0) {\n        angle += PI2;\n    }\n    return (angle >= startAngle && angle <= endAngle)\n        || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n}\n"]},"metadata":{},"sourceType":"module"}
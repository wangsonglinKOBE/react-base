{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u684C\\u9762\\\\react\\u57FA\\u7840\\u539F\\u7406\\u5206\\u6790\\\\react_extension\\\\src\\\\components\\\\3_hooks\\\\index.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Demo3 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0\n    };\n\n    this.add = () => {\n      // this.setState(state => {\n      //     return {count: state.count+1}\n      // } )\n      this.setState(state => ({\n        count: state.count + 1\n      }));\n    };\n\n    this.unmount = () => {\n      ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n    };\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState(state => ({\n        count: state.count + 1\n      }));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\\uFF1A\", this.state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.add,\n        children: \"\\u70B9\\u6211+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.unmount,\n        children: \"\\u5378\\u8F7D\\u7EC4\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 62\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.show,\n        children: \"\\u70B9\\u6211\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n} // function Demo3() {\n//     console.log('Demo3被调用了几次');  // 1+n 次\n//     const [count, setCount] = React.useState(0)\n//     // [count,setCount]:第一个参数为状态state,第二个为更新状态的方法\n//     const [name, setName] = React.useState('kobe')\n//     const [age, setAge] = React.useState(22)\n//     function add() {\n//         // setCount(count + 1) //第一种写法\n//         setCount(count => count + 1)\n//     }\n//     function changeName() {\n//         setName(name => name + '-bryant')\n//     }\n//     function changeAge() {\n//         setAge(33)\n//     }\n//     React.useEffect(() => {\n//         let timer = setInterval(() => {\n//             setCount(count => count + 1)\n//         }, 1000)\n//         return () => {\n//             clearInterval(timer)\n//         }\n//     }, [])\n//     // [count]不写该数组监测所有state,写谁就监测谁\n//     // 不写监测所有，相当于一上来就监测所有，相当于componentDidMount\n//     // 写谁就监测谁相当于谁更新了状态值，就触发，相当于componentDidUpdate\n//     // 这里useEffect的第一个参数，也就是这个回调函数的返回的函数相当于componentWillUnmount\n//     // 卸载组件的回调\n//     function unmount() {\n//         ReactDOM.unmountComponentAtNode(document.getElementById('root'))\n//     }\n//     return (\n//         <div>\n//             <h2>当前求和为：{count}</h2>\n//             <h2>我的名字是：{name}</h2>\n//             <h2>我的年龄是：{age}</h2>\n//             <button onClick={add}>点我+1</button>\n//             <button onClick={changeName}>点我改名</button>\n//             <button onClick={changeAge}>点我改年龄</button>\n//             <button onClick={unmount}>卸载组件</button>\n//         </div>\n//     )\n// }\n\n\nexport default Demo3;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/src/components/3_hooks/index.jsx"],"names":["React","ReactDOM","Demo3","Component","state","count","add","setState","unmount","unmountComponentAtNode","document","getElementById","componentDidMount","timer","setInterval","componentWillUnmount","clearInterval","render","show"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AAACC,MAAAA,KAAK,EAAE;AAAR,KADwB;;AAAA,SAEhCC,GAFgC,GAE1B,MAAM;AACR;AACA;AACA;AACA,WAAKC,QAAL,CAAcH,KAAK,KAAK;AAACC,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AAAtB,OAAL,CAAnB;AACH,KAP+B;;AAAA,SAehCG,OAfgC,GAetB,MAAM;AACZP,MAAAA,QAAQ,CAACQ,sBAAT,CAAgCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC;AACH,KAjB+B;AAAA;;AAShCC,EAAAA,iBAAiB,GAAG;AACjB,SAAKC,KAAL,GAAcC,WAAW,CAAC,MAAM;AAC3B,WAAKP,QAAL,CAAcH,KAAK,KAAK;AAACC,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AAAtB,OAAL,CAAnB;AACH,KAFuB,EAErB,IAFqB,CAAzB;AAGF;;AAMDU,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKH,KAAN,CAAb;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,2DAAW,KAAKb,KAAL,CAAWC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,oBAGiD;AAAA;AAAA;AAAA;AAAA,cAHjD,eAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,QAAA,OAAO,EAAE,KAAKU,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAjC+B,C,CAqCpC;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAehB,KAAf","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nclass Demo3 extends React.Component {\r\n    state = {count: 0}\r\n    add = () => {\r\n        // this.setState(state => {\r\n        //     return {count: state.count+1}\r\n        // } )\r\n        this.setState(state => ({count: state.count + 1}))\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.timer =  setInterval(() => {\r\n            this.setState(state => ({count: state.count + 1}))\r\n        }, 1000)\r\n    }\r\n\r\n    unmount = () => {\r\n        ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>当前求和为：{this.state.count}</h2>\r\n                <button onClick={this.add}>点我+1</button>\r\n                <button onClick={this.unmount}>卸载组件</button> <br/>\r\n                <input type=\"text\" ref=\"\"/>\r\n                <button onClick={this.show}>点我</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// function Demo3() {\r\n//     console.log('Demo3被调用了几次');  // 1+n 次\r\n\r\n//     const [count, setCount] = React.useState(0)\r\n//     // [count,setCount]:第一个参数为状态state,第二个为更新状态的方法\r\n\r\n//     const [name, setName] = React.useState('kobe')\r\n\r\n//     const [age, setAge] = React.useState(22)\r\n\r\n//     function add() {\r\n//         // setCount(count + 1) //第一种写法\r\n//         setCount(count => count + 1)\r\n//     }\r\n//     function changeName() {\r\n//         setName(name => name + '-bryant')\r\n//     }\r\n//     function changeAge() {\r\n//         setAge(33)\r\n//     }\r\n\r\n//     React.useEffect(() => {\r\n//         let timer = setInterval(() => {\r\n//             setCount(count => count + 1)\r\n//         }, 1000)\r\n//         return () => {\r\n//             clearInterval(timer)\r\n//         }\r\n//     }, [])\r\n//     // [count]不写该数组监测所有state,写谁就监测谁\r\n//     // 不写监测所有，相当于一上来就监测所有，相当于componentDidMount\r\n//     // 写谁就监测谁相当于谁更新了状态值，就触发，相当于componentDidUpdate\r\n//     // 这里useEffect的第一个参数，也就是这个回调函数的返回的函数相当于componentWillUnmount\r\n\r\n//     // 卸载组件的回调\r\n//     function unmount() {\r\n//         ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>当前求和为：{count}</h2>\r\n//             <h2>我的名字是：{name}</h2>\r\n//             <h2>我的年龄是：{age}</h2>\r\n//             <button onClick={add}>点我+1</button>\r\n//             <button onClick={changeName}>点我改名</button>\r\n//             <button onClick={changeAge}>点我改年龄</button>\r\n//             <button onClick={unmount}>卸载组件</button>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport default Demo3\r\n "]},"metadata":{},"sourceType":"module"}
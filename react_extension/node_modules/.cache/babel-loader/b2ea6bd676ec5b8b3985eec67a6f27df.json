{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { getFont } from '../../label/labelStyle';\nimport ZRText from 'zrender/lib/graphic/Text';\nvar PATH_COLOR = ['textStyle', 'color']; // TODO Performance improvement?\n\nvar tmpRichText = new ZRText();\n\nvar TextStyleMixin =\n/** @class */\nfunction () {\n  function TextStyleMixin() {}\n  /**\n   * Get color property or get color from option.textStyle.color\n   */\n  // TODO Callback\n\n\n  TextStyleMixin.prototype.getTextColor = function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  };\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n\n\n  TextStyleMixin.prototype.getFont = function () {\n    return getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  };\n\n  TextStyleMixin.prototype.getTextRect = function (text) {\n    tmpRichText.useStyle({\n      text: text,\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily'),\n      verticalAlign: this.getShallow('verticalAlign') || this.getShallow('baseline'),\n      padding: this.getShallow('padding'),\n      lineHeight: this.getShallow('lineHeight'),\n      rich: this.getShallow('rich')\n    });\n    tmpRichText.update();\n    return tmpRichText.getBoundingRect();\n  };\n\n  return TextStyleMixin;\n}();\n\n;\nexport default TextStyleMixin;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/model/mixin/textStyle.js"],"names":["getFont","ZRText","PATH_COLOR","tmpRichText","TextStyleMixin","prototype","getTextColor","isEmphasis","ecModel","getShallow","get","fontStyle","fontWeight","fontSize","fontFamily","getTextRect","text","useStyle","verticalAlign","padding","lineHeight","rich","update","getBoundingRect"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAT,QAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,IAAIC,UAAU,GAAG,CAAC,WAAD,EAAc,OAAd,CAAjB,C,CAAyC;;AAEzC,IAAIC,WAAW,GAAG,IAAIF,MAAJ,EAAlB;;AAEA,IAAIG,cAAc;AAClB;AACA,YAAY;AACV,WAASA,cAAT,GAA0B,CAAE;AAC5B;AACF;AACA;AACE;;;AAGAA,EAAAA,cAAc,CAACC,SAAf,CAAyBC,YAAzB,GAAwC,UAAUC,UAAV,EAAsB;AAC5D,QAAIC,OAAO,GAAG,KAAKA,OAAnB;AACA,WAAO,KAAKC,UAAL,CAAgB,OAAhB,MAA6B,CAACF,UAAD,IAAeC,OAAf,GAAyBA,OAAO,CAACE,GAAR,CAAYR,UAAZ,CAAzB,GAAmD,IAAhF,CAAP;AACD,GAHD;AAIA;AACF;AACA;AACA;;;AAGEE,EAAAA,cAAc,CAACC,SAAf,CAAyBL,OAAzB,GAAmC,YAAY;AAC7C,WAAOA,OAAO,CAAC;AACbW,MAAAA,SAAS,EAAE,KAAKF,UAAL,CAAgB,WAAhB,CADE;AAEbG,MAAAA,UAAU,EAAE,KAAKH,UAAL,CAAgB,YAAhB,CAFC;AAGbI,MAAAA,QAAQ,EAAE,KAAKJ,UAAL,CAAgB,UAAhB,CAHG;AAIbK,MAAAA,UAAU,EAAE,KAAKL,UAAL,CAAgB,YAAhB;AAJC,KAAD,EAKX,KAAKD,OALM,CAAd;AAMD,GAPD;;AASAJ,EAAAA,cAAc,CAACC,SAAf,CAAyBU,WAAzB,GAAuC,UAAUC,IAAV,EAAgB;AACrDb,IAAAA,WAAW,CAACc,QAAZ,CAAqB;AACnBD,MAAAA,IAAI,EAAEA,IADa;AAEnBL,MAAAA,SAAS,EAAE,KAAKF,UAAL,CAAgB,WAAhB,CAFQ;AAGnBG,MAAAA,UAAU,EAAE,KAAKH,UAAL,CAAgB,YAAhB,CAHO;AAInBI,MAAAA,QAAQ,EAAE,KAAKJ,UAAL,CAAgB,UAAhB,CAJS;AAKnBK,MAAAA,UAAU,EAAE,KAAKL,UAAL,CAAgB,YAAhB,CALO;AAMnBS,MAAAA,aAAa,EAAE,KAAKT,UAAL,CAAgB,eAAhB,KAAoC,KAAKA,UAAL,CAAgB,UAAhB,CANhC;AAOnBU,MAAAA,OAAO,EAAE,KAAKV,UAAL,CAAgB,SAAhB,CAPU;AAQnBW,MAAAA,UAAU,EAAE,KAAKX,UAAL,CAAgB,YAAhB,CARO;AASnBY,MAAAA,IAAI,EAAE,KAAKZ,UAAL,CAAgB,MAAhB;AATa,KAArB;AAWAN,IAAAA,WAAW,CAACmB,MAAZ;AACA,WAAOnB,WAAW,CAACoB,eAAZ,EAAP;AACD,GAdD;;AAgBA,SAAOnB,cAAP;AACD,CA5CD,EAFA;;AAgDA;AACA,eAAeA,cAAf","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { getFont } from '../../label/labelStyle';\nimport ZRText from 'zrender/lib/graphic/Text';\nvar PATH_COLOR = ['textStyle', 'color']; // TODO Performance improvement?\n\nvar tmpRichText = new ZRText();\n\nvar TextStyleMixin =\n/** @class */\nfunction () {\n  function TextStyleMixin() {}\n  /**\n   * Get color property or get color from option.textStyle.color\n   */\n  // TODO Callback\n\n\n  TextStyleMixin.prototype.getTextColor = function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  };\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n\n\n  TextStyleMixin.prototype.getFont = function () {\n    return getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  };\n\n  TextStyleMixin.prototype.getTextRect = function (text) {\n    tmpRichText.useStyle({\n      text: text,\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily'),\n      verticalAlign: this.getShallow('verticalAlign') || this.getShallow('baseline'),\n      padding: this.getShallow('padding'),\n      lineHeight: this.getShallow('lineHeight'),\n      rich: this.getShallow('rich')\n    });\n    tmpRichText.update();\n    return tmpRichText.getBoundingRect();\n  };\n\n  return TextStyleMixin;\n}();\n\n;\nexport default TextStyleMixin;"]},"metadata":{},"sourceType":"module"}
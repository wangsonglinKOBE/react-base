{"ast":null,"code":"import { __extends } from \"tslib\";\nimport Path from './Path';\n\nvar CompoundPath = function (_super) {\n  __extends(CompoundPath, _super);\n\n  function CompoundPath() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'compound';\n    return _this;\n  }\n\n  CompoundPath.prototype._updatePathDirty = function () {\n    var paths = this.shape.paths;\n    var dirtyPath = this.shapeChanged();\n\n    for (var i = 0; i < paths.length; i++) {\n      dirtyPath = dirtyPath || paths[i].shapeChanged();\n    }\n\n    if (dirtyPath) {\n      this.dirtyShape();\n    }\n  };\n\n  CompoundPath.prototype.beforeBrush = function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale();\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1], paths[i].segmentIgnoreThreshold);\n    }\n  };\n\n  CompoundPath.prototype.buildPath = function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  };\n\n  CompoundPath.prototype.afterBrush = function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].pathUpdated();\n    }\n  };\n\n  CompoundPath.prototype.getBoundingRect = function () {\n    this._updatePathDirty.call(this);\n\n    return Path.prototype.getBoundingRect.call(this);\n  };\n\n  return CompoundPath;\n}(Path);\n\nexport default CompoundPath;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/zrender/lib/graphic/CompoundPath.js"],"names":["__extends","Path","CompoundPath","_super","_this","apply","arguments","type","prototype","_updatePathDirty","paths","shape","dirtyPath","shapeChanged","i","length","dirtyShape","beforeBrush","scale","getGlobalScale","path","createPathProxy","setScale","segmentIgnoreThreshold","buildPath","ctx","afterBrush","pathUpdated","getBoundingRect","call"],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport Path from './Path';\nvar CompoundPath = (function (_super) {\n    __extends(CompoundPath, _super);\n    function CompoundPath() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'compound';\n        return _this;\n    }\n    CompoundPath.prototype._updatePathDirty = function () {\n        var paths = this.shape.paths;\n        var dirtyPath = this.shapeChanged();\n        for (var i = 0; i < paths.length; i++) {\n            dirtyPath = dirtyPath || paths[i].shapeChanged();\n        }\n        if (dirtyPath) {\n            this.dirtyShape();\n        }\n    };\n    CompoundPath.prototype.beforeBrush = function () {\n        this._updatePathDirty();\n        var paths = this.shape.paths || [];\n        var scale = this.getGlobalScale();\n        for (var i = 0; i < paths.length; i++) {\n            if (!paths[i].path) {\n                paths[i].createPathProxy();\n            }\n            paths[i].path.setScale(scale[0], scale[1], paths[i].segmentIgnoreThreshold);\n        }\n    };\n    CompoundPath.prototype.buildPath = function (ctx, shape) {\n        var paths = shape.paths || [];\n        for (var i = 0; i < paths.length; i++) {\n            paths[i].buildPath(ctx, paths[i].shape, true);\n        }\n    };\n    CompoundPath.prototype.afterBrush = function () {\n        var paths = this.shape.paths || [];\n        for (var i = 0; i < paths.length; i++) {\n            paths[i].pathUpdated();\n        }\n    };\n    CompoundPath.prototype.getBoundingRect = function () {\n        this._updatePathDirty.call(this);\n        return Path.prototype.getBoundingRect.call(this);\n    };\n    return CompoundPath;\n}(Path));\nexport default CompoundPath;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u684C\\u9762\\\\react\\u57FA\\u7840\\u539F\\u7406\\u5206\\u6790\\\\react_extension\\\\src\\\\components\\\\7_render-props\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Parent extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u6211\\u662FParent\\u7EC4\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(A, {\n        render: name => /*#__PURE__*/_jsxDEV(B, {\n          name: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass A extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: 'kobe'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"a\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u6211\\u662FA\\u7EC4\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), this.props.render(this.state.name)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass B extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"b\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u6211\\u662FB\\u7EC4\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), this.props.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n} // 当父子组件再爷爷beifen","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/src/components/7_render-props/index.jsx"],"names":["React","Component","Parent","render","name","A","state","props","B"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;;AAEA,eAAe,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC1CE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,CAAD;AAAG,QAAA,MAAM,EAAEC,IAAI,iBAAI,QAAC,CAAD;AAAG,UAAA,IAAI,EAAEA;AAAT;AAAA;AAAA;AAAA;AAAA;AAAnB;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAlByC;;AAqB9C,MAAMC,CAAN,SAAgBJ,SAAhB,CAA0B;AAAA;AAAA;AAAA,SACtBK,KADsB,GACd;AAACF,MAAAA,IAAI,EAAE;AAAP,KADc;AAAA;;AAEtBD,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,GAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAIK,KAAKI,KAAL,CAAWJ,MAAX,CAAkB,KAAKG,KAAL,CAAWF,IAA7B,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAbqB;;AAgB1B,MAAMI,CAAN,SAAgBP,SAAhB,CAA0B;AACtBE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,GAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKI,KAAL,CAAWH,IAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AARqB,C,CAW1B","sourcesContent":["import React, { Component } from 'react'\r\nimport './index.css'\r\n\r\nexport default class Parent extends Component {\r\n    render() {\r\n        return (\r\n            <div className='parent'>\r\n                <h3>我是Parent组件</h3>\r\n                {\r\n                /* 首先一看到一个组件的props定义为了render，那么他就是render props了，这是程序员们心照不宣的反射\r\n                   其实没什么高大上的，就是给A组件传了一个名为render的props，只是这个render是一个函数，返回的是一个组件，\r\n                   你想让A组件中预留的位置展示谁，你就返回对应的组件\r\n                   在A组件中也就是父组件中会调用render函数，顺便可以传参，B组件将参数作为自己的props\r\n                 */}\r\n                <A render={name => <B name={name}/>} /> \r\n\r\n                {/* <A>\r\n                    <B/>\r\n                </A> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass A extends Component {\r\n    state = {name: 'kobe'}\r\n    render() {\r\n        return (\r\n            <div className=\"a\">\r\n                <h3>我是A组件</h3>\r\n                {/* 下面就是在A组件中预留了一个位置，相当于插槽，你传入谁谁就展示在这，\r\n                并且还给展示在这的组件传入了A组件的状态 */}\r\n                {this.props.render(this.state.name)}\r\n\r\n                {/* {this.props.children} */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass B extends Component {\r\n    render() {\r\n        return (\r\n            <div className='b'>\r\n                <h3>我是B组件</h3>\r\n                {this.props.name}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// 当父子组件再爷爷beifen"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nexport default function radarLayout(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n    zrUtil.each(axes, function (axis, axisIndex) {\n      data.each(data.mapDimension(axes[axisIndex].dim), function (val, dataIndex) {\n        points[dataIndex] = points[dataIndex] || [];\n        var point = coordSys.dataToPoint(val, axisIndex);\n        points[dataIndex][axisIndex] = isValidPoint(point) ? point : getValueMissingPoint(coordSys);\n      });\n    }); // Close polygon\n\n    data.each(function (idx) {\n      // TODO\n      // Is it appropriate to connect to the next data when some data is missing?\n      // Or, should trade it like `connectNull` in line chart?\n      var firstPoint = zrUtil.find(points[idx], function (point) {\n        return isValidPoint(point);\n      }) || getValueMissingPoint(coordSys); // Copy the first actual point to the end of the array\n\n      points[idx].push(firstPoint.slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nfunction isValidPoint(point) {\n  return !isNaN(point[0]) && !isNaN(point[1]);\n}\n\nfunction getValueMissingPoint(coordSys) {\n  // It is error-prone to input [NaN, NaN] into polygon, polygon.\n  // (probably cause problem when refreshing or animating)\n  return [coordSys.cx, coordSys.cy];\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/chart/radar/radarLayout.js"],"names":["zrUtil","radarLayout","ecModel","eachSeriesByType","seriesModel","data","getData","points","coordSys","coordinateSystem","axes","getIndicatorAxes","each","axis","axisIndex","mapDimension","dim","val","dataIndex","point","dataToPoint","isValidPoint","getValueMissingPoint","idx","firstPoint","find","push","slice","setItemLayout","isNaN","cx","cy"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,MAAZ,MAAwB,uBAAxB;AACA,eAAe,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AAC3CA,EAAAA,OAAO,CAACC,gBAAR,CAAyB,OAAzB,EAAkC,UAAUC,WAAV,EAAuB;AACvD,QAAIC,IAAI,GAAGD,WAAW,CAACE,OAAZ,EAAX;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,QAAQ,GAAGJ,WAAW,CAACK,gBAA3B;;AAEA,QAAI,CAACD,QAAL,EAAe;AACb;AACD;;AAED,QAAIE,IAAI,GAAGF,QAAQ,CAACG,gBAAT,EAAX;AACAX,IAAAA,MAAM,CAACY,IAAP,CAAYF,IAAZ,EAAkB,UAAUG,IAAV,EAAgBC,SAAhB,EAA2B;AAC3CT,MAAAA,IAAI,CAACO,IAAL,CAAUP,IAAI,CAACU,YAAL,CAAkBL,IAAI,CAACI,SAAD,CAAJ,CAAgBE,GAAlC,CAAV,EAAkD,UAAUC,GAAV,EAAeC,SAAf,EAA0B;AAC1EX,QAAAA,MAAM,CAACW,SAAD,CAAN,GAAoBX,MAAM,CAACW,SAAD,CAAN,IAAqB,EAAzC;AACA,YAAIC,KAAK,GAAGX,QAAQ,CAACY,WAAT,CAAqBH,GAArB,EAA0BH,SAA1B,CAAZ;AACAP,QAAAA,MAAM,CAACW,SAAD,CAAN,CAAkBJ,SAAlB,IAA+BO,YAAY,CAACF,KAAD,CAAZ,GAAsBA,KAAtB,GAA8BG,oBAAoB,CAACd,QAAD,CAAjF;AACD,OAJD;AAKD,KAND,EAVuD,CAgBnD;;AAEJH,IAAAA,IAAI,CAACO,IAAL,CAAU,UAAUW,GAAV,EAAe;AACvB;AACA;AACA;AACA,UAAIC,UAAU,GAAGxB,MAAM,CAACyB,IAAP,CAAYlB,MAAM,CAACgB,GAAD,CAAlB,EAAyB,UAAUJ,KAAV,EAAiB;AACzD,eAAOE,YAAY,CAACF,KAAD,CAAnB;AACD,OAFgB,KAEXG,oBAAoB,CAACd,QAAD,CAF1B,CAJuB,CAMe;;AAEtCD,MAAAA,MAAM,CAACgB,GAAD,CAAN,CAAYG,IAAZ,CAAiBF,UAAU,CAACG,KAAX,EAAjB;AACAtB,MAAAA,IAAI,CAACuB,aAAL,CAAmBL,GAAnB,EAAwBhB,MAAM,CAACgB,GAAD,CAA9B;AACD,KAVD;AAWD,GA7BD;AA8BD;;AAED,SAASF,YAAT,CAAsBF,KAAtB,EAA6B;AAC3B,SAAO,CAACU,KAAK,CAACV,KAAK,CAAC,CAAD,CAAN,CAAN,IAAoB,CAACU,KAAK,CAACV,KAAK,CAAC,CAAD,CAAN,CAAjC;AACD;;AAED,SAASG,oBAAT,CAA8Bd,QAA9B,EAAwC;AACtC;AACA;AACA,SAAO,CAACA,QAAQ,CAACsB,EAAV,EAActB,QAAQ,CAACuB,EAAvB,CAAP;AACD","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nexport default function radarLayout(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n    zrUtil.each(axes, function (axis, axisIndex) {\n      data.each(data.mapDimension(axes[axisIndex].dim), function (val, dataIndex) {\n        points[dataIndex] = points[dataIndex] || [];\n        var point = coordSys.dataToPoint(val, axisIndex);\n        points[dataIndex][axisIndex] = isValidPoint(point) ? point : getValueMissingPoint(coordSys);\n      });\n    }); // Close polygon\n\n    data.each(function (idx) {\n      // TODO\n      // Is it appropriate to connect to the next data when some data is missing?\n      // Or, should trade it like `connectNull` in line chart?\n      var firstPoint = zrUtil.find(points[idx], function (point) {\n        return isValidPoint(point);\n      }) || getValueMissingPoint(coordSys); // Copy the first actual point to the end of the array\n\n      points[idx].push(firstPoint.slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nfunction isValidPoint(point) {\n  return !isNaN(point[0]) && !isNaN(point[1]);\n}\n\nfunction getValueMissingPoint(coordSys) {\n  // It is error-prone to input [NaN, NaN] into polygon, polygon.\n  // (probably cause problem when refreshing or animating)\n  return [coordSys.cx, coordSys.cy];\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nexport function getItemVisualFromData(data, dataIndex, key) {\n  switch (key) {\n    case 'color':\n      var style = data.getItemVisual(dataIndex, 'style');\n      return style[data.getVisual('drawType')];\n\n    case 'opacity':\n      return data.getItemVisual(dataIndex, 'style').opacity;\n\n    case 'symbol':\n    case 'symbolSize':\n    case 'liftZ':\n      return data.getItemVisual(dataIndex, key);\n\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\"Unknown visual type \" + key);\n      }\n\n  }\n}\nexport function getVisualFromData(data, key) {\n  switch (key) {\n    case 'color':\n      var style = data.getVisual('style');\n      return style[data.getVisual('drawType')];\n\n    case 'opacity':\n      return data.getVisual('style').opacity;\n\n    case 'symbol':\n    case 'symbolSize':\n    case 'liftZ':\n      return data.getVisual(key);\n\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\"Unknown visual type \" + key);\n      }\n\n  }\n}\nexport function setItemVisualFromData(data, dataIndex, key, value) {\n  switch (key) {\n    case 'color':\n      // Make sure not sharing style object.\n      var style = data.ensureUniqueItemVisual(dataIndex, 'style');\n      style[data.getVisual('drawType')] = value; // Mark the color has been changed, not from palette anymore\n\n      data.setItemVisual(dataIndex, 'colorFromPalette', false);\n      break;\n\n    case 'opacity':\n      data.ensureUniqueItemVisual(dataIndex, 'style').opacity = value;\n      break;\n\n    case 'symbol':\n    case 'symbolSize':\n    case 'liftZ':\n      data.setItemVisual(dataIndex, key, value);\n      break;\n\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\"Unknown visual type \" + key);\n      }\n\n  }\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/visual/helper.js"],"names":["getItemVisualFromData","data","dataIndex","key","style","getItemVisual","getVisual","opacity","process","env","NODE_ENV","console","warn","getVisualFromData","setItemVisualFromData","value","ensureUniqueItemVisual","setItemVisual"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,qBAAT,CAA+BC,IAA/B,EAAqCC,SAArC,EAAgDC,GAAhD,EAAqD;AAC1D,UAAQA,GAAR;AACE,SAAK,OAAL;AACE,UAAIC,KAAK,GAAGH,IAAI,CAACI,aAAL,CAAmBH,SAAnB,EAA8B,OAA9B,CAAZ;AACA,aAAOE,KAAK,CAACH,IAAI,CAACK,SAAL,CAAe,UAAf,CAAD,CAAZ;;AAEF,SAAK,SAAL;AACE,aAAOL,IAAI,CAACI,aAAL,CAAmBH,SAAnB,EAA8B,OAA9B,EAAuCK,OAA9C;;AAEF,SAAK,QAAL;AACA,SAAK,YAAL;AACA,SAAK,OAAL;AACE,aAAON,IAAI,CAACI,aAAL,CAAmBH,SAAnB,EAA8BC,GAA9B,CAAP;;AAEF;AACE,UAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,QAAAA,OAAO,CAACC,IAAR,CAAa,yBAAyBT,GAAtC;AACD;;AAhBL;AAmBD;AACD,OAAO,SAASU,iBAAT,CAA2BZ,IAA3B,EAAiCE,GAAjC,EAAsC;AAC3C,UAAQA,GAAR;AACE,SAAK,OAAL;AACE,UAAIC,KAAK,GAAGH,IAAI,CAACK,SAAL,CAAe,OAAf,CAAZ;AACA,aAAOF,KAAK,CAACH,IAAI,CAACK,SAAL,CAAe,UAAf,CAAD,CAAZ;;AAEF,SAAK,SAAL;AACE,aAAOL,IAAI,CAACK,SAAL,CAAe,OAAf,EAAwBC,OAA/B;;AAEF,SAAK,QAAL;AACA,SAAK,YAAL;AACA,SAAK,OAAL;AACE,aAAON,IAAI,CAACK,SAAL,CAAeH,GAAf,CAAP;;AAEF;AACE,UAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,QAAAA,OAAO,CAACC,IAAR,CAAa,yBAAyBT,GAAtC;AACD;;AAhBL;AAmBD;AACD,OAAO,SAASW,qBAAT,CAA+Bb,IAA/B,EAAqCC,SAArC,EAAgDC,GAAhD,EAAqDY,KAArD,EAA4D;AACjE,UAAQZ,GAAR;AACE,SAAK,OAAL;AACE;AACA,UAAIC,KAAK,GAAGH,IAAI,CAACe,sBAAL,CAA4Bd,SAA5B,EAAuC,OAAvC,CAAZ;AACAE,MAAAA,KAAK,CAACH,IAAI,CAACK,SAAL,CAAe,UAAf,CAAD,CAAL,GAAoCS,KAApC,CAHF,CAG6C;;AAE3Cd,MAAAA,IAAI,CAACgB,aAAL,CAAmBf,SAAnB,EAA8B,kBAA9B,EAAkD,KAAlD;AACA;;AAEF,SAAK,SAAL;AACED,MAAAA,IAAI,CAACe,sBAAL,CAA4Bd,SAA5B,EAAuC,OAAvC,EAAgDK,OAAhD,GAA0DQ,KAA1D;AACA;;AAEF,SAAK,QAAL;AACA,SAAK,YAAL;AACA,SAAK,OAAL;AACEd,MAAAA,IAAI,CAACgB,aAAL,CAAmBf,SAAnB,EAA8BC,GAA9B,EAAmCY,KAAnC;AACA;;AAEF;AACE,UAAIP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,QAAAA,OAAO,CAACC,IAAR,CAAa,yBAAyBT,GAAtC;AACD;;AAtBL;AAyBD","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nexport function getItemVisualFromData(data, dataIndex, key) {\n  switch (key) {\n    case 'color':\n      var style = data.getItemVisual(dataIndex, 'style');\n      return style[data.getVisual('drawType')];\n\n    case 'opacity':\n      return data.getItemVisual(dataIndex, 'style').opacity;\n\n    case 'symbol':\n    case 'symbolSize':\n    case 'liftZ':\n      return data.getItemVisual(dataIndex, key);\n\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\"Unknown visual type \" + key);\n      }\n\n  }\n}\nexport function getVisualFromData(data, key) {\n  switch (key) {\n    case 'color':\n      var style = data.getVisual('style');\n      return style[data.getVisual('drawType')];\n\n    case 'opacity':\n      return data.getVisual('style').opacity;\n\n    case 'symbol':\n    case 'symbolSize':\n    case 'liftZ':\n      return data.getVisual(key);\n\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\"Unknown visual type \" + key);\n      }\n\n  }\n}\nexport function setItemVisualFromData(data, dataIndex, key, value) {\n  switch (key) {\n    case 'color':\n      // Make sure not sharing style object.\n      var style = data.ensureUniqueItemVisual(dataIndex, 'style');\n      style[data.getVisual('drawType')] = value; // Mark the color has been changed, not from palette anymore\n\n      data.setItemVisual(dataIndex, 'colorFromPalette', false);\n      break;\n\n    case 'opacity':\n      data.ensureUniqueItemVisual(dataIndex, 'style').opacity = value;\n      break;\n\n    case 'symbol':\n    case 'symbolSize':\n    case 'liftZ':\n      data.setItemVisual(dataIndex, key, value);\n      break;\n\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\"Unknown visual type \" + key);\n      }\n\n  }\n}"]},"metadata":{},"sourceType":"module"}
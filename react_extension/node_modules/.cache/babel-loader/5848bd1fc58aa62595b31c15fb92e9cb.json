{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nconst FriendStatus = props => {\n  _s();\n\n  const useExample = useFriendStatus(props.friend.id);\n};\n\n_s(FriendStatus, \"nksHFNtLn5h3dN0FLLxkxZJapHk=\", true);\n\n_c = FriendStatus;\nexport default FriendStatus; // export const useExample = friendID => {\n//     const [isOnline, setIsOnline] = useState(null)\n//     handleStatusChange = status => {\n//         setIsOnline(status.isOnline)\n//     }\n//     useEffect(() => {\n//         ChatAPI.subscribeToFriendStatus(friendID, handleStatusChange)\n//         return () => {\n//             ChatAPI.unsubscribeFromFriendStatus(friendID, handleStatusChange);\n//         }\n//     })\n//     return isOnline\n// }\n// export default function Example(props) {\n//     const [count, setCount] = useState(0)\n//     useEffect(() => {\n//         document.title = `你点击了 ${count} 次按钮`\n//     })\n//     const [isOnline, setIsOnline] = useState(null)\n//     useEffect(() => {\n//         ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange)\n//         return () => {\n//             ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange)\n//         }\n//     })\n//     handleStatusChange = status => {\n//         setIsOnline(status.isOnline)\n//     }\n//     return (\n//         <div>\n//             <p>你点击了 {count} 次按钮</p>\n//             <button onClick={() => setCount(count + 1)} > 点我 </button>\n//         </div>\n//     )\n// }\n// export default function Example(props) {\n//     const [isOnline, setIsOnline] = useState(null)\n//     handleStatusChange = status => {\n//         setIsOnline(status.isOnline)\n//     }\n//     useEffect(() => {\n//         ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange)\n//         return () => {\n//             ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange)\n//         }\n//     }, [props.friend.id])\n//     if (isOnline === null) {\n//         return 'Loading...'\n//     }\n//     return isOnline ? 'Online' : 'Offline'\n// }\n// export default function Example() {\n//     const [count, setCount] = useState(0)\n//     // 相当于 componentDidMount 和 componentDidUpdate\n//     useEffect(() => {\n//         // 使用浏览器的API更新页面标题\n//         document.title = `你点击了 ${count} 次按钮`\n//     })\n//     return (\n//         <div>\n//             <p>你点击了 {count} 次按钮</p>\n//             <button onClick={() => setCount(count + 1)} > 点我 </button>\n//         </div>\n//     )\n// }\n// export default function Example() {\n//     // 声明一个新的 \"state\"变量 “count” \n//     const [count, setCount] = useState(0)\n//     return (\n//         <div>\n//             <p>你点击了 {count} 次按钮</p>\n//             <button onClick={() => setCount(count + 1)} > 点我 </button>\n//         </div>\n//     )\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendStatus\");","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/src/components/001_hooks初识/index.jsx"],"names":["React","useState","useEffect","FriendStatus","props","useExample","useFriendStatus","friend","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAMC,UAAU,GAAGC,eAAe,CAACF,KAAK,CAACG,MAAN,CAAaC,EAAd,CAAlC;AACH,CAFD;;GAAML,Y;;KAAAA,Y;AAIN,eAAeA,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst FriendStatus = props => {\r\n    const useExample = useFriendStatus(props.friend.id)\r\n}\r\n\r\nexport default FriendStatus\r\n\r\n// export const useExample = friendID => {\r\n//     const [isOnline, setIsOnline] = useState(null)\r\n//     handleStatusChange = status => {\r\n//         setIsOnline(status.isOnline)\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         ChatAPI.subscribeToFriendStatus(friendID, handleStatusChange)\r\n//         return () => {\r\n//             ChatAPI.unsubscribeFromFriendStatus(friendID, handleStatusChange);\r\n//         }\r\n//     })\r\n//     return isOnline\r\n// }\r\n\r\n// export default function Example(props) {\r\n\r\n//     const [count, setCount] = useState(0)\r\n//     useEffect(() => {\r\n//         document.title = `你点击了 ${count} 次按钮`\r\n//     })\r\n\r\n//     const [isOnline, setIsOnline] = useState(null)\r\n//     useEffect(() => {\r\n//         ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange)\r\n//         return () => {\r\n//             ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange)\r\n//         }\r\n//     })\r\n\r\n//     handleStatusChange = status => {\r\n//         setIsOnline(status.isOnline)\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <p>你点击了 {count} 次按钮</p>\r\n//             <button onClick={() => setCount(count + 1)} > 点我 </button>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default function Example(props) {\r\n//     const [isOnline, setIsOnline] = useState(null)\r\n\r\n//     handleStatusChange = status => {\r\n//         setIsOnline(status.isOnline)\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange)\r\n//         return () => {\r\n//             ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange)\r\n//         }\r\n//     }, [props.friend.id])\r\n\r\n//     if (isOnline === null) {\r\n//         return 'Loading...'\r\n//     }\r\n\r\n//     return isOnline ? 'Online' : 'Offline'\r\n// }\r\n\r\n// export default function Example() {\r\n//     const [count, setCount] = useState(0)\r\n\r\n//     // 相当于 componentDidMount 和 componentDidUpdate\r\n//     useEffect(() => {\r\n//         // 使用浏览器的API更新页面标题\r\n//         document.title = `你点击了 ${count} 次按钮`\r\n//     })\r\n\r\n//     return (\r\n//         <div>\r\n//             <p>你点击了 {count} 次按钮</p>\r\n//             <button onClick={() => setCount(count + 1)} > 点我 </button>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default function Example() {\r\n\r\n//     // 声明一个新的 \"state\"变量 “count” \r\n//     const [count, setCount] = useState(0)\r\n//     return (\r\n//         <div>\r\n//             <p>你点击了 {count} 次按钮</p>\r\n//             <button onClick={() => setCount(count + 1)} > 点我 </button>\r\n//         </div>\r\n//     )\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { isArray, each } from 'zrender/lib/core/util';\nimport * as vector from 'zrender/lib/core/vector';\nimport * as symbolUtil from '../../util/symbol';\nimport ECLinePath from './LinePath';\nimport * as graphic from '../../util/graphic';\nimport { enableHoverEmphasis, enterEmphasis, leaveEmphasis, SPECIAL_STATES } from '../../util/states';\nimport { getLabelStatesModels, setLabelStyle } from '../../label/labelStyle';\nimport { round } from '../../util/number';\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var symbolType = lineData.getItemVisual(idx, name);\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n  var symbolRotate = lineData.getItemVisual(idx, name + 'Rotate');\n  var symbolOffset = lineData.getItemVisual(idx, name + 'Offset');\n  var symbolKeepAspect = lineData.getItemVisual(idx, name + 'KeepAspect');\n  var symbolSizeArr = symbolUtil.normalizeSymbolSize(symbolSize);\n  var symbolOffsetArr = symbolUtil.normalizeSymbolOffset(symbolOffset || 0, symbolSizeArr);\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSizeArr[0] / 2 + symbolOffsetArr[0], -symbolSizeArr[1] / 2 + symbolOffsetArr[1], symbolSizeArr[0], symbolSizeArr[1], null, symbolKeepAspect);\n  symbolPath.__specifiedRotation = symbolRotate == null || isNaN(symbolRotate) ? void 0 : +symbolRotate * Math.PI / 180 || 0;\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new ECLinePath({\n    name: 'line',\n    subPixelOptimize: true\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  targetShape.x1 = points[0][0];\n  targetShape.y1 = points[0][1];\n  targetShape.x2 = points[1][0];\n  targetShape.y2 = points[1][1];\n  targetShape.percent = 1;\n  var cp1 = points[2];\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nvar Line =\n/** @class */\nfunction (_super) {\n  __extends(Line, _super);\n\n  function Line(lineData, idx, seriesScope) {\n    var _this = _super.call(this) || this;\n\n    _this._createLine(lineData, idx, seriesScope);\n\n    return _this;\n  }\n\n  Line.prototype._createLine = function (lineData, idx, seriesScope) {\n    var seriesModel = lineData.hostModel;\n    var linePoints = lineData.getItemLayout(idx);\n    var line = createLine(linePoints);\n    line.shape.percent = 0;\n    graphic.initProps(line, {\n      shape: {\n        percent: 1\n      }\n    }, seriesModel, idx);\n    this.add(line);\n    each(SYMBOL_CATEGORIES, function (symbolCategory) {\n      var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n      // it will be updated after line#update.\n      // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n      this.add(symbol);\n      this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n    }, this);\n\n    this._updateCommonStl(lineData, idx, seriesScope);\n  }; // TODO More strict on the List type in parameters?\n\n\n  Line.prototype.updateData = function (lineData, idx, seriesScope) {\n    var seriesModel = lineData.hostModel;\n    var line = this.childOfName('line');\n    var linePoints = lineData.getItemLayout(idx);\n    var target = {\n      shape: {}\n    };\n    setLinePoints(target.shape, linePoints);\n    graphic.updateProps(line, target, seriesModel, idx);\n    each(SYMBOL_CATEGORIES, function (symbolCategory) {\n      var symbolType = lineData.getItemVisual(idx, symbolCategory);\n      var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n      if (this[key] !== symbolType) {\n        this.remove(this.childOfName(symbolCategory));\n        var symbol = createSymbol(symbolCategory, lineData, idx);\n        this.add(symbol);\n      }\n\n      this[key] = symbolType;\n    }, this);\n\n    this._updateCommonStl(lineData, idx, seriesScope);\n  };\n\n  ;\n\n  Line.prototype.getLinePath = function () {\n    return this.childAt(0);\n  };\n\n  Line.prototype._updateCommonStl = function (lineData, idx, seriesScope) {\n    var seriesModel = lineData.hostModel;\n    var line = this.childOfName('line');\n    var emphasisLineStyle = seriesScope && seriesScope.emphasisLineStyle;\n    var blurLineStyle = seriesScope && seriesScope.blurLineStyle;\n    var selectLineStyle = seriesScope && seriesScope.selectLineStyle;\n    var labelStatesModels = seriesScope && seriesScope.labelStatesModels; // Optimization for large dataset\n\n    if (!seriesScope || lineData.hasItemOption) {\n      var itemModel = lineData.getItemModel(idx);\n      emphasisLineStyle = itemModel.getModel(['emphasis', 'lineStyle']).getLineStyle();\n      blurLineStyle = itemModel.getModel(['blur', 'lineStyle']).getLineStyle();\n      selectLineStyle = itemModel.getModel(['select', 'lineStyle']).getLineStyle();\n      labelStatesModels = getLabelStatesModels(itemModel);\n    }\n\n    var lineStyle = lineData.getItemVisual(idx, 'style');\n    var visualColor = lineStyle.stroke;\n    line.useStyle(lineStyle);\n    line.style.fill = null;\n    line.style.strokeNoScale = true;\n    line.ensureState('emphasis').style = emphasisLineStyle;\n    line.ensureState('blur').style = blurLineStyle;\n    line.ensureState('select').style = selectLineStyle; // Update symbol\n\n    each(SYMBOL_CATEGORIES, function (symbolCategory) {\n      var symbol = this.childOfName(symbolCategory);\n\n      if (symbol) {\n        // Share opacity and color with line.\n        symbol.setColor(visualColor);\n        symbol.style.opacity = lineStyle.opacity;\n\n        for (var i = 0; i < SPECIAL_STATES.length; i++) {\n          var stateName = SPECIAL_STATES[i];\n          var lineState = line.getState(stateName);\n\n          if (lineState) {\n            var lineStateStyle = lineState.style || {};\n            var state = symbol.ensureState(stateName);\n            var stateStyle = state.style || (state.style = {});\n\n            if (lineStateStyle.stroke != null) {\n              stateStyle[symbol.__isEmptyBrush ? 'stroke' : 'fill'] = lineStateStyle.stroke;\n            }\n\n            if (lineStateStyle.opacity != null) {\n              stateStyle.opacity = lineStateStyle.opacity;\n            }\n          }\n        }\n\n        symbol.markRedraw();\n      }\n    }, this);\n    var rawVal = seriesModel.getRawValue(idx);\n    setLabelStyle(this, labelStatesModels, {\n      labelDataIndex: idx,\n      labelFetcher: {\n        getFormattedLabel: function (dataIndex, stateName) {\n          return seriesModel.getFormattedLabel(dataIndex, stateName, lineData.dataType);\n        }\n      },\n      inheritColor: visualColor || '#000',\n      defaultOpacity: lineStyle.opacity,\n      defaultText: (rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal) + ''\n    });\n    var label = this.getTextContent(); // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n\n    if (label) {\n      var labelNormalModel = labelStatesModels.normal;\n      label.__align = label.style.align;\n      label.__verticalAlign = label.style.verticalAlign; // 'start', 'middle', 'end'\n\n      label.__position = labelNormalModel.get('position') || 'middle';\n      var distance = labelNormalModel.get('distance');\n\n      if (!isArray(distance)) {\n        distance = [distance, distance];\n      }\n\n      label.__labelDistance = distance;\n    }\n\n    this.setTextConfig({\n      position: null,\n      local: true,\n      inside: false // Can't be inside for stroke element.\n\n    });\n    enableHoverEmphasis(this);\n  };\n\n  Line.prototype.highlight = function () {\n    enterEmphasis(this);\n  };\n\n  Line.prototype.downplay = function () {\n    leaveEmphasis(this);\n  };\n\n  Line.prototype.updateLayout = function (lineData, idx) {\n    this.setLinePoints(lineData.getItemLayout(idx));\n  };\n\n  Line.prototype.setLinePoints = function (points) {\n    var linePath = this.childOfName('line');\n    setLinePoints(linePath.shape, points);\n    linePath.dirty();\n  };\n\n  Line.prototype.beforeUpdate = function () {\n    var lineGroup = this;\n    var symbolFrom = lineGroup.childOfName('fromSymbol');\n    var symbolTo = lineGroup.childOfName('toSymbol');\n    var label = lineGroup.getTextContent(); // Quick reject\n\n    if (!symbolFrom && !symbolTo && (!label || label.ignore)) {\n      return;\n    }\n\n    var invScale = 1;\n    var parentNode = this.parent;\n\n    while (parentNode) {\n      if (parentNode.scaleX) {\n        invScale /= parentNode.scaleX;\n      }\n\n      parentNode = parentNode.parent;\n    }\n\n    var line = lineGroup.childOfName('line'); // If line not changed\n    // FIXME Parent scale changed\n\n    if (!this.__dirty && !line.__dirty) {\n      return;\n    }\n\n    var percent = line.shape.percent;\n    var fromPos = line.pointAt(0);\n    var toPos = line.pointAt(percent);\n    var d = vector.sub([], toPos, fromPos);\n    vector.normalize(d, d);\n\n    function setSymbolRotation(symbol, percent) {\n      // Fix #12388\n      // when symbol is set to be 'arrow' in markLine,\n      // symbolRotate value will be ignored, and compulsively use tangent angle.\n      // rotate by default if symbol rotation is not specified\n      var specifiedRotation = symbol.__specifiedRotation;\n\n      if (specifiedRotation == null) {\n        var tangent = line.tangentAt(percent);\n        symbol.attr('rotation', (percent === 1 ? -1 : 1) * Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n      } else {\n        symbol.attr('rotation', specifiedRotation);\n      }\n    }\n\n    if (symbolFrom) {\n      symbolFrom.setPosition(fromPos);\n      setSymbolRotation(symbolFrom, 0);\n      symbolFrom.scaleX = symbolFrom.scaleY = invScale * percent;\n      symbolFrom.markRedraw();\n    }\n\n    if (symbolTo) {\n      symbolTo.setPosition(toPos);\n      setSymbolRotation(symbolTo, 1);\n      symbolTo.scaleX = symbolTo.scaleY = invScale * percent;\n      symbolTo.markRedraw();\n    }\n\n    if (label && !label.ignore) {\n      label.x = label.y = 0;\n      label.originX = label.originY = 0;\n      var textAlign = void 0;\n      var textVerticalAlign = void 0;\n      var distance = label.__labelDistance;\n      var distanceX = distance[0] * invScale;\n      var distanceY = distance[1] * invScale;\n      var halfPercent = percent / 2;\n      var tangent = line.tangentAt(halfPercent);\n      var n = [tangent[1], -tangent[0]];\n      var cp = line.pointAt(halfPercent);\n\n      if (n[1] > 0) {\n        n[0] = -n[0];\n        n[1] = -n[1];\n      }\n\n      var dir = tangent[0] < 0 ? -1 : 1;\n\n      if (label.__position !== 'start' && label.__position !== 'end') {\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.rotation = rotation;\n      }\n\n      var dy = void 0;\n\n      switch (label.__position) {\n        case 'insideStartTop':\n        case 'insideMiddleTop':\n        case 'insideEndTop':\n        case 'middle':\n          dy = -distanceY;\n          textVerticalAlign = 'bottom';\n          break;\n\n        case 'insideStartBottom':\n        case 'insideMiddleBottom':\n        case 'insideEndBottom':\n          dy = distanceY;\n          textVerticalAlign = 'top';\n          break;\n\n        default:\n          dy = 0;\n          textVerticalAlign = 'middle';\n      }\n\n      switch (label.__position) {\n        case 'end':\n          label.x = d[0] * distanceX + toPos[0];\n          label.y = d[1] * distanceY + toPos[1];\n          textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n          break;\n\n        case 'start':\n          label.x = -d[0] * distanceX + fromPos[0];\n          label.y = -d[1] * distanceY + fromPos[1];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n          break;\n\n        case 'insideStartTop':\n        case 'insideStart':\n        case 'insideStartBottom':\n          label.x = distanceX * dir + fromPos[0];\n          label.y = fromPos[1] + dy;\n          textAlign = tangent[0] < 0 ? 'right' : 'left';\n          label.originX = -distanceX * dir;\n          label.originY = -dy;\n          break;\n\n        case 'insideMiddleTop':\n        case 'insideMiddle':\n        case 'insideMiddleBottom':\n        case 'middle':\n          label.x = cp[0];\n          label.y = cp[1] + dy;\n          textAlign = 'center';\n          label.originY = -dy;\n          break;\n\n        case 'insideEndTop':\n        case 'insideEnd':\n        case 'insideEndBottom':\n          label.x = -distanceX * dir + toPos[0];\n          label.y = toPos[1] + dy;\n          textAlign = tangent[0] >= 0 ? 'right' : 'left';\n          label.originX = distanceX * dir;\n          label.originY = -dy;\n          break;\n      }\n\n      label.scaleX = label.scaleY = invScale;\n      label.setStyle({\n        // Use the user specified text align and baseline first\n        verticalAlign: label.__verticalAlign || textVerticalAlign,\n        align: label.__align || textAlign\n      });\n    }\n  };\n\n  return Line;\n}(graphic.Group);\n\nexport default Line;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/chart/helper/Line.js"],"names":["__extends","isArray","each","vector","symbolUtil","ECLinePath","graphic","enableHoverEmphasis","enterEmphasis","leaveEmphasis","SPECIAL_STATES","getLabelStatesModels","setLabelStyle","round","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","createSymbol","name","lineData","idx","symbolType","getItemVisual","symbolSize","symbolRotate","symbolOffset","symbolKeepAspect","symbolSizeArr","normalizeSymbolSize","symbolOffsetArr","normalizeSymbolOffset","symbolPath","__specifiedRotation","isNaN","Math","PI","createLine","points","line","subPixelOptimize","setLinePoints","shape","targetShape","x1","y1","x2","y2","percent","cp1","cpx1","cpy1","NaN","Line","_super","seriesScope","_this","call","_createLine","prototype","seriesModel","hostModel","linePoints","getItemLayout","initProps","add","symbol","_updateCommonStl","updateData","childOfName","target","updateProps","key","remove","getLinePath","childAt","emphasisLineStyle","blurLineStyle","selectLineStyle","labelStatesModels","hasItemOption","itemModel","getItemModel","getModel","getLineStyle","lineStyle","visualColor","stroke","useStyle","style","fill","strokeNoScale","ensureState","setColor","opacity","i","length","stateName","lineState","getState","lineStateStyle","state","stateStyle","__isEmptyBrush","markRedraw","rawVal","getRawValue","labelDataIndex","labelFetcher","getFormattedLabel","dataIndex","dataType","inheritColor","defaultOpacity","defaultText","getName","isFinite","label","getTextContent","labelNormalModel","normal","__align","align","__verticalAlign","verticalAlign","__position","get","distance","__labelDistance","setTextConfig","position","local","inside","highlight","downplay","updateLayout","linePath","dirty","beforeUpdate","lineGroup","symbolFrom","symbolTo","ignore","invScale","parentNode","parent","scaleX","__dirty","fromPos","pointAt","toPos","d","sub","normalize","setSymbolRotation","specifiedRotation","tangent","tangentAt","attr","atan2","setPosition","scaleY","x","y","originX","originY","textAlign","textVerticalAlign","distanceX","distanceY","halfPercent","n","cp","dir","rotation","dy","setStyle","Group"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { isArray, each } from 'zrender/lib/core/util';\nimport * as vector from 'zrender/lib/core/vector';\nimport * as symbolUtil from '../../util/symbol';\nimport ECLinePath from './LinePath';\nimport * as graphic from '../../util/graphic';\nimport { enableHoverEmphasis, enterEmphasis, leaveEmphasis, SPECIAL_STATES } from '../../util/states';\nimport { getLabelStatesModels, setLabelStyle } from '../../label/labelStyle';\nimport { round } from '../../util/number';\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var symbolType = lineData.getItemVisual(idx, name);\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n  var symbolRotate = lineData.getItemVisual(idx, name + 'Rotate');\n  var symbolOffset = lineData.getItemVisual(idx, name + 'Offset');\n  var symbolKeepAspect = lineData.getItemVisual(idx, name + 'KeepAspect');\n  var symbolSizeArr = symbolUtil.normalizeSymbolSize(symbolSize);\n  var symbolOffsetArr = symbolUtil.normalizeSymbolOffset(symbolOffset || 0, symbolSizeArr);\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSizeArr[0] / 2 + symbolOffsetArr[0], -symbolSizeArr[1] / 2 + symbolOffsetArr[1], symbolSizeArr[0], symbolSizeArr[1], null, symbolKeepAspect);\n  symbolPath.__specifiedRotation = symbolRotate == null || isNaN(symbolRotate) ? void 0 : +symbolRotate * Math.PI / 180 || 0;\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new ECLinePath({\n    name: 'line',\n    subPixelOptimize: true\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  targetShape.x1 = points[0][0];\n  targetShape.y1 = points[0][1];\n  targetShape.x2 = points[1][0];\n  targetShape.y2 = points[1][1];\n  targetShape.percent = 1;\n  var cp1 = points[2];\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nvar Line =\n/** @class */\nfunction (_super) {\n  __extends(Line, _super);\n\n  function Line(lineData, idx, seriesScope) {\n    var _this = _super.call(this) || this;\n\n    _this._createLine(lineData, idx, seriesScope);\n\n    return _this;\n  }\n\n  Line.prototype._createLine = function (lineData, idx, seriesScope) {\n    var seriesModel = lineData.hostModel;\n    var linePoints = lineData.getItemLayout(idx);\n    var line = createLine(linePoints);\n    line.shape.percent = 0;\n    graphic.initProps(line, {\n      shape: {\n        percent: 1\n      }\n    }, seriesModel, idx);\n    this.add(line);\n    each(SYMBOL_CATEGORIES, function (symbolCategory) {\n      var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n      // it will be updated after line#update.\n      // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n      this.add(symbol);\n      this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n    }, this);\n\n    this._updateCommonStl(lineData, idx, seriesScope);\n  }; // TODO More strict on the List type in parameters?\n\n\n  Line.prototype.updateData = function (lineData, idx, seriesScope) {\n    var seriesModel = lineData.hostModel;\n    var line = this.childOfName('line');\n    var linePoints = lineData.getItemLayout(idx);\n    var target = {\n      shape: {}\n    };\n    setLinePoints(target.shape, linePoints);\n    graphic.updateProps(line, target, seriesModel, idx);\n    each(SYMBOL_CATEGORIES, function (symbolCategory) {\n      var symbolType = lineData.getItemVisual(idx, symbolCategory);\n      var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n      if (this[key] !== symbolType) {\n        this.remove(this.childOfName(symbolCategory));\n        var symbol = createSymbol(symbolCategory, lineData, idx);\n        this.add(symbol);\n      }\n\n      this[key] = symbolType;\n    }, this);\n\n    this._updateCommonStl(lineData, idx, seriesScope);\n  };\n\n  ;\n\n  Line.prototype.getLinePath = function () {\n    return this.childAt(0);\n  };\n\n  Line.prototype._updateCommonStl = function (lineData, idx, seriesScope) {\n    var seriesModel = lineData.hostModel;\n    var line = this.childOfName('line');\n    var emphasisLineStyle = seriesScope && seriesScope.emphasisLineStyle;\n    var blurLineStyle = seriesScope && seriesScope.blurLineStyle;\n    var selectLineStyle = seriesScope && seriesScope.selectLineStyle;\n    var labelStatesModels = seriesScope && seriesScope.labelStatesModels; // Optimization for large dataset\n\n    if (!seriesScope || lineData.hasItemOption) {\n      var itemModel = lineData.getItemModel(idx);\n      emphasisLineStyle = itemModel.getModel(['emphasis', 'lineStyle']).getLineStyle();\n      blurLineStyle = itemModel.getModel(['blur', 'lineStyle']).getLineStyle();\n      selectLineStyle = itemModel.getModel(['select', 'lineStyle']).getLineStyle();\n      labelStatesModels = getLabelStatesModels(itemModel);\n    }\n\n    var lineStyle = lineData.getItemVisual(idx, 'style');\n    var visualColor = lineStyle.stroke;\n    line.useStyle(lineStyle);\n    line.style.fill = null;\n    line.style.strokeNoScale = true;\n    line.ensureState('emphasis').style = emphasisLineStyle;\n    line.ensureState('blur').style = blurLineStyle;\n    line.ensureState('select').style = selectLineStyle; // Update symbol\n\n    each(SYMBOL_CATEGORIES, function (symbolCategory) {\n      var symbol = this.childOfName(symbolCategory);\n\n      if (symbol) {\n        // Share opacity and color with line.\n        symbol.setColor(visualColor);\n        symbol.style.opacity = lineStyle.opacity;\n\n        for (var i = 0; i < SPECIAL_STATES.length; i++) {\n          var stateName = SPECIAL_STATES[i];\n          var lineState = line.getState(stateName);\n\n          if (lineState) {\n            var lineStateStyle = lineState.style || {};\n            var state = symbol.ensureState(stateName);\n            var stateStyle = state.style || (state.style = {});\n\n            if (lineStateStyle.stroke != null) {\n              stateStyle[symbol.__isEmptyBrush ? 'stroke' : 'fill'] = lineStateStyle.stroke;\n            }\n\n            if (lineStateStyle.opacity != null) {\n              stateStyle.opacity = lineStateStyle.opacity;\n            }\n          }\n        }\n\n        symbol.markRedraw();\n      }\n    }, this);\n    var rawVal = seriesModel.getRawValue(idx);\n    setLabelStyle(this, labelStatesModels, {\n      labelDataIndex: idx,\n      labelFetcher: {\n        getFormattedLabel: function (dataIndex, stateName) {\n          return seriesModel.getFormattedLabel(dataIndex, stateName, lineData.dataType);\n        }\n      },\n      inheritColor: visualColor || '#000',\n      defaultOpacity: lineStyle.opacity,\n      defaultText: (rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal) + ''\n    });\n    var label = this.getTextContent(); // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n\n    if (label) {\n      var labelNormalModel = labelStatesModels.normal;\n      label.__align = label.style.align;\n      label.__verticalAlign = label.style.verticalAlign; // 'start', 'middle', 'end'\n\n      label.__position = labelNormalModel.get('position') || 'middle';\n      var distance = labelNormalModel.get('distance');\n\n      if (!isArray(distance)) {\n        distance = [distance, distance];\n      }\n\n      label.__labelDistance = distance;\n    }\n\n    this.setTextConfig({\n      position: null,\n      local: true,\n      inside: false // Can't be inside for stroke element.\n\n    });\n    enableHoverEmphasis(this);\n  };\n\n  Line.prototype.highlight = function () {\n    enterEmphasis(this);\n  };\n\n  Line.prototype.downplay = function () {\n    leaveEmphasis(this);\n  };\n\n  Line.prototype.updateLayout = function (lineData, idx) {\n    this.setLinePoints(lineData.getItemLayout(idx));\n  };\n\n  Line.prototype.setLinePoints = function (points) {\n    var linePath = this.childOfName('line');\n    setLinePoints(linePath.shape, points);\n    linePath.dirty();\n  };\n\n  Line.prototype.beforeUpdate = function () {\n    var lineGroup = this;\n    var symbolFrom = lineGroup.childOfName('fromSymbol');\n    var symbolTo = lineGroup.childOfName('toSymbol');\n    var label = lineGroup.getTextContent(); // Quick reject\n\n    if (!symbolFrom && !symbolTo && (!label || label.ignore)) {\n      return;\n    }\n\n    var invScale = 1;\n    var parentNode = this.parent;\n\n    while (parentNode) {\n      if (parentNode.scaleX) {\n        invScale /= parentNode.scaleX;\n      }\n\n      parentNode = parentNode.parent;\n    }\n\n    var line = lineGroup.childOfName('line'); // If line not changed\n    // FIXME Parent scale changed\n\n    if (!this.__dirty && !line.__dirty) {\n      return;\n    }\n\n    var percent = line.shape.percent;\n    var fromPos = line.pointAt(0);\n    var toPos = line.pointAt(percent);\n    var d = vector.sub([], toPos, fromPos);\n    vector.normalize(d, d);\n\n    function setSymbolRotation(symbol, percent) {\n      // Fix #12388\n      // when symbol is set to be 'arrow' in markLine,\n      // symbolRotate value will be ignored, and compulsively use tangent angle.\n      // rotate by default if symbol rotation is not specified\n      var specifiedRotation = symbol.__specifiedRotation;\n\n      if (specifiedRotation == null) {\n        var tangent = line.tangentAt(percent);\n        symbol.attr('rotation', (percent === 1 ? -1 : 1) * Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n      } else {\n        symbol.attr('rotation', specifiedRotation);\n      }\n    }\n\n    if (symbolFrom) {\n      symbolFrom.setPosition(fromPos);\n      setSymbolRotation(symbolFrom, 0);\n      symbolFrom.scaleX = symbolFrom.scaleY = invScale * percent;\n      symbolFrom.markRedraw();\n    }\n\n    if (symbolTo) {\n      symbolTo.setPosition(toPos);\n      setSymbolRotation(symbolTo, 1);\n      symbolTo.scaleX = symbolTo.scaleY = invScale * percent;\n      symbolTo.markRedraw();\n    }\n\n    if (label && !label.ignore) {\n      label.x = label.y = 0;\n      label.originX = label.originY = 0;\n      var textAlign = void 0;\n      var textVerticalAlign = void 0;\n      var distance = label.__labelDistance;\n      var distanceX = distance[0] * invScale;\n      var distanceY = distance[1] * invScale;\n      var halfPercent = percent / 2;\n      var tangent = line.tangentAt(halfPercent);\n      var n = [tangent[1], -tangent[0]];\n      var cp = line.pointAt(halfPercent);\n\n      if (n[1] > 0) {\n        n[0] = -n[0];\n        n[1] = -n[1];\n      }\n\n      var dir = tangent[0] < 0 ? -1 : 1;\n\n      if (label.__position !== 'start' && label.__position !== 'end') {\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.rotation = rotation;\n      }\n\n      var dy = void 0;\n\n      switch (label.__position) {\n        case 'insideStartTop':\n        case 'insideMiddleTop':\n        case 'insideEndTop':\n        case 'middle':\n          dy = -distanceY;\n          textVerticalAlign = 'bottom';\n          break;\n\n        case 'insideStartBottom':\n        case 'insideMiddleBottom':\n        case 'insideEndBottom':\n          dy = distanceY;\n          textVerticalAlign = 'top';\n          break;\n\n        default:\n          dy = 0;\n          textVerticalAlign = 'middle';\n      }\n\n      switch (label.__position) {\n        case 'end':\n          label.x = d[0] * distanceX + toPos[0];\n          label.y = d[1] * distanceY + toPos[1];\n          textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n          break;\n\n        case 'start':\n          label.x = -d[0] * distanceX + fromPos[0];\n          label.y = -d[1] * distanceY + fromPos[1];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n          break;\n\n        case 'insideStartTop':\n        case 'insideStart':\n        case 'insideStartBottom':\n          label.x = distanceX * dir + fromPos[0];\n          label.y = fromPos[1] + dy;\n          textAlign = tangent[0] < 0 ? 'right' : 'left';\n          label.originX = -distanceX * dir;\n          label.originY = -dy;\n          break;\n\n        case 'insideMiddleTop':\n        case 'insideMiddle':\n        case 'insideMiddleBottom':\n        case 'middle':\n          label.x = cp[0];\n          label.y = cp[1] + dy;\n          textAlign = 'center';\n          label.originY = -dy;\n          break;\n\n        case 'insideEndTop':\n        case 'insideEnd':\n        case 'insideEndBottom':\n          label.x = -distanceX * dir + toPos[0];\n          label.y = toPos[1] + dy;\n          textAlign = tangent[0] >= 0 ? 'right' : 'left';\n          label.originX = distanceX * dir;\n          label.originY = -dy;\n          break;\n      }\n\n      label.scaleX = label.scaleY = invScale;\n      label.setStyle({\n        // Use the user specified text align and baseline first\n        verticalAlign: label.__verticalAlign || textVerticalAlign,\n        align: label.__align || textAlign\n      });\n    }\n  };\n\n  return Line;\n}(graphic.Group);\n\nexport default Line;"]},"metadata":{},"sourceType":"module"}
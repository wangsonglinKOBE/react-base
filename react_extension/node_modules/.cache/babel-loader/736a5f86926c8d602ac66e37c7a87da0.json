{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as graphic from '../../util/graphic';\nimport * as axisPointerModelHelper from './modelHelper';\nimport * as eventTool from 'zrender/lib/core/event';\nimport * as throttleUtil from '../../util/throttle';\nimport { makeInner } from '../../util/model';\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n */\n\nvar BaseAxisPointer =\n/** @class */\nfunction () {\n  function BaseAxisPointer() {\n    this._dragging = false;\n    /**\n     * In px, arbitrary value. Do not set too small,\n     * no animation is ok for most cases.\n     */\n\n    this.animationThreshold = 15;\n  }\n  /**\n   * @implement\n   */\n\n\n  BaseAxisPointer.prototype.render = function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  };\n  /**\n   * @implement\n   */\n\n\n  BaseAxisPointer.prototype.remove = function (api) {\n    this.clear(api);\n  };\n  /**\n   * @implement\n   */\n\n\n  BaseAxisPointer.prototype.dispose = function (api) {\n    this.clear(api);\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.determineAnimation = function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  };\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.createPointerEl = function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.createLabelEl = function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Text(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.updatePointerEl = function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl && elOption.pointer) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.updateLabelEl = function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        // TODOTODO\n        // shape: elOption.label.shape,\n        x: elOption.label.x,\n        y: elOption.label.y\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  BaseAxisPointer.prototype._renderHandle = function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    handle.setStyle(handleModel.getItemStyle(null, ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'])); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.scaleX = handleSize[0] / 2;\n    handle.scaleY = handleSize[1] / 2;\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  };\n\n  BaseAxisPointer.prototype._moveHandleToValue = function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  };\n\n  BaseAxisPointer.prototype._onHandleDragMove = function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  };\n  /**\n   * Throttled method.\n   */\n\n\n  BaseAxisPointer.prototype._doDispatchAxisPointer = function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  };\n\n  BaseAxisPointer.prototype._onHandleDragEnd = function () {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  };\n  /**\n   * @private\n   */\n\n\n  BaseAxisPointer.prototype.clear = function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.doClear = function () {// Implemented by sub-class if necessary.\n  };\n\n  BaseAxisPointer.prototype.buildLabel = function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  };\n\n  return BaseAxisPointer;\n}();\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals_1 = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals_1 = equals_1 && propsEqual(lastProps[key], item);\n    });\n    return !!equals_1;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get(['label', 'show']) ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    x: trans.x || 0,\n    y: trans.y || 0,\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nexport default BaseAxisPointer;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js"],"names":["zrUtil","graphic","axisPointerModelHelper","eventTool","throttleUtil","makeInner","inner","clone","bind","BaseAxisPointer","_dragging","animationThreshold","prototype","render","axisModel","axisPointerModel","api","forceRender","value","get","status","_axisModel","_axisPointerModel","_api","_lastValue","_lastStatus","group","_group","handle","_handle","hide","show","elOption","makeElOption","graphicKey","_lastGraphicKey","clear","moveAnimation","_moveAnimation","determineAnimation","Group","createPointerEl","createLabelEl","getZr","add","doUpdateProps","curry","updateProps","updatePointerEl","updateLabelEl","updateMandatoryProps","_renderHandle","remove","dispose","animation","axis","isCategoryAxis","type","useSnap","getBandWidth","seriesDataCount","getAxisInfo","axisExtent","getExtent","Math","abs","pointerOption","pointer","pointerEl","label","labelEl","Text","updateLabelShowHide","setStyle","style","shape","x","y","updateHandleTransform","zr","handleModel","getModel","isInit","createIcon","cursor","draggable","onmousemove","e","stop","event","onmousedown","_onHandleDragMove","drift","ondragend","_onHandleDragEnd","getItemStyle","handleSize","isArray","scaleX","scaleY","createOrUpdate","_moveHandleToValue","getHandleTransProps","getHandleTransform","dx","dy","trans","_payloadInfo","stopAnimation","attr","lastProp","_doDispatchAxisPointer","payloadInfo","dispatchAction","cursorPoint","tooltipOption","axesInfo","axisDim","dim","axisIndex","componentIndex","doClear","buildLabel","xy","wh","xDimIndex","width","height","animationModel","el","props","propsEqual","lastProps","newProps","isObject","equals_1","each","item","key","rotation","silent","z","zlevel","traverse"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as graphic from '../../util/graphic';\nimport * as axisPointerModelHelper from './modelHelper';\nimport * as eventTool from 'zrender/lib/core/event';\nimport * as throttleUtil from '../../util/throttle';\nimport { makeInner } from '../../util/model';\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n */\n\nvar BaseAxisPointer =\n/** @class */\nfunction () {\n  function BaseAxisPointer() {\n    this._dragging = false;\n    /**\n     * In px, arbitrary value. Do not set too small,\n     * no animation is ok for most cases.\n     */\n\n    this.animationThreshold = 15;\n  }\n  /**\n   * @implement\n   */\n\n\n  BaseAxisPointer.prototype.render = function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  };\n  /**\n   * @implement\n   */\n\n\n  BaseAxisPointer.prototype.remove = function (api) {\n    this.clear(api);\n  };\n  /**\n   * @implement\n   */\n\n\n  BaseAxisPointer.prototype.dispose = function (api) {\n    this.clear(api);\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.determineAnimation = function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  };\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.createPointerEl = function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.createLabelEl = function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Text(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.updatePointerEl = function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl && elOption.pointer) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.updateLabelEl = function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        // TODOTODO\n        // shape: elOption.label.shape,\n        x: elOption.label.x,\n        y: elOption.label.y\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  BaseAxisPointer.prototype._renderHandle = function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    handle.setStyle(handleModel.getItemStyle(null, ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'])); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.scaleX = handleSize[0] / 2;\n    handle.scaleY = handleSize[1] / 2;\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  };\n\n  BaseAxisPointer.prototype._moveHandleToValue = function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  };\n\n  BaseAxisPointer.prototype._onHandleDragMove = function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  };\n  /**\n   * Throttled method.\n   */\n\n\n  BaseAxisPointer.prototype._doDispatchAxisPointer = function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  };\n\n  BaseAxisPointer.prototype._onHandleDragEnd = function () {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  };\n  /**\n   * @private\n   */\n\n\n  BaseAxisPointer.prototype.clear = function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.doClear = function () {// Implemented by sub-class if necessary.\n  };\n\n  BaseAxisPointer.prototype.buildLabel = function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  };\n\n  return BaseAxisPointer;\n}();\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals_1 = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals_1 = equals_1 && propsEqual(lastProps[key], item);\n    });\n    return !!equals_1;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get(['label', 'show']) ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    x: trans.x || 0,\n    y: trans.y || 0,\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nexport default BaseAxisPointer;"]},"metadata":{},"sourceType":"module"}
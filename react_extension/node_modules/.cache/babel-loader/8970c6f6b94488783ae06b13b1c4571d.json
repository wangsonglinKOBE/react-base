{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport ComponentModel from '../../model/Component';\nimport { AxisModelCommonMixin } from '../axisModelCommonMixin';\nimport { mixin } from 'zrender/lib/core/util';\n\nvar SingleAxisModel =\n/** @class */\nfunction (_super) {\n  __extends(SingleAxisModel, _super);\n\n  function SingleAxisModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = SingleAxisModel.type;\n    return _this;\n  }\n\n  SingleAxisModel.prototype.getCoordSysModel = function () {\n    return this;\n  };\n\n  SingleAxisModel.type = 'singleAxis';\n  SingleAxisModel.layoutMode = 'box';\n  SingleAxisModel.defaultOption = {\n    left: '5%',\n    top: '5%',\n    right: '5%',\n    bottom: '5%',\n    type: 'value',\n    position: 'bottom',\n    orient: 'horizontal',\n    axisLine: {\n      show: true,\n      lineStyle: {\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // Single coordinate system and single axis is the,\n    // which is used as the parent tooltip model.\n    // same model, so we set default tooltip show as true.\n    tooltip: {\n      show: true\n    },\n    axisTick: {\n      show: true,\n      length: 6,\n      lineStyle: {\n        width: 1\n      }\n    },\n    axisLabel: {\n      show: true,\n      interval: 'auto'\n    },\n    splitLine: {\n      show: true,\n      lineStyle: {\n        type: 'dashed',\n        opacity: 0.2\n      }\n    }\n  };\n  return SingleAxisModel;\n}(ComponentModel);\n\nmixin(SingleAxisModel, AxisModelCommonMixin.prototype);\nexport default SingleAxisModel;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/coord/single/AxisModel.js"],"names":["__extends","ComponentModel","AxisModelCommonMixin","mixin","SingleAxisModel","_super","_this","apply","arguments","type","prototype","getCoordSysModel","layoutMode","defaultOption","left","top","right","bottom","position","orient","axisLine","show","lineStyle","width","tooltip","axisTick","length","axisLabel","interval","splitLine","opacity"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,KAAT,QAAsB,uBAAtB;;AAEA,IAAIC,eAAe;AACnB;AACA,UAAUC,MAAV,EAAkB;AAChBL,EAAAA,SAAS,CAACI,eAAD,EAAkBC,MAAlB,CAAT;;AAEA,WAASD,eAAT,GAA2B;AACzB,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AAEAF,IAAAA,KAAK,CAACG,IAAN,GAAaL,eAAe,CAACK,IAA7B;AACA,WAAOH,KAAP;AACD;;AAEDF,EAAAA,eAAe,CAACM,SAAhB,CAA0BC,gBAA1B,GAA6C,YAAY;AACvD,WAAO,IAAP;AACD,GAFD;;AAIAP,EAAAA,eAAe,CAACK,IAAhB,GAAuB,YAAvB;AACAL,EAAAA,eAAe,CAACQ,UAAhB,GAA6B,KAA7B;AACAR,EAAAA,eAAe,CAACS,aAAhB,GAAgC;AAC9BC,IAAAA,IAAI,EAAE,IADwB;AAE9BC,IAAAA,GAAG,EAAE,IAFyB;AAG9BC,IAAAA,KAAK,EAAE,IAHuB;AAI9BC,IAAAA,MAAM,EAAE,IAJsB;AAK9BR,IAAAA,IAAI,EAAE,OALwB;AAM9BS,IAAAA,QAAQ,EAAE,QANoB;AAO9BC,IAAAA,MAAM,EAAE,YAPsB;AAQ9BC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAE,IADE;AAERC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE,CADE;AAETd,QAAAA,IAAI,EAAE;AAFG;AAFH,KARoB;AAe9B;AACA;AACA;AACAe,IAAAA,OAAO,EAAE;AACPH,MAAAA,IAAI,EAAE;AADC,KAlBqB;AAqB9BI,IAAAA,QAAQ,EAAE;AACRJ,MAAAA,IAAI,EAAE,IADE;AAERK,MAAAA,MAAM,EAAE,CAFA;AAGRJ,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE;AADE;AAHH,KArBoB;AA4B9BI,IAAAA,SAAS,EAAE;AACTN,MAAAA,IAAI,EAAE,IADG;AAETO,MAAAA,QAAQ,EAAE;AAFD,KA5BmB;AAgC9BC,IAAAA,SAAS,EAAE;AACTR,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,SAAS,EAAE;AACTb,QAAAA,IAAI,EAAE,QADG;AAETqB,QAAAA,OAAO,EAAE;AAFA;AAFF;AAhCmB,GAAhC;AAwCA,SAAO1B,eAAP;AACD,CAzDD,CAyDEH,cAzDF,CAFA;;AA6DAE,KAAK,CAACC,eAAD,EAAkBF,oBAAoB,CAACQ,SAAvC,CAAL;AACA,eAAeN,eAAf","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport ComponentModel from '../../model/Component';\nimport { AxisModelCommonMixin } from '../axisModelCommonMixin';\nimport { mixin } from 'zrender/lib/core/util';\n\nvar SingleAxisModel =\n/** @class */\nfunction (_super) {\n  __extends(SingleAxisModel, _super);\n\n  function SingleAxisModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = SingleAxisModel.type;\n    return _this;\n  }\n\n  SingleAxisModel.prototype.getCoordSysModel = function () {\n    return this;\n  };\n\n  SingleAxisModel.type = 'singleAxis';\n  SingleAxisModel.layoutMode = 'box';\n  SingleAxisModel.defaultOption = {\n    left: '5%',\n    top: '5%',\n    right: '5%',\n    bottom: '5%',\n    type: 'value',\n    position: 'bottom',\n    orient: 'horizontal',\n    axisLine: {\n      show: true,\n      lineStyle: {\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // Single coordinate system and single axis is the,\n    // which is used as the parent tooltip model.\n    // same model, so we set default tooltip show as true.\n    tooltip: {\n      show: true\n    },\n    axisTick: {\n      show: true,\n      length: 6,\n      lineStyle: {\n        width: 1\n      }\n    },\n    axisLabel: {\n      show: true,\n      interval: 'auto'\n    },\n    splitLine: {\n      show: true,\n      lineStyle: {\n        type: 'dashed',\n        opacity: 0.2\n      }\n    }\n  };\n  return SingleAxisModel;\n}(ComponentModel);\n\nmixin(SingleAxisModel, AxisModelCommonMixin.prototype);\nexport default SingleAxisModel;"]},"metadata":{},"sourceType":"module"}
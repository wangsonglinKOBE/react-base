{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport VisualMapModel from './VisualMapModel';\nimport VisualMapping from '../../visual/VisualMapping';\nimport visualDefault from '../../visual/visualDefault';\nimport { reformIntervals } from '../../util/number';\nimport { inheritDefaultOption } from '../../util/component';\n\nvar PiecewiseModel =\n/** @class */\nfunction (_super) {\n  __extends(PiecewiseModel, _super);\n\n  function PiecewiseModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = PiecewiseModel.type;\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     */\n\n    _this._pieceList = [];\n    return _this;\n  }\n\n  PiecewiseModel.prototype.optionUpdated = function (newOption, isInit) {\n    _super.prototype.optionUpdated.apply(this, arguments);\n\n    this.resetExtent();\n\n    var mode = this._mode = this._determineMode();\n\n    this._pieceList = [];\n\n    resetMethods[this._mode].call(this, this._pieceList);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  };\n  /**\n   * @protected\n   * @override\n   */\n\n\n  PiecewiseModel.prototype.completeVisualOption = function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = false;\n      zrUtil.each(this.stateList, function (state) {\n        exists = exists || has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && obj[state].hasOwnProperty(visualType);\n    }\n\n    _super.prototype.completeVisualOption.apply(this, arguments);\n  };\n\n  PiecewiseModel.prototype._resetSelected = function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel_1 = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel_1 ? selected[key] = false : hasSel_1 = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  };\n  /**\n   * @public\n   */\n\n\n  PiecewiseModel.prototype.getItemSymbol = function () {\n    return this.get('itemSymbol');\n  };\n  /**\n   * @public\n   */\n\n\n  PiecewiseModel.prototype.getSelectedMapKey = function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  };\n  /**\n   * @public\n   */\n\n\n  PiecewiseModel.prototype.getPieceList = function () {\n    return this._pieceList;\n  };\n  /**\n   * @return {string}\n   */\n\n\n  PiecewiseModel.prototype._determineMode = function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  };\n  /**\n   * @override\n   */\n\n\n  PiecewiseModel.prototype.setSelected = function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  };\n  /**\n   * @override\n   */\n\n\n  PiecewiseModel.prototype.getValueState = function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  };\n  /**\n   * @public\n   * @param pieceIndex piece index in visualMapModel.getPieceList()\n   */\n\n\n  PiecewiseModel.prototype.findTargetDataIndices = function (pieceIndex) {\n    var result = [];\n    var pieceList = this._pieceList;\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimensionIndex(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  };\n  /**\n   * @private\n   * @param piece piece.value or piece.interval is required.\n   * @return  Can be Infinity or -Infinity\n   */\n\n\n  PiecewiseModel.prototype.getRepresentValue = function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  };\n\n  PiecewiseModel.prototype.getVisualMeta = function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = ['', ''];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      }); // Not category\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  };\n\n  PiecewiseModel.type = 'visualMap.piecewise';\n  PiecewiseModel.defaultOption = inheritDefaultOption(VisualMapModel.defaultOption, {\n    selected: null,\n    minOpen: false,\n    maxOpen: false,\n    align: 'auto',\n    itemWidth: 20,\n    itemHeight: 14,\n    itemSymbol: 'roundRect',\n    pieces: null,\n    categories: null,\n    splitNumber: 5,\n    selectedMode: 'multiple',\n    itemGap: 10,\n    hoverLink: true // Enable hover highlight.\n\n  });\n  return PiecewiseModel;\n}(VisualMapModel);\n\n;\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function (outPieceList) {\n    var thisOption = this.option;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n\n    if (thisOption.minOpen) {\n      outPieceList.push({\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var index = 0, curr = dataExtent[0]; index < splitNumber; curr += splitStep, index++) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      outPieceList.push({\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      outPieceList.push({\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(outPieceList);\n    zrUtil.each(outPieceList, function (piece, index) {\n      piece.index = index;\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function (outPieceList) {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      outPieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, outPieceList);\n  },\n  pieces: function (outPieceList) {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close_1 = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close_1[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close_1[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close_1[1] = 0);\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (interval[0] > interval[1]) {\n            console.warn('Piece ' + index + 'is illegal: ' + interval + ' lower bound should not greater then uppper bound.');\n          }\n        }\n\n        if (interval[0] === interval[1] && close_1[0] && close_1[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      outPieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, outPieceList); // Only pieces\n\n    reformIntervals(outPieceList);\n    zrUtil.each(outPieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nexport default PiecewiseModel;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/component/visualMap/PiecewiseModel.js"],"names":["__extends","zrUtil","VisualMapModel","VisualMapping","visualDefault","reformIntervals","inheritDefaultOption","PiecewiseModel","_super","_this","apply","arguments","type","_pieceList","prototype","optionUpdated","newOption","isInit","resetExtent","mode","_mode","_determineMode","resetMethods","call","_resetSelected","categories","option","resetVisual","mappingOption","state","mappingMethod","clone","dataExtent","getExtent","pieceList","map","piece","visual","completeVisualOption","visualTypesInPieces","visualTypes","listVisualTypes","isCategory","each","pieces","visualType","hasOwnProperty","v","exists","stateList","has","target","get","obj","thisOption","selected","index","key","getSelectedMapKey","selectedMode","hasSel_1","getItemSymbol","value","getPieceList","length","setSelected","getValueState","findPieceIndex","findTargetDataIndices","pieceIndex","result","eachTargetSeries","seriesModel","dataIndices","data","getData","getDataDimensionIndex","dataIndex","pIdx","push","seriesId","id","getRepresentValue","representValue","pieceInterval","interval","Infinity","getVisualMeta","getColorVisual","stops","outerColors","visualMapModel","setStop","valueState","color","slice","edge","unshift","curr","defaultOption","minOpen","maxOpen","align","itemWidth","itemHeight","itemSymbol","splitNumber","itemGap","hoverLink","outPieceList","precision","Math","min","max","parseInt","splitStep","toFixed","close","text","formatValueText","cate","normalizeReverse","pieceListItem","isObject","item","label","close_1","closeList","infinityList","useMinMax","lg","names","i","process","env","NODE_ENV","console","warn","retrieveVisuals","edgeSymbols","inverse","orient","reverse"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport VisualMapModel from './VisualMapModel';\nimport VisualMapping from '../../visual/VisualMapping';\nimport visualDefault from '../../visual/visualDefault';\nimport { reformIntervals } from '../../util/number';\nimport { inheritDefaultOption } from '../../util/component';\n\nvar PiecewiseModel =\n/** @class */\nfunction (_super) {\n  __extends(PiecewiseModel, _super);\n\n  function PiecewiseModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = PiecewiseModel.type;\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     */\n\n    _this._pieceList = [];\n    return _this;\n  }\n\n  PiecewiseModel.prototype.optionUpdated = function (newOption, isInit) {\n    _super.prototype.optionUpdated.apply(this, arguments);\n\n    this.resetExtent();\n\n    var mode = this._mode = this._determineMode();\n\n    this._pieceList = [];\n\n    resetMethods[this._mode].call(this, this._pieceList);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  };\n  /**\n   * @protected\n   * @override\n   */\n\n\n  PiecewiseModel.prototype.completeVisualOption = function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = false;\n      zrUtil.each(this.stateList, function (state) {\n        exists = exists || has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && obj[state].hasOwnProperty(visualType);\n    }\n\n    _super.prototype.completeVisualOption.apply(this, arguments);\n  };\n\n  PiecewiseModel.prototype._resetSelected = function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel_1 = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel_1 ? selected[key] = false : hasSel_1 = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  };\n  /**\n   * @public\n   */\n\n\n  PiecewiseModel.prototype.getItemSymbol = function () {\n    return this.get('itemSymbol');\n  };\n  /**\n   * @public\n   */\n\n\n  PiecewiseModel.prototype.getSelectedMapKey = function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  };\n  /**\n   * @public\n   */\n\n\n  PiecewiseModel.prototype.getPieceList = function () {\n    return this._pieceList;\n  };\n  /**\n   * @return {string}\n   */\n\n\n  PiecewiseModel.prototype._determineMode = function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  };\n  /**\n   * @override\n   */\n\n\n  PiecewiseModel.prototype.setSelected = function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  };\n  /**\n   * @override\n   */\n\n\n  PiecewiseModel.prototype.getValueState = function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  };\n  /**\n   * @public\n   * @param pieceIndex piece index in visualMapModel.getPieceList()\n   */\n\n\n  PiecewiseModel.prototype.findTargetDataIndices = function (pieceIndex) {\n    var result = [];\n    var pieceList = this._pieceList;\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimensionIndex(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  };\n  /**\n   * @private\n   * @param piece piece.value or piece.interval is required.\n   * @return  Can be Infinity or -Infinity\n   */\n\n\n  PiecewiseModel.prototype.getRepresentValue = function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  };\n\n  PiecewiseModel.prototype.getVisualMeta = function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = ['', ''];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      }); // Not category\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  };\n\n  PiecewiseModel.type = 'visualMap.piecewise';\n  PiecewiseModel.defaultOption = inheritDefaultOption(VisualMapModel.defaultOption, {\n    selected: null,\n    minOpen: false,\n    maxOpen: false,\n    align: 'auto',\n    itemWidth: 20,\n    itemHeight: 14,\n    itemSymbol: 'roundRect',\n    pieces: null,\n    categories: null,\n    splitNumber: 5,\n    selectedMode: 'multiple',\n    itemGap: 10,\n    hoverLink: true // Enable hover highlight.\n\n  });\n  return PiecewiseModel;\n}(VisualMapModel);\n\n;\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function (outPieceList) {\n    var thisOption = this.option;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n\n    if (thisOption.minOpen) {\n      outPieceList.push({\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var index = 0, curr = dataExtent[0]; index < splitNumber; curr += splitStep, index++) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      outPieceList.push({\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      outPieceList.push({\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(outPieceList);\n    zrUtil.each(outPieceList, function (piece, index) {\n      piece.index = index;\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function (outPieceList) {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      outPieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, outPieceList);\n  },\n  pieces: function (outPieceList) {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close_1 = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close_1[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close_1[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close_1[1] = 0);\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (interval[0] > interval[1]) {\n            console.warn('Piece ' + index + 'is illegal: ' + interval + ' lower bound should not greater then uppper bound.');\n          }\n        }\n\n        if (interval[0] === interval[1] && close_1[0] && close_1[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      outPieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, outPieceList); // Only pieces\n\n    reformIntervals(outPieceList);\n    zrUtil.each(outPieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nexport default PiecewiseModel;"]},"metadata":{},"sourceType":"module"}
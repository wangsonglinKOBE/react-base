{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport ComponentView from '../../view/Component';\nimport GridModel from '../../coord/cartesian/GridModel';\nimport { Rect } from '../../util/graphic';\nimport { defaults } from 'zrender/lib/core/util';\nimport { CartesianAxisModel } from '../../coord/cartesian/AxisModel';\nimport axisModelCreator from '../../coord/axisModelCreator';\nimport Grid from '../../coord/cartesian/Grid';\nimport { CartesianXAxisView, CartesianYAxisView } from '../axis/CartesianAxisView'; // Grid view\n\nvar GridView =\n/** @class */\nfunction (_super) {\n  __extends(GridView, _super);\n\n  function GridView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'grid';\n    return _this;\n  }\n\n  GridView.prototype.render = function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  };\n\n  GridView.type = 'grid';\n  return GridView;\n}(ComponentView);\n\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  offset: 0\n};\nexport function install(registers) {\n  registers.registerComponentView(GridView);\n  registers.registerComponentModel(GridModel);\n  registers.registerCoordinateSystem('cartesian2d', Grid);\n  axisModelCreator(registers, 'x', CartesianAxisModel, extraOption);\n  axisModelCreator(registers, 'y', CartesianAxisModel, extraOption);\n  registers.registerComponentView(CartesianXAxisView);\n  registers.registerComponentView(CartesianYAxisView);\n  registers.registerPreprocessor(function (option) {\n    // Only create grid when need\n    if (option.xAxis && option.yAxis && !option.grid) {\n      option.grid = {};\n    }\n  });\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/component/grid/installSimple.js"],"names":["__extends","ComponentView","GridModel","Rect","defaults","CartesianAxisModel","axisModelCreator","Grid","CartesianXAxisView","CartesianYAxisView","GridView","_super","_this","apply","arguments","type","prototype","render","gridModel","ecModel","group","removeAll","get","add","shape","coordinateSystem","getRect","style","fill","getItemStyle","silent","z2","extraOption","offset","install","registers","registerComponentView","registerComponentModel","registerCoordinateSystem","registerPreprocessor","option","xAxis","yAxis","grid"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport ComponentView from '../../view/Component';\nimport GridModel from '../../coord/cartesian/GridModel';\nimport { Rect } from '../../util/graphic';\nimport { defaults } from 'zrender/lib/core/util';\nimport { CartesianAxisModel } from '../../coord/cartesian/AxisModel';\nimport axisModelCreator from '../../coord/axisModelCreator';\nimport Grid from '../../coord/cartesian/Grid';\nimport { CartesianXAxisView, CartesianYAxisView } from '../axis/CartesianAxisView'; // Grid view\n\nvar GridView =\n/** @class */\nfunction (_super) {\n  __extends(GridView, _super);\n\n  function GridView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'grid';\n    return _this;\n  }\n\n  GridView.prototype.render = function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  };\n\n  GridView.type = 'grid';\n  return GridView;\n}(ComponentView);\n\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  offset: 0\n};\nexport function install(registers) {\n  registers.registerComponentView(GridView);\n  registers.registerComponentModel(GridModel);\n  registers.registerCoordinateSystem('cartesian2d', Grid);\n  axisModelCreator(registers, 'x', CartesianAxisModel, extraOption);\n  axisModelCreator(registers, 'y', CartesianAxisModel, extraOption);\n  registers.registerComponentView(CartesianXAxisView);\n  registers.registerComponentView(CartesianYAxisView);\n  registers.registerPreprocessor(function (option) {\n    // Only create grid when need\n    if (option.xAxis && option.yAxis && !option.grid) {\n      option.grid = {};\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}
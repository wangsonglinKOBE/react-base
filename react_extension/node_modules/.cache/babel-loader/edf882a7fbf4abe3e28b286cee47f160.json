{"ast":null,"code":"import _classCallCheck from\"D:/\\u684C\\u9762/react\\u57FA\\u7840\\u539F\\u7406\\u5206\\u6790/react_extension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/\\u684C\\u9762/react\\u57FA\\u7840\\u539F\\u7406\\u5206\\u6790/react_extension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/\\u684C\\u9762/react\\u57FA\\u7840\\u539F\\u7406\\u5206\\u6790/react_extension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/\\u684C\\u9762/react\\u57FA\\u7840\\u539F\\u7406\\u5206\\u6790/react_extension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./index.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Parent=/*#__PURE__*/function(_Component){_inherits(Parent,_Component);var _super=_createSuper(Parent);function Parent(){_classCallCheck(this,Parent);return _super.apply(this,arguments);}_createClass(Parent,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"parent\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u6211\\u662FParent\\u7EC4\\u4EF6\"}),/*#__PURE__*/_jsx(A,{render:function render(name){return/*#__PURE__*/_jsx(B,{name:name});}})]});}}]);return Parent;}(Component);export{Parent as default};var A=/*#__PURE__*/function(_Component2){_inherits(A,_Component2);var _super2=_createSuper(A);function A(){var _this;_classCallCheck(this,A);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super2.call.apply(_super2,[this].concat(args));_this.state={name:'kobe'};return _this;}_createClass(A,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"a\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u6211\\u662FA\\u7EC4\\u4EF6\"}),this.props.render(this.state.name)]});}}]);return A;}(Component);var B=/*#__PURE__*/function(_Component3){_inherits(B,_Component3);var _super3=_createSuper(B);function B(){_classCallCheck(this,B);return _super3.apply(this,arguments);}_createClass(B,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"b\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u6211\\u662FB\\u7EC4\\u4EF6\"}),this.props.name]});}}]);return B;}(Component);// 当父子组件再爷爷辈的组件中展示时 <yeye> <A> <B/> </A> </yeye> 就可以使用render props 通过props传递state也很方便","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/src/components/7_render-props/index.jsx"],"names":["React","Component","Parent","name","A","state","props","render","B"],"mappings":"gvBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,aAAP,C,2FAEqBC,CAAAA,M,6NACjB,iBAAS,CACL,mBACI,aAAK,SAAS,CAAC,QAAf,wBACI,sDADJ,cAQI,KAAC,CAAD,EAAG,MAAM,CAAE,gBAAAC,IAAI,qBAAI,KAAC,CAAD,EAAG,IAAI,CAAEA,IAAT,EAAJ,EAAf,EARJ,GADJ,CAgBH,C,oBAlB+BF,S,SAAfC,M,gBAqBfE,CAAAA,C,4SACFC,K,CAAQ,CAACF,IAAI,CAAE,MAAP,C,mDACR,iBAAS,CACL,mBACI,aAAK,SAAS,CAAC,GAAf,wBACI,iDADJ,CAIK,KAAKG,KAAL,CAAWC,MAAX,CAAkB,KAAKF,KAAL,CAAWF,IAA7B,CAJL,GADJ,CAUH,C,eAbWF,S,KAgBVO,CAAAA,C,wMACF,iBAAS,CACL,mBACI,aAAK,SAAS,CAAC,GAAf,wBACI,iDADJ,CAEK,KAAKF,KAAL,CAAWH,IAFhB,GADJ,CAMH,C,eARWF,S,EAWhB","sourcesContent":["import React, { Component } from 'react'\r\nimport './index.css'\r\n\r\nexport default class Parent extends Component {\r\n    render() {\r\n        return (\r\n            <div className='parent'>\r\n                <h3>我是Parent组件</h3>\r\n                {\r\n                /* 首先一看到一个组件的props定义为了render，那么他就是render props了，这是程序员们心照不宣的反射\r\n                   其实没什么高大上的，就是给A组件传了一个名为render的props，只是这个render的值是一个函数，返回的是一个组件，\r\n                   你想让A组件中预留的位置展示谁，你就返回对应的组件\r\n                   在A组件中也就是父组件中会调用render函数，顺便可以传参，B组件将参数作为自己的props\r\n                 */}\r\n                <A render={name => <B name={name}/>} /> \r\n\r\n                {/* <A>\r\n                    <B/>\r\n                </A> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass A extends Component {\r\n    state = {name: 'kobe'}\r\n    render() {\r\n        return (\r\n            <div className=\"a\">\r\n                <h3>我是A组件</h3>\r\n                {/* 下面就是在A组件中预留了一个位置，相当于插槽，你传入谁谁就展示在这，\r\n                并且还给展示在这的组件传入了A组件的状态 */}\r\n                {this.props.render(this.state.name)}\r\n\r\n                {/* {this.props.children} */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass B extends Component {\r\n    render() {\r\n        return (\r\n            <div className='b'>\r\n                <h3>我是B组件</h3>\r\n                {this.props.name}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// 当父子组件再爷爷辈的组件中展示时 <yeye> <A> <B/> </A> </yeye> 就可以使用render props 通过props传递state也很方便"]},"metadata":{},"sourceType":"module"}
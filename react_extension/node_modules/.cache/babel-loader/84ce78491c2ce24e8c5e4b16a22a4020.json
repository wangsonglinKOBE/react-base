{"ast":null,"code":"import * as curve from '../core/curve';\nexport function containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/zrender/lib/contain/cubic.js"],"names":["curve","containStroke","x0","y0","x1","y1","x2","y2","x3","y3","lineWidth","x","y","_l","d","cubicProjectPoint"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,OAAO,SAASC,aAAT,CAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,EAA2CC,EAA3C,EAA+CC,EAA/C,EAAmDC,EAAnD,EAAuDC,SAAvD,EAAkEC,CAAlE,EAAqEC,CAArE,EAAwE;AAC3E,MAAIF,SAAS,KAAK,CAAlB,EAAqB;AACjB,WAAO,KAAP;AACH;;AACD,MAAIG,EAAE,GAAGH,SAAT;;AACA,MAAKE,CAAC,GAAGT,EAAE,GAAGU,EAAT,IAAeD,CAAC,GAAGP,EAAE,GAAGQ,EAAxB,IAA8BD,CAAC,GAAGL,EAAE,GAAGM,EAAvC,IAA6CD,CAAC,GAAGH,EAAE,GAAGI,EAAvD,IACID,CAAC,GAAGT,EAAE,GAAGU,EAAT,IAAeD,CAAC,GAAGP,EAAE,GAAGQ,EAAxB,IAA8BD,CAAC,GAAGL,EAAE,GAAGM,EAAvC,IAA6CD,CAAC,GAAGH,EAAE,GAAGI,EAD1D,IAEIF,CAAC,GAAGT,EAAE,GAAGW,EAAT,IAAeF,CAAC,GAAGP,EAAE,GAAGS,EAAxB,IAA8BF,CAAC,GAAGL,EAAE,GAAGO,EAAvC,IAA6CF,CAAC,GAAGH,EAAE,GAAGK,EAF1D,IAGIF,CAAC,GAAGT,EAAE,GAAGW,EAAT,IAAeF,CAAC,GAAGP,EAAE,GAAGS,EAAxB,IAA8BF,CAAC,GAAGL,EAAE,GAAGO,EAAvC,IAA6CF,CAAC,GAAGH,EAAE,GAAGK,EAH9D,EAGmE;AAC/D,WAAO,KAAP;AACH;;AACD,MAAIC,CAAC,GAAGd,KAAK,CAACe,iBAAN,CAAwBb,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCC,EAApC,EAAwCC,EAAxC,EAA4CC,EAA5C,EAAgDC,EAAhD,EAAoDC,EAApD,EAAwDE,CAAxD,EAA2DC,CAA3D,EAA8D,IAA9D,CAAR;AACA,SAAOE,CAAC,IAAID,EAAE,GAAG,CAAjB;AACH","sourcesContent":["import * as curve from '../core/curve';\nexport function containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n    if (lineWidth === 0) {\n        return false;\n    }\n    var _l = lineWidth;\n    if ((y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n        || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n        || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n        || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)) {\n        return false;\n    }\n    var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n    return d <= _l / 2;\n}\n"]},"metadata":{},"sourceType":"module"}
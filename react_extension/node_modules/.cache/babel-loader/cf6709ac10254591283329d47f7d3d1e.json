{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport VisualMapView from './VisualMapView';\nimport * as graphic from '../../util/graphic';\nimport { createSymbol } from '../../util/symbol';\nimport * as layout from '../../util/layout';\nimport * as helper from './helper';\n\nvar PiecewiseVisualMapView =\n/** @class */\nfunction (_super) {\n  __extends(PiecewiseVisualMapView, _super);\n\n  function PiecewiseVisualMapView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = PiecewiseVisualMapView.type;\n    return _this;\n  }\n\n  PiecewiseVisualMapView.prototype.doRender = function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, function (item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList); // TODO Category\n\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            verticalAlign: 'middle',\n            align: itemAlign,\n            font: textFont,\n            fill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n  };\n\n  PiecewiseVisualMapView.prototype._enableHoverLink = function (itemGroup, pieceIndex) {\n    var _this = this;\n\n    itemGroup.on('mouseover', function () {\n      return onHoverLink('highlight');\n    }).on('mouseout', function () {\n      return onHoverLink('downplay');\n    });\n\n    var onHoverLink = function (method) {\n      var visualMapModel = _this.visualMapModel; // TODO: TYPE More detailed action types\n\n      visualMapModel.option.hoverLink && _this.api.dispatchAction({\n        type: method,\n        batch: helper.makeHighDownBatch(visualMapModel.findTargetDataIndices(pieceIndex), visualMapModel)\n      });\n    };\n  };\n\n  PiecewiseVisualMapView.prototype._getItemAlign = function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  };\n\n  PiecewiseVisualMapView.prototype._renderEndsText = function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        verticalAlign: 'middle',\n        align: showLabel ? itemAlign : 'center',\n        text: text,\n        font: textStyleModel.getFont(),\n        fill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  };\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n\n\n  PiecewiseVisualMapView.prototype._getViewData = function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n      endsText = endsText.slice().reverse();\n    }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  };\n\n  PiecewiseVisualMapView.prototype._createItemSymbol = function (group, representValue, shapeParam) {\n    group.add(createSymbol( // symbol will be string\n    this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], // color will be string\n    this.getControllerVisual(representValue, 'color')));\n  };\n\n  PiecewiseVisualMapView.prototype._onItemClick = function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  };\n\n  PiecewiseVisualMapView.type = 'visualMap.piecewise';\n  return PiecewiseVisualMapView;\n}(VisualMapView);\n\nexport default PiecewiseVisualMapView;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/component/visualMap/PiecewiseView.js"],"names":["__extends","zrUtil","VisualMapView","graphic","createSymbol","layout","helper","PiecewiseVisualMapView","_super","_this","apply","arguments","type","prototype","doRender","thisGroup","group","removeAll","visualMapModel","textGap","get","textStyleModel","textFont","getFont","textFill","getTextColor","itemAlign","_getItemAlign","itemSize","viewData","_getViewData","endsText","showLabel","retrieve","_renderEndsText","each","viewPieceList","item","piece","itemGroup","Group","onclick","bind","_onItemClick","_enableHoverLink","indexInModelPieceList","representValue","getRepresentValue","_createItemSymbol","visualState","getValueState","add","Text","style","x","y","text","verticalAlign","align","font","fill","opacity","box","renderBackground","positionGroup","pieceIndex","on","onHoverLink","method","option","hoverLink","api","dispatchAction","batch","makeHighDownBatch","findTargetDataIndices","modelOption","orient","getItemAlign","map","getPieceList","index","inverse","reverse","slice","shapeParam","getControllerVisual","selected","clone","newKey","getSelectedMapKey","selectedMode","o","key","from","uid","visualMapId","id"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport VisualMapView from './VisualMapView';\nimport * as graphic from '../../util/graphic';\nimport { createSymbol } from '../../util/symbol';\nimport * as layout from '../../util/layout';\nimport * as helper from './helper';\n\nvar PiecewiseVisualMapView =\n/** @class */\nfunction (_super) {\n  __extends(PiecewiseVisualMapView, _super);\n\n  function PiecewiseVisualMapView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = PiecewiseVisualMapView.type;\n    return _this;\n  }\n\n  PiecewiseVisualMapView.prototype.doRender = function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, function (item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList); // TODO Category\n\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            verticalAlign: 'middle',\n            align: itemAlign,\n            font: textFont,\n            fill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n  };\n\n  PiecewiseVisualMapView.prototype._enableHoverLink = function (itemGroup, pieceIndex) {\n    var _this = this;\n\n    itemGroup.on('mouseover', function () {\n      return onHoverLink('highlight');\n    }).on('mouseout', function () {\n      return onHoverLink('downplay');\n    });\n\n    var onHoverLink = function (method) {\n      var visualMapModel = _this.visualMapModel; // TODO: TYPE More detailed action types\n\n      visualMapModel.option.hoverLink && _this.api.dispatchAction({\n        type: method,\n        batch: helper.makeHighDownBatch(visualMapModel.findTargetDataIndices(pieceIndex), visualMapModel)\n      });\n    };\n  };\n\n  PiecewiseVisualMapView.prototype._getItemAlign = function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  };\n\n  PiecewiseVisualMapView.prototype._renderEndsText = function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        verticalAlign: 'middle',\n        align: showLabel ? itemAlign : 'center',\n        text: text,\n        font: textStyleModel.getFont(),\n        fill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  };\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n\n\n  PiecewiseVisualMapView.prototype._getViewData = function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  };\n\n  PiecewiseVisualMapView.prototype._createItemSymbol = function (group, representValue, shapeParam) {\n    group.add(createSymbol( // symbol will be string\n    this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], // color will be string\n    this.getControllerVisual(representValue, 'color')));\n  };\n\n  PiecewiseVisualMapView.prototype._onItemClick = function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  };\n\n  PiecewiseVisualMapView.type = 'visualMap.piecewise';\n  return PiecewiseVisualMapView;\n}(VisualMapView);\n\nexport default PiecewiseVisualMapView;"]},"metadata":{},"sourceType":"module"}
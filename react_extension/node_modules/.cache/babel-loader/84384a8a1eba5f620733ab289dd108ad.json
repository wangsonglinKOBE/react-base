{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar opacityAccessPath = ['lineStyle', 'opacity'];\nvar parallelVisual = {\n  seriesType: 'parallel',\n  reset: function (seriesModel, ecModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var opacityMap = {\n      normal: seriesModel.get(['lineStyle', 'opacity']),\n      active: seriesModel.get('activeOpacity'),\n      inactive: seriesModel.get('inactiveOpacity')\n    };\n    return {\n      progress: function (params, data) {\n        coordSys.eachActiveState(data, function (activeState, dataIndex) {\n          var opacity = opacityMap[activeState];\n\n          if (activeState === 'normal' && data.hasItemOption) {\n            var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\n            itemOpacity != null && (opacity = itemOpacity);\n          }\n\n          var existsStyle = data.ensureUniqueItemVisual(dataIndex, 'style');\n          existsStyle.opacity = opacity;\n        }, params.start, params.end);\n      }\n    };\n  }\n};\nexport default parallelVisual;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/chart/parallel/parallelVisual.js"],"names":["opacityAccessPath","parallelVisual","seriesType","reset","seriesModel","ecModel","coordSys","coordinateSystem","opacityMap","normal","get","active","inactive","progress","params","data","eachActiveState","activeState","dataIndex","opacity","hasItemOption","itemOpacity","getItemModel","existsStyle","ensureUniqueItemVisual","start","end"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,iBAAiB,GAAG,CAAC,WAAD,EAAc,SAAd,CAAxB;AACA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,UAAU,EAAE,UADO;AAEnBC,EAAAA,KAAK,EAAE,UAAUC,WAAV,EAAuBC,OAAvB,EAAgC;AACrC,QAAIC,QAAQ,GAAGF,WAAW,CAACG,gBAA3B;AACA,QAAIC,UAAU,GAAG;AACfC,MAAAA,MAAM,EAAEL,WAAW,CAACM,GAAZ,CAAgB,CAAC,WAAD,EAAc,SAAd,CAAhB,CADO;AAEfC,MAAAA,MAAM,EAAEP,WAAW,CAACM,GAAZ,CAAgB,eAAhB,CAFO;AAGfE,MAAAA,QAAQ,EAAER,WAAW,CAACM,GAAZ,CAAgB,iBAAhB;AAHK,KAAjB;AAKA,WAAO;AACLG,MAAAA,QAAQ,EAAE,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAChCT,QAAAA,QAAQ,CAACU,eAAT,CAAyBD,IAAzB,EAA+B,UAAUE,WAAV,EAAuBC,SAAvB,EAAkC;AAC/D,cAAIC,OAAO,GAAGX,UAAU,CAACS,WAAD,CAAxB;;AAEA,cAAIA,WAAW,KAAK,QAAhB,IAA4BF,IAAI,CAACK,aAArC,EAAoD;AAClD,gBAAIC,WAAW,GAAGN,IAAI,CAACO,YAAL,CAAkBJ,SAAlB,EAA6BR,GAA7B,CAAiCV,iBAAjC,EAAoD,IAApD,CAAlB;AACAqB,YAAAA,WAAW,IAAI,IAAf,KAAwBF,OAAO,GAAGE,WAAlC;AACD;;AAED,cAAIE,WAAW,GAAGR,IAAI,CAACS,sBAAL,CAA4BN,SAA5B,EAAuC,OAAvC,CAAlB;AACAK,UAAAA,WAAW,CAACJ,OAAZ,GAAsBA,OAAtB;AACD,SAVD,EAUGL,MAAM,CAACW,KAVV,EAUiBX,MAAM,CAACY,GAVxB;AAWD;AAbI,KAAP;AAeD;AAxBkB,CAArB;AA0BA,eAAezB,cAAf","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar opacityAccessPath = ['lineStyle', 'opacity'];\nvar parallelVisual = {\n  seriesType: 'parallel',\n  reset: function (seriesModel, ecModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var opacityMap = {\n      normal: seriesModel.get(['lineStyle', 'opacity']),\n      active: seriesModel.get('activeOpacity'),\n      inactive: seriesModel.get('inactiveOpacity')\n    };\n    return {\n      progress: function (params, data) {\n        coordSys.eachActiveState(data, function (activeState, dataIndex) {\n          var opacity = opacityMap[activeState];\n\n          if (activeState === 'normal' && data.hasItemOption) {\n            var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\n            itemOpacity != null && (opacity = itemOpacity);\n          }\n\n          var existsStyle = data.ensureUniqueItemVisual(dataIndex, 'style');\n          existsStyle.opacity = opacity;\n        }, params.start, params.end);\n      }\n    };\n  }\n};\nexport default parallelVisual;"]},"metadata":{},"sourceType":"module"}
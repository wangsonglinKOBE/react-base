{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport ChartView from '../../view/Chart';\nimport * as graphic from '../../util/graphic';\nimport { setStatesStylesFromModel, enableHoverEmphasis } from '../../util/states';\nimport Path from 'zrender/lib/graphic/Path';\nimport { saveOldStyle } from '../../animation/basicTrasition';\n\nvar BoxplotView =\n/** @class */\nfunction (_super) {\n  __extends(BoxplotView, _super);\n\n  function BoxplotView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BoxplotView.type;\n    return _this;\n  }\n\n  BoxplotView.prototype.render = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var oldData = this._data; // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(symbolEl);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!symbolEl) {\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\n      } else {\n        saveOldStyle(symbolEl);\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\n      }\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  };\n\n  BoxplotView.prototype.remove = function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n    this._data = null;\n    data && data.eachItemGraphicEl(function (el) {\n      el && group.remove(el);\n    });\n  };\n\n  BoxplotView.type = 'boxplot';\n  return BoxplotView;\n}(ChartView);\n\nvar BoxPathShape =\n/** @class */\nfunction () {\n  function BoxPathShape() {}\n\n  return BoxPathShape;\n}();\n\nvar BoxPath =\n/** @class */\nfunction (_super) {\n  __extends(BoxPath, _super);\n\n  function BoxPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'boxplotBoxPath';\n    return _this;\n  }\n\n  BoxPath.prototype.getDefaultShape = function () {\n    return new BoxPathShape();\n  };\n\n  BoxPath.prototype.buildPath = function (ctx, shape) {\n    var ends = shape.points;\n    var i = 0;\n    ctx.moveTo(ends[i][0], ends[i][1]);\n    i++;\n\n    for (; i < 4; i++) {\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n\n    ctx.closePath();\n\n    for (; i < ends.length; i++) {\n      ctx.moveTo(ends[i][0], ends[i][1]);\n      i++;\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n  };\n\n  return BoxPath;\n}(Path);\n\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\n  var ends = itemLayout.ends;\n  var el = new BoxPath({\n    shape: {\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\n    }\n  });\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\n  return el;\n}\n\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\n  var seriesModel = data.hostModel;\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n  updateMethod(el, {\n    shape: {\n      points: itemLayout.ends\n    }\n  }, seriesModel, dataIndex);\n  el.useStyle(data.getItemVisual(dataIndex, 'style'));\n  el.style.strokeNoScale = true;\n  el.z2 = 100;\n  var itemModel = data.getItemModel(dataIndex);\n  setStatesStylesFromModel(el, itemModel);\n  enableHoverEmphasis(el, itemModel.get(['emphasis', 'focus']), itemModel.get(['emphasis', 'blurScope']));\n}\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nexport default BoxplotView;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/chart/boxplot/BoxplotView.js"],"names":["__extends","zrUtil","ChartView","graphic","setStatesStylesFromModel","enableHoverEmphasis","Path","saveOldStyle","BoxplotView","_super","_this","apply","arguments","type","prototype","render","seriesModel","ecModel","api","data","getData","group","oldData","_data","removeAll","constDim","get","diff","add","newIdx","hasValue","itemLayout","getItemLayout","symbolEl","createNormalBox","setItemGraphicEl","update","oldIdx","getItemGraphicEl","remove","updateNormalBoxData","el","execute","eachItemGraphicEl","BoxPathShape","BoxPath","opts","call","getDefaultShape","buildPath","ctx","shape","ends","points","i","moveTo","lineTo","closePath","length","dataIndex","isInit","transInit","hostModel","updateMethod","useStyle","getItemVisual","style","strokeNoScale","z2","itemModel","getItemModel","dim","map","point","slice","initBaseline"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport ChartView from '../../view/Chart';\nimport * as graphic from '../../util/graphic';\nimport { setStatesStylesFromModel, enableHoverEmphasis } from '../../util/states';\nimport Path from 'zrender/lib/graphic/Path';\nimport { saveOldStyle } from '../../animation/basicTrasition';\n\nvar BoxplotView =\n/** @class */\nfunction (_super) {\n  __extends(BoxplotView, _super);\n\n  function BoxplotView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BoxplotView.type;\n    return _this;\n  }\n\n  BoxplotView.prototype.render = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var oldData = this._data; // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(symbolEl);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!symbolEl) {\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\n      } else {\n        saveOldStyle(symbolEl);\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\n      }\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  };\n\n  BoxplotView.prototype.remove = function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n    this._data = null;\n    data && data.eachItemGraphicEl(function (el) {\n      el && group.remove(el);\n    });\n  };\n\n  BoxplotView.type = 'boxplot';\n  return BoxplotView;\n}(ChartView);\n\nvar BoxPathShape =\n/** @class */\nfunction () {\n  function BoxPathShape() {}\n\n  return BoxPathShape;\n}();\n\nvar BoxPath =\n/** @class */\nfunction (_super) {\n  __extends(BoxPath, _super);\n\n  function BoxPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'boxplotBoxPath';\n    return _this;\n  }\n\n  BoxPath.prototype.getDefaultShape = function () {\n    return new BoxPathShape();\n  };\n\n  BoxPath.prototype.buildPath = function (ctx, shape) {\n    var ends = shape.points;\n    var i = 0;\n    ctx.moveTo(ends[i][0], ends[i][1]);\n    i++;\n\n    for (; i < 4; i++) {\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n\n    ctx.closePath();\n\n    for (; i < ends.length; i++) {\n      ctx.moveTo(ends[i][0], ends[i][1]);\n      i++;\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n  };\n\n  return BoxPath;\n}(Path);\n\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\n  var ends = itemLayout.ends;\n  var el = new BoxPath({\n    shape: {\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\n    }\n  });\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\n  return el;\n}\n\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\n  var seriesModel = data.hostModel;\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n  updateMethod(el, {\n    shape: {\n      points: itemLayout.ends\n    }\n  }, seriesModel, dataIndex);\n  el.useStyle(data.getItemVisual(dataIndex, 'style'));\n  el.style.strokeNoScale = true;\n  el.z2 = 100;\n  var itemModel = data.getItemModel(dataIndex);\n  setStatesStylesFromModel(el, itemModel);\n  enableHoverEmphasis(el, itemModel.get(['emphasis', 'focus']), itemModel.get(['emphasis', 'blurScope']));\n}\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nexport default BoxplotView;"]},"metadata":{},"sourceType":"module"}
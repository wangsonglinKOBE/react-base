{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nimport * as zrUtil from 'zrender/lib/core/util';\nimport VisualMapping from './VisualMapping';\nimport { getItemVisualFromData, setItemVisualFromData } from './helper';\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name_1 in obj) {\n      if (obj.hasOwnProperty(name_1)) {\n        return true;\n      }\n    }\n  }\n}\n\nexport function createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\nexport function replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param stateList\n * @param visualMappings\n * @param list\n * @param getValueState param: valueOrIndex, return: state.\n * @param scope Scope for getValueState\n * @param dimension Concrete dimension, if used.\n */\n// ???! handle brush?\n\nexport function applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return getItemVisualFromData(data, dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    setItemVisualFromData(data, dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex // First argument is index\n    : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n    // @ts-ignore\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param data\n * @param stateList\n * @param visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param getValueState param: valueOrIndex, return: state.\n * @param dim dimension or dimension index.\n */\n\nexport function incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  return {\n    progress: function progress(params, data) {\n      var dimIndex;\n\n      if (dim != null) {\n        dimIndex = data.getDimensionIndex(dim);\n      }\n\n      function getVisual(key) {\n        return getItemVisualFromData(data, dataIndex, key);\n      }\n\n      function setVisual(key, value) {\n        setItemVisualFromData(data, dataIndex, key, value);\n      }\n\n      var dataIndex;\n      var store = data.getStore();\n\n      while ((dataIndex = params.next()) != null) {\n        var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n        // @ts-ignore\n\n        if (rawDataItem && rawDataItem.visualMap === false) {\n          continue;\n        }\n\n        var value = dim != null ? store.get(dimIndex, dataIndex) : dataIndex;\n        var valueState = getValueState(value);\n        var mappings = visualMappings[valueState];\n        var visualTypes = visualTypesMap[valueState];\n\n        for (var i = 0, len = visualTypes.length; i < len; i++) {\n          var type = visualTypes[i];\n          mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n        }\n      }\n    }\n  };\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/visual/visualSolution.js"],"names":["zrUtil","VisualMapping","getItemVisualFromData","setItemVisualFromData","each","hasKeys","obj","name_1","hasOwnProperty","createVisualMappings","option","stateList","supplementVisualOption","visualMappings","state","mappings","createMappings","visualData","visualType","isValidType","mappingOption","type","visual","clone","__hidden","__alphaForOpacity","Creater","prototype","replaceVisualOption","thisOption","newOption","keys","has","key","applyVisual","data","getValueState","scope","dimension","visualTypesMap","visualTypes","prepareVisualTypes","dataIndex","getVisual","setVisual","value","eachItem","valueOrIndex","index","rawDataItem","getRawDataItem","visualMap","valueState","call","i","len","length","incrementalApplyVisual","dim","progress","params","dimIndex","getDimensionIndex","store","getStore","next","get"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nimport * as zrUtil from 'zrender/lib/core/util';\nimport VisualMapping from './VisualMapping';\nimport { getItemVisualFromData, setItemVisualFromData } from './helper';\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name_1 in obj) {\n      if (obj.hasOwnProperty(name_1)) {\n        return true;\n      }\n    }\n  }\n}\n\nexport function createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\nexport function replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param stateList\n * @param visualMappings\n * @param list\n * @param getValueState param: valueOrIndex, return: state.\n * @param scope Scope for getValueState\n * @param dimension Concrete dimension, if used.\n */\n// ???! handle brush?\n\nexport function applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return getItemVisualFromData(data, dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    setItemVisualFromData(data, dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex // First argument is index\n    : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n    // @ts-ignore\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param data\n * @param stateList\n * @param visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param getValueState param: valueOrIndex, return: state.\n * @param dim dimension or dimension index.\n */\n\nexport function incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  return {\n    progress: function progress(params, data) {\n      var dimIndex;\n\n      if (dim != null) {\n        dimIndex = data.getDimensionIndex(dim);\n      }\n\n      function getVisual(key) {\n        return getItemVisualFromData(data, dataIndex, key);\n      }\n\n      function setVisual(key, value) {\n        setItemVisualFromData(data, dataIndex, key, value);\n      }\n\n      var dataIndex;\n      var store = data.getStore();\n\n      while ((dataIndex = params.next()) != null) {\n        var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n        // @ts-ignore\n\n        if (rawDataItem && rawDataItem.visualMap === false) {\n          continue;\n        }\n\n        var value = dim != null ? store.get(dimIndex, dataIndex) : dataIndex;\n        var valueState = getValueState(value);\n        var mappings = visualMappings[valueState];\n        var visualTypes = visualTypesMap[valueState];\n\n        for (var i = 0, len = visualTypes.length; i < len; i++) {\n          var type = visualTypes[i];\n          mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n        }\n      }\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}
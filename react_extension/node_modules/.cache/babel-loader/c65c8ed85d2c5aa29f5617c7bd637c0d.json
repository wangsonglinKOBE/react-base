{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\n/**\n * Line path for bezier and straight line draw\n */\n\nimport * as graphic from '../../util/graphic';\nimport * as vec2 from 'zrender/lib/core/vector';\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nvar StraightLineShape =\n/** @class */\nfunction () {\n  function StraightLineShape() {\n    // Start point\n    this.x1 = 0;\n    this.y1 = 0; // End point\n\n    this.x2 = 0;\n    this.y2 = 0;\n    this.percent = 1;\n  }\n\n  return StraightLineShape;\n}();\n\nvar CurveShape =\n/** @class */\nfunction (_super) {\n  __extends(CurveShape, _super);\n\n  function CurveShape() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return CurveShape;\n}(StraightLineShape);\n\nfunction isStraightLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar ECLinePath =\n/** @class */\nfunction (_super) {\n  __extends(ECLinePath, _super);\n\n  function ECLinePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'ec-line';\n    return _this;\n  }\n\n  ECLinePath.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  ECLinePath.prototype.getDefaultShape = function () {\n    return new StraightLineShape();\n  };\n\n  ECLinePath.prototype.buildPath = function (ctx, shape) {\n    if (isStraightLine(shape)) {\n      straightLineProto.buildPath.call(this, ctx, shape);\n    } else {\n      bezierCurveProto.buildPath.call(this, ctx, shape);\n    }\n  };\n\n  ECLinePath.prototype.pointAt = function (t) {\n    if (isStraightLine(this.shape)) {\n      return straightLineProto.pointAt.call(this, t);\n    } else {\n      return bezierCurveProto.pointAt.call(this, t);\n    }\n  };\n\n  ECLinePath.prototype.tangentAt = function (t) {\n    var shape = this.shape;\n    var p = isStraightLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  };\n\n  return ECLinePath;\n}(graphic.Path);\n\nexport default ECLinePath;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/chart/helper/LinePath.js"],"names":["__extends","graphic","vec2","straightLineProto","Line","prototype","bezierCurveProto","BezierCurve","StraightLineShape","x1","y1","x2","y2","percent","CurveShape","_super","apply","arguments","isStraightLine","shape","isNaN","cpx1","cpy1","ECLinePath","opts","_this","call","type","getDefaultStyle","stroke","fill","getDefaultShape","buildPath","ctx","pointAt","t","tangentAt","p","normalize","Path"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\n/**\n * Line path for bezier and straight line draw\n */\n\nimport * as graphic from '../../util/graphic';\nimport * as vec2 from 'zrender/lib/core/vector';\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nvar StraightLineShape =\n/** @class */\nfunction () {\n  function StraightLineShape() {\n    // Start point\n    this.x1 = 0;\n    this.y1 = 0; // End point\n\n    this.x2 = 0;\n    this.y2 = 0;\n    this.percent = 1;\n  }\n\n  return StraightLineShape;\n}();\n\nvar CurveShape =\n/** @class */\nfunction (_super) {\n  __extends(CurveShape, _super);\n\n  function CurveShape() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return CurveShape;\n}(StraightLineShape);\n\nfunction isStraightLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar ECLinePath =\n/** @class */\nfunction (_super) {\n  __extends(ECLinePath, _super);\n\n  function ECLinePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'ec-line';\n    return _this;\n  }\n\n  ECLinePath.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  ECLinePath.prototype.getDefaultShape = function () {\n    return new StraightLineShape();\n  };\n\n  ECLinePath.prototype.buildPath = function (ctx, shape) {\n    if (isStraightLine(shape)) {\n      straightLineProto.buildPath.call(this, ctx, shape);\n    } else {\n      bezierCurveProto.buildPath.call(this, ctx, shape);\n    }\n  };\n\n  ECLinePath.prototype.pointAt = function (t) {\n    if (isStraightLine(this.shape)) {\n      return straightLineProto.pointAt.call(this, t);\n    } else {\n      return bezierCurveProto.pointAt.call(this, t);\n    }\n  };\n\n  ECLinePath.prototype.tangentAt = function (t) {\n    var shape = this.shape;\n    var p = isStraightLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  };\n\n  return ECLinePath;\n}(graphic.Path);\n\nexport default ECLinePath;"]},"metadata":{},"sourceType":"module"}
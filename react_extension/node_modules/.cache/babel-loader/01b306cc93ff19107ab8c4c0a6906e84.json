{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nimport { parseClassType } from './clazz';\n/**\n * Usage of query:\n * `chart.on('click', query, handler);`\n * The `query` can be:\n * + The component type query string, only `mainType` or `mainType.subType`,\n *   like: 'xAxis', 'series', 'xAxis.category' or 'series.line'.\n * + The component query object, like:\n *   `{seriesIndex: 2}`, `{seriesName: 'xx'}`, `{seriesId: 'some'}`,\n *   `{xAxisIndex: 2}`, `{xAxisName: 'xx'}`, `{xAxisId: 'some'}`.\n * + The data query object, like:\n *   `{dataIndex: 123}`, `{dataType: 'link'}`, `{name: 'some'}`.\n * + The other query object (cmponent customized query), like:\n *   `{element: 'some'}` (only available in custom series).\n *\n * Caveat: If a prop in the `query` object is `null/undefined`, it is the\n * same as there is no such prop in the `query` object.\n */\n\nvar ECEventProcessor =\n/** @class */\nfunction () {\n  function ECEventProcessor() {}\n\n  ECEventProcessor.prototype.normalizeQuery = function (query) {\n    var cptQuery = {};\n    var dataQuery = {};\n    var otherQuery = {}; // `query` is `mainType` or `mainType.subType` of component.\n\n    if (zrUtil.isString(query)) {\n      var condCptType = parseClassType(query); // `.main` and `.sub` may be ''.\n\n      cptQuery.mainType = condCptType.main || null;\n      cptQuery.subType = condCptType.sub || null;\n    } // `query` is an object, convert to {mainType, index, name, id}.\n    else {\n      // `xxxIndex`, `xxxName`, `xxxId`, `name`, `dataIndex`, `dataType` is reserved,\n      // can not be used in `compomentModel.filterForExposedEvent`.\n      var suffixes_1 = ['Index', 'Name', 'Id'];\n      var dataKeys_1 = {\n        name: 1,\n        dataIndex: 1,\n        dataType: 1\n      };\n      zrUtil.each(query, function (val, key) {\n        var reserved = false;\n\n        for (var i = 0; i < suffixes_1.length; i++) {\n          var propSuffix = suffixes_1[i];\n          var suffixPos = key.lastIndexOf(propSuffix);\n\n          if (suffixPos > 0 && suffixPos === key.length - propSuffix.length) {\n            var mainType = key.slice(0, suffixPos); // Consider `dataIndex`.\n\n            if (mainType !== 'data') {\n              cptQuery.mainType = mainType;\n              cptQuery[propSuffix.toLowerCase()] = val;\n              reserved = true;\n            }\n          }\n        }\n\n        if (dataKeys_1.hasOwnProperty(key)) {\n          dataQuery[key] = val;\n          reserved = true;\n        }\n\n        if (!reserved) {\n          otherQuery[key] = val;\n        }\n      });\n    }\n\n    return {\n      cptQuery: cptQuery,\n      dataQuery: dataQuery,\n      otherQuery: otherQuery\n    };\n  };\n\n  ECEventProcessor.prototype.filter = function (eventType, query) {\n    // They should be assigned before each trigger call.\n    var eventInfo = this.eventInfo;\n\n    if (!eventInfo) {\n      return true;\n    }\n\n    var targetEl = eventInfo.targetEl;\n    var packedEvent = eventInfo.packedEvent;\n    var model = eventInfo.model;\n    var view = eventInfo.view; // For event like 'globalout'.\n\n    if (!model || !view) {\n      return true;\n    }\n\n    var cptQuery = query.cptQuery;\n    var dataQuery = query.dataQuery;\n    return check(cptQuery, model, 'mainType') && check(cptQuery, model, 'subType') && check(cptQuery, model, 'index', 'componentIndex') && check(cptQuery, model, 'name') && check(cptQuery, model, 'id') && check(dataQuery, packedEvent, 'name') && check(dataQuery, packedEvent, 'dataIndex') && check(dataQuery, packedEvent, 'dataType') && (!view.filterForExposedEvent || view.filterForExposedEvent(eventType, query.otherQuery, targetEl, packedEvent));\n\n    function check(query, host, prop, propOnHost) {\n      return query[prop] == null || host[propOnHost || prop] === query[prop];\n    }\n  };\n\n  ECEventProcessor.prototype.afterTrigger = function () {\n    // Make sure the eventInfo wont be used in next trigger.\n    this.eventInfo = null;\n  };\n\n  return ECEventProcessor;\n}();\n\nexport { ECEventProcessor };\n;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/util/ECEventProcessor.js"],"names":["zrUtil","parseClassType","ECEventProcessor","prototype","normalizeQuery","query","cptQuery","dataQuery","otherQuery","isString","condCptType","mainType","main","subType","sub","suffixes_1","dataKeys_1","name","dataIndex","dataType","each","val","key","reserved","i","length","propSuffix","suffixPos","lastIndexOf","slice","toLowerCase","hasOwnProperty","filter","eventType","eventInfo","targetEl","packedEvent","model","view","check","filterForExposedEvent","host","prop","propOnHost","afterTrigger"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nimport { parseClassType } from './clazz';\n/**\n * Usage of query:\n * `chart.on('click', query, handler);`\n * The `query` can be:\n * + The component type query string, only `mainType` or `mainType.subType`,\n *   like: 'xAxis', 'series', 'xAxis.category' or 'series.line'.\n * + The component query object, like:\n *   `{seriesIndex: 2}`, `{seriesName: 'xx'}`, `{seriesId: 'some'}`,\n *   `{xAxisIndex: 2}`, `{xAxisName: 'xx'}`, `{xAxisId: 'some'}`.\n * + The data query object, like:\n *   `{dataIndex: 123}`, `{dataType: 'link'}`, `{name: 'some'}`.\n * + The other query object (cmponent customized query), like:\n *   `{element: 'some'}` (only available in custom series).\n *\n * Caveat: If a prop in the `query` object is `null/undefined`, it is the\n * same as there is no such prop in the `query` object.\n */\n\nvar ECEventProcessor =\n/** @class */\nfunction () {\n  function ECEventProcessor() {}\n\n  ECEventProcessor.prototype.normalizeQuery = function (query) {\n    var cptQuery = {};\n    var dataQuery = {};\n    var otherQuery = {}; // `query` is `mainType` or `mainType.subType` of component.\n\n    if (zrUtil.isString(query)) {\n      var condCptType = parseClassType(query); // `.main` and `.sub` may be ''.\n\n      cptQuery.mainType = condCptType.main || null;\n      cptQuery.subType = condCptType.sub || null;\n    } // `query` is an object, convert to {mainType, index, name, id}.\n    else {\n        // `xxxIndex`, `xxxName`, `xxxId`, `name`, `dataIndex`, `dataType` is reserved,\n        // can not be used in `compomentModel.filterForExposedEvent`.\n        var suffixes_1 = ['Index', 'Name', 'Id'];\n        var dataKeys_1 = {\n          name: 1,\n          dataIndex: 1,\n          dataType: 1\n        };\n        zrUtil.each(query, function (val, key) {\n          var reserved = false;\n\n          for (var i = 0; i < suffixes_1.length; i++) {\n            var propSuffix = suffixes_1[i];\n            var suffixPos = key.lastIndexOf(propSuffix);\n\n            if (suffixPos > 0 && suffixPos === key.length - propSuffix.length) {\n              var mainType = key.slice(0, suffixPos); // Consider `dataIndex`.\n\n              if (mainType !== 'data') {\n                cptQuery.mainType = mainType;\n                cptQuery[propSuffix.toLowerCase()] = val;\n                reserved = true;\n              }\n            }\n          }\n\n          if (dataKeys_1.hasOwnProperty(key)) {\n            dataQuery[key] = val;\n            reserved = true;\n          }\n\n          if (!reserved) {\n            otherQuery[key] = val;\n          }\n        });\n      }\n\n    return {\n      cptQuery: cptQuery,\n      dataQuery: dataQuery,\n      otherQuery: otherQuery\n    };\n  };\n\n  ECEventProcessor.prototype.filter = function (eventType, query) {\n    // They should be assigned before each trigger call.\n    var eventInfo = this.eventInfo;\n\n    if (!eventInfo) {\n      return true;\n    }\n\n    var targetEl = eventInfo.targetEl;\n    var packedEvent = eventInfo.packedEvent;\n    var model = eventInfo.model;\n    var view = eventInfo.view; // For event like 'globalout'.\n\n    if (!model || !view) {\n      return true;\n    }\n\n    var cptQuery = query.cptQuery;\n    var dataQuery = query.dataQuery;\n    return check(cptQuery, model, 'mainType') && check(cptQuery, model, 'subType') && check(cptQuery, model, 'index', 'componentIndex') && check(cptQuery, model, 'name') && check(cptQuery, model, 'id') && check(dataQuery, packedEvent, 'name') && check(dataQuery, packedEvent, 'dataIndex') && check(dataQuery, packedEvent, 'dataType') && (!view.filterForExposedEvent || view.filterForExposedEvent(eventType, query.otherQuery, targetEl, packedEvent));\n\n    function check(query, host, prop, propOnHost) {\n      return query[prop] == null || host[propOnHost || prop] === query[prop];\n    }\n  };\n\n  ECEventProcessor.prototype.afterTrigger = function () {\n    // Make sure the eventInfo wont be used in next trigger.\n    this.eventInfo = null;\n  };\n\n  return ECEventProcessor;\n}();\n\nexport { ECEventProcessor };\n;"]},"metadata":{},"sourceType":"module"}
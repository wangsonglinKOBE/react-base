{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { parseRichText, parsePlainText } from './helper/parseText';\nimport TSpan from './TSpan';\nimport { retrieve2, each, normalizeCssArray, trim, retrieve3, extend, keys, defaults } from '../core/util';\nimport { DEFAULT_FONT, adjustTextX, adjustTextY } from '../contain/text';\nimport ZRImage from './Image';\nimport Rect from './shape/Rect';\nimport BoundingRect from '../core/BoundingRect';\nimport Displayable, { DEFAULT_COMMON_ANIMATION_PROPS } from './Displayable';\nvar DEFAULT_RICH_TEXT_COLOR = {\n  fill: '#000'\n};\nvar DEFAULT_STROKE_LINE_WIDTH = 2;\nexport var DEFAULT_TEXT_ANIMATION_PROPS = {\n  style: defaults({\n    fill: true,\n    stroke: true,\n    fillOpacity: true,\n    strokeOpacity: true,\n    lineWidth: true,\n    fontSize: true,\n    lineHeight: true,\n    width: true,\n    height: true,\n    textShadowColor: true,\n    textShadowBlur: true,\n    textShadowOffsetX: true,\n    textShadowOffsetY: true,\n    backgroundColor: true,\n    padding: true,\n    borderColor: true,\n    borderWidth: true,\n    borderRadius: true\n  }, DEFAULT_COMMON_ANIMATION_PROPS.style)\n};\n\nvar ZRText = function (_super) {\n  __extends(ZRText, _super);\n\n  function ZRText(opts) {\n    var _this = _super.call(this) || this;\n\n    _this.type = 'text';\n    _this._children = [];\n    _this._defaultStyle = DEFAULT_RICH_TEXT_COLOR;\n\n    _this.attr(opts);\n\n    return _this;\n  }\n\n  ZRText.prototype.childrenRef = function () {\n    return this._children;\n  };\n\n  ZRText.prototype.update = function () {\n    _super.prototype.update.call(this);\n\n    if (this.styleChanged()) {\n      this._updateSubTexts();\n    }\n\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      child.zlevel = this.zlevel;\n      child.z = this.z;\n      child.z2 = this.z2;\n      child.culling = this.culling;\n      child.cursor = this.cursor;\n      child.invisible = this.invisible;\n    }\n  };\n\n  ZRText.prototype.updateTransform = function () {\n    var innerTransformable = this.innerTransformable;\n\n    if (innerTransformable) {\n      innerTransformable.updateTransform();\n\n      if (innerTransformable.transform) {\n        this.transform = innerTransformable.transform;\n      }\n    } else {\n      _super.prototype.updateTransform.call(this);\n    }\n  };\n\n  ZRText.prototype.getLocalTransform = function (m) {\n    var innerTransformable = this.innerTransformable;\n    return innerTransformable ? innerTransformable.getLocalTransform(m) : _super.prototype.getLocalTransform.call(this, m);\n  };\n\n  ZRText.prototype.getComputedTransform = function () {\n    if (this.__hostTarget) {\n      this.__hostTarget.getComputedTransform();\n\n      this.__hostTarget.updateInnerText(true);\n    }\n\n    return _super.prototype.getComputedTransform.call(this);\n  };\n\n  ZRText.prototype._updateSubTexts = function () {\n    this._childCursor = 0;\n    normalizeTextStyle(this.style);\n    this.style.rich ? this._updateRichTexts() : this._updatePlainTexts();\n    this._children.length = this._childCursor;\n    this.styleUpdated();\n  };\n\n  ZRText.prototype.addSelfToZr = function (zr) {\n    _super.prototype.addSelfToZr.call(this, zr);\n\n    for (var i = 0; i < this._children.length; i++) {\n      this._children[i].__zr = zr;\n    }\n  };\n\n  ZRText.prototype.removeSelfFromZr = function (zr) {\n    _super.prototype.removeSelfFromZr.call(this, zr);\n\n    for (var i = 0; i < this._children.length; i++) {\n      this._children[i].__zr = null;\n    }\n  };\n\n  ZRText.prototype.getBoundingRect = function () {\n    if (this.styleChanged()) {\n      this._updateSubTexts();\n    }\n\n    if (!this._rect) {\n      var tmpRect = new BoundingRect(0, 0, 0, 0);\n      var children = this._children;\n      var tmpMat = [];\n      var rect = null;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i];\n        var childRect = child.getBoundingRect();\n        var transform = child.getLocalTransform(tmpMat);\n\n        if (transform) {\n          tmpRect.copy(childRect);\n          tmpRect.applyTransform(transform);\n          rect = rect || tmpRect.clone();\n          rect.union(tmpRect);\n        } else {\n          rect = rect || childRect.clone();\n          rect.union(childRect);\n        }\n      }\n\n      this._rect = rect || tmpRect;\n    }\n\n    return this._rect;\n  };\n\n  ZRText.prototype.setDefaultTextStyle = function (defaultTextStyle) {\n    this._defaultStyle = defaultTextStyle || DEFAULT_RICH_TEXT_COLOR;\n  };\n\n  ZRText.prototype.setTextContent = function (textContent) {\n    throw new Error('Can\\'t attach text on another text');\n  };\n\n  ZRText.prototype._mergeStyle = function (targetStyle, sourceStyle) {\n    if (!sourceStyle) {\n      return targetStyle;\n    }\n\n    var sourceRich = sourceStyle.rich;\n    var targetRich = targetStyle.rich || sourceRich && {};\n    extend(targetStyle, sourceStyle);\n\n    if (sourceRich && targetRich) {\n      this._mergeRich(targetRich, sourceRich);\n\n      targetStyle.rich = targetRich;\n    } else if (targetRich) {\n      targetStyle.rich = targetRich;\n    }\n\n    return targetStyle;\n  };\n\n  ZRText.prototype._mergeRich = function (targetRich, sourceRich) {\n    var richNames = keys(sourceRich);\n\n    for (var i = 0; i < richNames.length; i++) {\n      var richName = richNames[i];\n      targetRich[richName] = targetRich[richName] || {};\n      extend(targetRich[richName], sourceRich[richName]);\n    }\n  };\n\n  ZRText.prototype.getAnimationStyleProps = function () {\n    return DEFAULT_TEXT_ANIMATION_PROPS;\n  };\n\n  ZRText.prototype._getOrCreateChild = function (Ctor) {\n    var child = this._children[this._childCursor];\n\n    if (!child || !(child instanceof Ctor)) {\n      child = new Ctor();\n    }\n\n    this._children[this._childCursor++] = child;\n    child.__zr = this.__zr;\n    child.parent = this;\n    return child;\n  };\n\n  ZRText.prototype._updatePlainTexts = function () {\n    var style = this.style;\n    var textFont = style.font || DEFAULT_FONT;\n    var textPadding = style.padding;\n    var text = getStyleText(style);\n    var contentBlock = parsePlainText(text, style);\n    var needDrawBg = needDrawBackground(style);\n    var bgColorDrawn = !!style.backgroundColor;\n    var outerHeight = contentBlock.outerHeight;\n    var textLines = contentBlock.lines;\n    var lineHeight = contentBlock.lineHeight;\n    var defaultStyle = this._defaultStyle;\n    var baseX = style.x || 0;\n    var baseY = style.y || 0;\n    var textAlign = style.align || defaultStyle.align || 'left';\n    var verticalAlign = style.verticalAlign || defaultStyle.verticalAlign || 'top';\n    var textX = baseX;\n    var textY = adjustTextY(baseY, contentBlock.contentHeight, verticalAlign);\n\n    if (needDrawBg || textPadding) {\n      var outerWidth_1 = contentBlock.width;\n      textPadding && (outerWidth_1 += textPadding[1] + textPadding[3]);\n      var boxX = adjustTextX(baseX, outerWidth_1, textAlign);\n      var boxY = adjustTextY(baseY, outerHeight, verticalAlign);\n      needDrawBg && this._renderBackground(style, style, boxX, boxY, outerWidth_1, outerHeight);\n    }\n\n    textY += lineHeight / 2;\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n\n      if (verticalAlign === 'top') {\n        textY += textPadding[0];\n      } else if (verticalAlign === 'bottom') {\n        textY -= textPadding[2];\n      }\n    }\n\n    var defaultLineWidth = 0;\n    var useDefaultFill = false;\n    var textFill = getFill('fill' in style ? style.fill : (useDefaultFill = true, defaultStyle.fill));\n    var textStroke = getStroke('stroke' in style ? style.stroke : !bgColorDrawn && (!defaultStyle.autoStroke || useDefaultFill) ? (defaultLineWidth = DEFAULT_STROKE_LINE_WIDTH, defaultStyle.stroke) : null);\n    var hasShadow = style.textShadowBlur > 0;\n    var fixedBoundingRect = style.width != null && (style.overflow === 'truncate' || style.overflow === 'break' || style.overflow === 'breakAll');\n    var calculatedLineHeight = contentBlock.calculatedLineHeight;\n\n    for (var i = 0; i < textLines.length; i++) {\n      var el = this._getOrCreateChild(TSpan);\n\n      var subElStyle = el.createStyle();\n      el.useStyle(subElStyle);\n      subElStyle.text = textLines[i];\n      subElStyle.x = textX;\n      subElStyle.y = textY;\n\n      if (textAlign) {\n        subElStyle.textAlign = textAlign;\n      }\n\n      subElStyle.textBaseline = 'middle';\n      subElStyle.opacity = style.opacity;\n      subElStyle.strokeFirst = true;\n\n      if (hasShadow) {\n        subElStyle.shadowBlur = style.textShadowBlur || 0;\n        subElStyle.shadowColor = style.textShadowColor || 'transparent';\n        subElStyle.shadowOffsetX = style.textShadowOffsetX || 0;\n        subElStyle.shadowOffsetY = style.textShadowOffsetY || 0;\n      }\n\n      if (textStroke) {\n        subElStyle.stroke = textStroke;\n        subElStyle.lineWidth = style.lineWidth || defaultLineWidth;\n        subElStyle.lineDash = style.lineDash;\n        subElStyle.lineDashOffset = style.lineDashOffset || 0;\n      }\n\n      if (textFill) {\n        subElStyle.fill = textFill;\n      }\n\n      subElStyle.font = textFont;\n      textY += lineHeight;\n\n      if (fixedBoundingRect) {\n        el.setBoundingRect(new BoundingRect(adjustTextX(subElStyle.x, style.width, subElStyle.textAlign), adjustTextY(subElStyle.y, calculatedLineHeight, subElStyle.textBaseline), style.width, calculatedLineHeight));\n      }\n    }\n  };\n\n  ZRText.prototype._updateRichTexts = function () {\n    var style = this.style;\n    var text = getStyleText(style);\n    var contentBlock = parseRichText(text, style);\n    var contentWidth = contentBlock.width;\n    var outerWidth = contentBlock.outerWidth;\n    var outerHeight = contentBlock.outerHeight;\n    var textPadding = style.padding;\n    var baseX = style.x || 0;\n    var baseY = style.y || 0;\n    var defaultStyle = this._defaultStyle;\n    var textAlign = style.align || defaultStyle.align;\n    var verticalAlign = style.verticalAlign || defaultStyle.verticalAlign;\n    var boxX = adjustTextX(baseX, outerWidth, textAlign);\n    var boxY = adjustTextY(baseY, outerHeight, verticalAlign);\n    var xLeft = boxX;\n    var lineTop = boxY;\n\n    if (textPadding) {\n      xLeft += textPadding[3];\n      lineTop += textPadding[0];\n    }\n\n    var xRight = xLeft + contentWidth;\n\n    if (needDrawBackground(style)) {\n      this._renderBackground(style, style, boxX, boxY, outerWidth, outerHeight);\n    }\n\n    var bgColorDrawn = !!style.backgroundColor;\n\n    for (var i = 0; i < contentBlock.lines.length; i++) {\n      var line = contentBlock.lines[i];\n      var tokens = line.tokens;\n      var tokenCount = tokens.length;\n      var lineHeight = line.lineHeight;\n      var remainedWidth = line.width;\n      var leftIndex = 0;\n      var lineXLeft = xLeft;\n      var lineXRight = xRight;\n      var rightIndex = tokenCount - 1;\n      var token = void 0;\n\n      while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.align || token.align === 'left')) {\n        this._placeToken(token, style, lineHeight, lineTop, lineXLeft, 'left', bgColorDrawn);\n\n        remainedWidth -= token.width;\n        lineXLeft += token.width;\n        leftIndex++;\n      }\n\n      while (rightIndex >= 0 && (token = tokens[rightIndex], token.align === 'right')) {\n        this._placeToken(token, style, lineHeight, lineTop, lineXRight, 'right', bgColorDrawn);\n\n        remainedWidth -= token.width;\n        lineXRight -= token.width;\n        rightIndex--;\n      }\n\n      lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - remainedWidth) / 2;\n\n      while (leftIndex <= rightIndex) {\n        token = tokens[leftIndex];\n\n        this._placeToken(token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center', bgColorDrawn);\n\n        lineXLeft += token.width;\n        leftIndex++;\n      }\n\n      lineTop += lineHeight;\n    }\n  };\n\n  ZRText.prototype._placeToken = function (token, style, lineHeight, lineTop, x, textAlign, parentBgColorDrawn) {\n    var tokenStyle = style.rich[token.styleName] || {};\n    tokenStyle.text = token.text;\n    var verticalAlign = token.verticalAlign;\n    var y = lineTop + lineHeight / 2;\n\n    if (verticalAlign === 'top') {\n      y = lineTop + token.height / 2;\n    } else if (verticalAlign === 'bottom') {\n      y = lineTop + lineHeight - token.height / 2;\n    }\n\n    var needDrawBg = !token.isLineHolder && needDrawBackground(tokenStyle);\n    needDrawBg && this._renderBackground(tokenStyle, style, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n    var bgColorDrawn = !!tokenStyle.backgroundColor;\n    var textPadding = token.textPadding;\n\n    if (textPadding) {\n      x = getTextXForPadding(x, textAlign, textPadding);\n      y -= token.height / 2 - textPadding[0] - token.innerHeight / 2;\n    }\n\n    var el = this._getOrCreateChild(TSpan);\n\n    var subElStyle = el.createStyle();\n    el.useStyle(subElStyle);\n    var defaultStyle = this._defaultStyle;\n    var useDefaultFill = false;\n    var defaultLineWidth = 0;\n    var textFill = getFill('fill' in tokenStyle ? tokenStyle.fill : 'fill' in style ? style.fill : (useDefaultFill = true, defaultStyle.fill));\n    var textStroke = getStroke('stroke' in tokenStyle ? tokenStyle.stroke : 'stroke' in style ? style.stroke : !bgColorDrawn && !parentBgColorDrawn && (!defaultStyle.autoStroke || useDefaultFill) ? (defaultLineWidth = DEFAULT_STROKE_LINE_WIDTH, defaultStyle.stroke) : null);\n    var hasShadow = tokenStyle.textShadowBlur > 0 || style.textShadowBlur > 0;\n    subElStyle.text = token.text;\n    subElStyle.x = x;\n    subElStyle.y = y;\n\n    if (hasShadow) {\n      subElStyle.shadowBlur = tokenStyle.textShadowBlur || style.textShadowBlur || 0;\n      subElStyle.shadowColor = tokenStyle.textShadowColor || style.textShadowColor || 'transparent';\n      subElStyle.shadowOffsetX = tokenStyle.textShadowOffsetX || style.textShadowOffsetX || 0;\n      subElStyle.shadowOffsetY = tokenStyle.textShadowOffsetY || style.textShadowOffsetY || 0;\n    }\n\n    subElStyle.textAlign = textAlign;\n    subElStyle.textBaseline = 'middle';\n    subElStyle.font = token.font || DEFAULT_FONT;\n    subElStyle.opacity = retrieve3(tokenStyle.opacity, style.opacity, 1);\n\n    if (textStroke) {\n      subElStyle.lineWidth = retrieve3(tokenStyle.lineWidth, style.lineWidth, defaultLineWidth);\n      subElStyle.lineDash = retrieve2(tokenStyle.lineDash, style.lineDash);\n      subElStyle.lineDashOffset = style.lineDashOffset || 0;\n      subElStyle.stroke = textStroke;\n    }\n\n    if (textFill) {\n      subElStyle.fill = textFill;\n    }\n\n    var textWidth = token.contentWidth;\n    var textHeight = token.contentHeight;\n    el.setBoundingRect(new BoundingRect(adjustTextX(subElStyle.x, textWidth, subElStyle.textAlign), adjustTextY(subElStyle.y, textHeight, subElStyle.textBaseline), textWidth, textHeight));\n  };\n\n  ZRText.prototype._renderBackground = function (style, topStyle, x, y, width, height) {\n    var textBackgroundColor = style.backgroundColor;\n    var textBorderWidth = style.borderWidth;\n    var textBorderColor = style.borderColor;\n    var isImageBg = textBackgroundColor && textBackgroundColor.image;\n    var isPlainOrGradientBg = textBackgroundColor && !isImageBg;\n    var textBorderRadius = style.borderRadius;\n    var self = this;\n    var rectEl;\n    var imgEl;\n\n    if (isPlainOrGradientBg || style.lineHeight || textBorderWidth && textBorderColor) {\n      rectEl = this._getOrCreateChild(Rect);\n      rectEl.useStyle(rectEl.createStyle());\n      rectEl.style.fill = null;\n      var rectShape = rectEl.shape;\n      rectShape.x = x;\n      rectShape.y = y;\n      rectShape.width = width;\n      rectShape.height = height;\n      rectShape.r = textBorderRadius;\n      rectEl.dirtyShape();\n    }\n\n    if (isPlainOrGradientBg) {\n      var rectStyle = rectEl.style;\n      rectStyle.fill = textBackgroundColor || null;\n      rectStyle.fillOpacity = retrieve2(style.fillOpacity, 1);\n    } else if (isImageBg) {\n      imgEl = this._getOrCreateChild(ZRImage);\n\n      imgEl.onload = function () {\n        self.dirtyStyle();\n      };\n\n      var imgStyle = imgEl.style;\n      imgStyle.image = textBackgroundColor.image;\n      imgStyle.x = x;\n      imgStyle.y = y;\n      imgStyle.width = width;\n      imgStyle.height = height;\n    }\n\n    if (textBorderWidth && textBorderColor) {\n      var rectStyle = rectEl.style;\n      rectStyle.lineWidth = textBorderWidth;\n      rectStyle.stroke = textBorderColor;\n      rectStyle.strokeOpacity = retrieve2(style.strokeOpacity, 1);\n      rectStyle.lineDash = style.borderDash;\n      rectStyle.lineDashOffset = style.borderDashOffset || 0;\n      rectEl.strokeContainThreshold = 0;\n\n      if (rectEl.hasFill() && rectEl.hasStroke()) {\n        rectStyle.strokeFirst = true;\n        rectStyle.lineWidth *= 2;\n      }\n    }\n\n    var commonStyle = (rectEl || imgEl).style;\n    commonStyle.shadowBlur = style.shadowBlur || 0;\n    commonStyle.shadowColor = style.shadowColor || 'transparent';\n    commonStyle.shadowOffsetX = style.shadowOffsetX || 0;\n    commonStyle.shadowOffsetY = style.shadowOffsetY || 0;\n    commonStyle.opacity = retrieve3(style.opacity, topStyle.opacity, 1);\n  };\n\n  ZRText.makeFont = function (style) {\n    var font = '';\n\n    if (style.fontSize || style.fontFamily || style.fontWeight) {\n      var fontSize = '';\n\n      if (typeof style.fontSize === 'string' && (style.fontSize.indexOf('px') !== -1 || style.fontSize.indexOf('rem') !== -1 || style.fontSize.indexOf('em') !== -1)) {\n        fontSize = style.fontSize;\n      } else if (!isNaN(+style.fontSize)) {\n        fontSize = style.fontSize + 'px';\n      } else {\n        fontSize = '12px';\n      }\n\n      font = [style.fontStyle, style.fontWeight, fontSize, style.fontFamily || 'sans-serif'].join(' ');\n    }\n\n    return font && trim(font) || style.textFont || style.font;\n  };\n\n  return ZRText;\n}(Displayable);\n\nvar VALID_TEXT_ALIGN = {\n  left: true,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\nexport function normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = ZRText.makeFont(style);\n    var textAlign = style.align;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.align = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left';\n    var verticalAlign = style.verticalAlign;\n    verticalAlign === 'center' && (verticalAlign = 'middle');\n    style.verticalAlign = verticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[verticalAlign] ? verticalAlign : 'top';\n    var textPadding = style.padding;\n\n    if (textPadding) {\n      style.padding = normalizeCssArray(style.padding);\n    }\n  }\n}\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n\nfunction getStyleText(style) {\n  var text = style.text;\n  text != null && (text += '');\n  return text;\n}\n\nfunction needDrawBackground(style) {\n  return !!(style.backgroundColor || style.lineHeight || style.borderWidth && style.borderColor);\n}\n\nexport default ZRText;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/zrender/lib/graphic/Text.js"],"names":["__extends","parseRichText","parsePlainText","TSpan","retrieve2","each","normalizeCssArray","trim","retrieve3","extend","keys","defaults","DEFAULT_FONT","adjustTextX","adjustTextY","ZRImage","Rect","BoundingRect","Displayable","DEFAULT_COMMON_ANIMATION_PROPS","DEFAULT_RICH_TEXT_COLOR","fill","DEFAULT_STROKE_LINE_WIDTH","DEFAULT_TEXT_ANIMATION_PROPS","style","stroke","fillOpacity","strokeOpacity","lineWidth","fontSize","lineHeight","width","height","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","backgroundColor","padding","borderColor","borderWidth","borderRadius","ZRText","_super","opts","_this","call","type","_children","_defaultStyle","attr","prototype","childrenRef","update","styleChanged","_updateSubTexts","i","length","child","zlevel","z","z2","culling","cursor","invisible","updateTransform","innerTransformable","transform","getLocalTransform","m","getComputedTransform","__hostTarget","updateInnerText","_childCursor","normalizeTextStyle","rich","_updateRichTexts","_updatePlainTexts","styleUpdated","addSelfToZr","zr","__zr","removeSelfFromZr","getBoundingRect","_rect","tmpRect","children","tmpMat","rect","childRect","copy","applyTransform","clone","union","setDefaultTextStyle","defaultTextStyle","setTextContent","textContent","Error","_mergeStyle","targetStyle","sourceStyle","sourceRich","targetRich","_mergeRich","richNames","richName","getAnimationStyleProps","_getOrCreateChild","Ctor","parent","textFont","font","textPadding","text","getStyleText","contentBlock","needDrawBg","needDrawBackground","bgColorDrawn","outerHeight","textLines","lines","defaultStyle","baseX","x","baseY","y","textAlign","align","verticalAlign","textX","textY","contentHeight","outerWidth_1","boxX","boxY","_renderBackground","getTextXForPadding","defaultLineWidth","useDefaultFill","textFill","getFill","textStroke","getStroke","autoStroke","hasShadow","fixedBoundingRect","overflow","calculatedLineHeight","el","subElStyle","createStyle","useStyle","textBaseline","opacity","strokeFirst","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","lineDash","lineDashOffset","setBoundingRect","contentWidth","outerWidth","xLeft","lineTop","xRight","line","tokens","tokenCount","remainedWidth","leftIndex","lineXLeft","lineXRight","rightIndex","token","_placeToken","parentBgColorDrawn","tokenStyle","styleName","isLineHolder","innerHeight","textWidth","textHeight","topStyle","textBackgroundColor","textBorderWidth","textBorderColor","isImageBg","image","isPlainOrGradientBg","textBorderRadius","self","rectEl","imgEl","rectShape","shape","r","dirtyShape","rectStyle","onload","dirtyStyle","imgStyle","borderDash","borderDashOffset","strokeContainThreshold","hasFill","hasStroke","commonStyle","makeFont","fontFamily","fontWeight","indexOf","isNaN","fontStyle","join","VALID_TEXT_ALIGN","left","right","center","VALID_TEXT_VERTICAL_ALIGN","top","bottom","middle","normalizeStyle","colorStops"],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { parseRichText, parsePlainText } from './helper/parseText';\nimport TSpan from './TSpan';\nimport { retrieve2, each, normalizeCssArray, trim, retrieve3, extend, keys, defaults } from '../core/util';\nimport { DEFAULT_FONT, adjustTextX, adjustTextY } from '../contain/text';\nimport ZRImage from './Image';\nimport Rect from './shape/Rect';\nimport BoundingRect from '../core/BoundingRect';\nimport Displayable, { DEFAULT_COMMON_ANIMATION_PROPS } from './Displayable';\nvar DEFAULT_RICH_TEXT_COLOR = {\n    fill: '#000'\n};\nvar DEFAULT_STROKE_LINE_WIDTH = 2;\nexport var DEFAULT_TEXT_ANIMATION_PROPS = {\n    style: defaults({\n        fill: true,\n        stroke: true,\n        fillOpacity: true,\n        strokeOpacity: true,\n        lineWidth: true,\n        fontSize: true,\n        lineHeight: true,\n        width: true,\n        height: true,\n        textShadowColor: true,\n        textShadowBlur: true,\n        textShadowOffsetX: true,\n        textShadowOffsetY: true,\n        backgroundColor: true,\n        padding: true,\n        borderColor: true,\n        borderWidth: true,\n        borderRadius: true\n    }, DEFAULT_COMMON_ANIMATION_PROPS.style)\n};\nvar ZRText = (function (_super) {\n    __extends(ZRText, _super);\n    function ZRText(opts) {\n        var _this = _super.call(this) || this;\n        _this.type = 'text';\n        _this._children = [];\n        _this._defaultStyle = DEFAULT_RICH_TEXT_COLOR;\n        _this.attr(opts);\n        return _this;\n    }\n    ZRText.prototype.childrenRef = function () {\n        return this._children;\n    };\n    ZRText.prototype.update = function () {\n        _super.prototype.update.call(this);\n        if (this.styleChanged()) {\n            this._updateSubTexts();\n        }\n        for (var i = 0; i < this._children.length; i++) {\n            var child = this._children[i];\n            child.zlevel = this.zlevel;\n            child.z = this.z;\n            child.z2 = this.z2;\n            child.culling = this.culling;\n            child.cursor = this.cursor;\n            child.invisible = this.invisible;\n        }\n    };\n    ZRText.prototype.updateTransform = function () {\n        var innerTransformable = this.innerTransformable;\n        if (innerTransformable) {\n            innerTransformable.updateTransform();\n            if (innerTransformable.transform) {\n                this.transform = innerTransformable.transform;\n            }\n        }\n        else {\n            _super.prototype.updateTransform.call(this);\n        }\n    };\n    ZRText.prototype.getLocalTransform = function (m) {\n        var innerTransformable = this.innerTransformable;\n        return innerTransformable\n            ? innerTransformable.getLocalTransform(m)\n            : _super.prototype.getLocalTransform.call(this, m);\n    };\n    ZRText.prototype.getComputedTransform = function () {\n        if (this.__hostTarget) {\n            this.__hostTarget.getComputedTransform();\n            this.__hostTarget.updateInnerText(true);\n        }\n        return _super.prototype.getComputedTransform.call(this);\n    };\n    ZRText.prototype._updateSubTexts = function () {\n        this._childCursor = 0;\n        normalizeTextStyle(this.style);\n        this.style.rich\n            ? this._updateRichTexts()\n            : this._updatePlainTexts();\n        this._children.length = this._childCursor;\n        this.styleUpdated();\n    };\n    ZRText.prototype.addSelfToZr = function (zr) {\n        _super.prototype.addSelfToZr.call(this, zr);\n        for (var i = 0; i < this._children.length; i++) {\n            this._children[i].__zr = zr;\n        }\n    };\n    ZRText.prototype.removeSelfFromZr = function (zr) {\n        _super.prototype.removeSelfFromZr.call(this, zr);\n        for (var i = 0; i < this._children.length; i++) {\n            this._children[i].__zr = null;\n        }\n    };\n    ZRText.prototype.getBoundingRect = function () {\n        if (this.styleChanged()) {\n            this._updateSubTexts();\n        }\n        if (!this._rect) {\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = this._children;\n            var tmpMat = [];\n            var rect = null;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            this._rect = rect || tmpRect;\n        }\n        return this._rect;\n    };\n    ZRText.prototype.setDefaultTextStyle = function (defaultTextStyle) {\n        this._defaultStyle = defaultTextStyle || DEFAULT_RICH_TEXT_COLOR;\n    };\n    ZRText.prototype.setTextContent = function (textContent) {\n        throw new Error('Can\\'t attach text on another text');\n    };\n    ZRText.prototype._mergeStyle = function (targetStyle, sourceStyle) {\n        if (!sourceStyle) {\n            return targetStyle;\n        }\n        var sourceRich = sourceStyle.rich;\n        var targetRich = targetStyle.rich || (sourceRich && {});\n        extend(targetStyle, sourceStyle);\n        if (sourceRich && targetRich) {\n            this._mergeRich(targetRich, sourceRich);\n            targetStyle.rich = targetRich;\n        }\n        else if (targetRich) {\n            targetStyle.rich = targetRich;\n        }\n        return targetStyle;\n    };\n    ZRText.prototype._mergeRich = function (targetRich, sourceRich) {\n        var richNames = keys(sourceRich);\n        for (var i = 0; i < richNames.length; i++) {\n            var richName = richNames[i];\n            targetRich[richName] = targetRich[richName] || {};\n            extend(targetRich[richName], sourceRich[richName]);\n        }\n    };\n    ZRText.prototype.getAnimationStyleProps = function () {\n        return DEFAULT_TEXT_ANIMATION_PROPS;\n    };\n    ZRText.prototype._getOrCreateChild = function (Ctor) {\n        var child = this._children[this._childCursor];\n        if (!child || !(child instanceof Ctor)) {\n            child = new Ctor();\n        }\n        this._children[this._childCursor++] = child;\n        child.__zr = this.__zr;\n        child.parent = this;\n        return child;\n    };\n    ZRText.prototype._updatePlainTexts = function () {\n        var style = this.style;\n        var textFont = style.font || DEFAULT_FONT;\n        var textPadding = style.padding;\n        var text = getStyleText(style);\n        var contentBlock = parsePlainText(text, style);\n        var needDrawBg = needDrawBackground(style);\n        var bgColorDrawn = !!(style.backgroundColor);\n        var outerHeight = contentBlock.outerHeight;\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n        var defaultStyle = this._defaultStyle;\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.align || defaultStyle.align || 'left';\n        var verticalAlign = style.verticalAlign || defaultStyle.verticalAlign || 'top';\n        var textX = baseX;\n        var textY = adjustTextY(baseY, contentBlock.contentHeight, verticalAlign);\n        if (needDrawBg || textPadding) {\n            var outerWidth_1 = contentBlock.width;\n            textPadding && (outerWidth_1 += textPadding[1] + textPadding[3]);\n            var boxX = adjustTextX(baseX, outerWidth_1, textAlign);\n            var boxY = adjustTextY(baseY, outerHeight, verticalAlign);\n            needDrawBg && this._renderBackground(style, style, boxX, boxY, outerWidth_1, outerHeight);\n        }\n        textY += lineHeight / 2;\n        if (textPadding) {\n            textX = getTextXForPadding(baseX, textAlign, textPadding);\n            if (verticalAlign === 'top') {\n                textY += textPadding[0];\n            }\n            else if (verticalAlign === 'bottom') {\n                textY -= textPadding[2];\n            }\n        }\n        var defaultLineWidth = 0;\n        var useDefaultFill = false;\n        var textFill = getFill('fill' in style\n            ? style.fill\n            : (useDefaultFill = true, defaultStyle.fill));\n        var textStroke = getStroke('stroke' in style\n            ? style.stroke\n            : (!bgColorDrawn\n                && (!defaultStyle.autoStroke || useDefaultFill))\n                ? (defaultLineWidth = DEFAULT_STROKE_LINE_WIDTH, defaultStyle.stroke)\n                : null);\n        var hasShadow = style.textShadowBlur > 0;\n        var fixedBoundingRect = style.width != null\n            && (style.overflow === 'truncate' || style.overflow === 'break' || style.overflow === 'breakAll');\n        var calculatedLineHeight = contentBlock.calculatedLineHeight;\n        for (var i = 0; i < textLines.length; i++) {\n            var el = this._getOrCreateChild(TSpan);\n            var subElStyle = el.createStyle();\n            el.useStyle(subElStyle);\n            subElStyle.text = textLines[i];\n            subElStyle.x = textX;\n            subElStyle.y = textY;\n            if (textAlign) {\n                subElStyle.textAlign = textAlign;\n            }\n            subElStyle.textBaseline = 'middle';\n            subElStyle.opacity = style.opacity;\n            subElStyle.strokeFirst = true;\n            if (hasShadow) {\n                subElStyle.shadowBlur = style.textShadowBlur || 0;\n                subElStyle.shadowColor = style.textShadowColor || 'transparent';\n                subElStyle.shadowOffsetX = style.textShadowOffsetX || 0;\n                subElStyle.shadowOffsetY = style.textShadowOffsetY || 0;\n            }\n            if (textStroke) {\n                subElStyle.stroke = textStroke;\n                subElStyle.lineWidth = style.lineWidth || defaultLineWidth;\n                subElStyle.lineDash = style.lineDash;\n                subElStyle.lineDashOffset = style.lineDashOffset || 0;\n            }\n            if (textFill) {\n                subElStyle.fill = textFill;\n            }\n            subElStyle.font = textFont;\n            textY += lineHeight;\n            if (fixedBoundingRect) {\n                el.setBoundingRect(new BoundingRect(adjustTextX(subElStyle.x, style.width, subElStyle.textAlign), adjustTextY(subElStyle.y, calculatedLineHeight, subElStyle.textBaseline), style.width, calculatedLineHeight));\n            }\n        }\n    };\n    ZRText.prototype._updateRichTexts = function () {\n        var style = this.style;\n        var text = getStyleText(style);\n        var contentBlock = parseRichText(text, style);\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.padding;\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var defaultStyle = this._defaultStyle;\n        var textAlign = style.align || defaultStyle.align;\n        var verticalAlign = style.verticalAlign || defaultStyle.verticalAlign;\n        var boxX = adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = adjustTextY(baseY, outerHeight, verticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n        if (needDrawBackground(style)) {\n            this._renderBackground(style, style, boxX, boxY, outerWidth, outerHeight);\n        }\n        var bgColorDrawn = !!(style.backgroundColor);\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var remainedWidth = line.width;\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token = void 0;\n            while (leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.align || token.align === 'left')) {\n                this._placeToken(token, style, lineHeight, lineTop, lineXLeft, 'left', bgColorDrawn);\n                remainedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n            while (rightIndex >= 0\n                && (token = tokens[rightIndex], token.align === 'right')) {\n                this._placeToken(token, style, lineHeight, lineTop, lineXRight, 'right', bgColorDrawn);\n                remainedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - remainedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                this._placeToken(token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center', bgColorDrawn);\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n            lineTop += lineHeight;\n        }\n    };\n    ZRText.prototype._placeToken = function (token, style, lineHeight, lineTop, x, textAlign, parentBgColorDrawn) {\n        var tokenStyle = style.rich[token.styleName] || {};\n        tokenStyle.text = token.text;\n        var verticalAlign = token.verticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (verticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (verticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n        var needDrawBg = !token.isLineHolder && needDrawBackground(tokenStyle);\n        needDrawBg && this._renderBackground(tokenStyle, style, textAlign === 'right'\n            ? x - token.width\n            : textAlign === 'center'\n                ? x - token.width / 2\n                : x, y - token.height / 2, token.width, token.height);\n        var bgColorDrawn = !!tokenStyle.backgroundColor;\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[0] - token.innerHeight / 2;\n        }\n        var el = this._getOrCreateChild(TSpan);\n        var subElStyle = el.createStyle();\n        el.useStyle(subElStyle);\n        var defaultStyle = this._defaultStyle;\n        var useDefaultFill = false;\n        var defaultLineWidth = 0;\n        var textFill = getFill('fill' in tokenStyle ? tokenStyle.fill\n            : 'fill' in style ? style.fill\n                : (useDefaultFill = true, defaultStyle.fill));\n        var textStroke = getStroke('stroke' in tokenStyle ? tokenStyle.stroke\n            : 'stroke' in style ? style.stroke\n                : (!bgColorDrawn\n                    && !parentBgColorDrawn\n                    && (!defaultStyle.autoStroke || useDefaultFill)) ? (defaultLineWidth = DEFAULT_STROKE_LINE_WIDTH, defaultStyle.stroke)\n                    : null);\n        var hasShadow = tokenStyle.textShadowBlur > 0\n            || style.textShadowBlur > 0;\n        subElStyle.text = token.text;\n        subElStyle.x = x;\n        subElStyle.y = y;\n        if (hasShadow) {\n            subElStyle.shadowBlur = tokenStyle.textShadowBlur || style.textShadowBlur || 0;\n            subElStyle.shadowColor = tokenStyle.textShadowColor || style.textShadowColor || 'transparent';\n            subElStyle.shadowOffsetX = tokenStyle.textShadowOffsetX || style.textShadowOffsetX || 0;\n            subElStyle.shadowOffsetY = tokenStyle.textShadowOffsetY || style.textShadowOffsetY || 0;\n        }\n        subElStyle.textAlign = textAlign;\n        subElStyle.textBaseline = 'middle';\n        subElStyle.font = token.font || DEFAULT_FONT;\n        subElStyle.opacity = retrieve3(tokenStyle.opacity, style.opacity, 1);\n        if (textStroke) {\n            subElStyle.lineWidth = retrieve3(tokenStyle.lineWidth, style.lineWidth, defaultLineWidth);\n            subElStyle.lineDash = retrieve2(tokenStyle.lineDash, style.lineDash);\n            subElStyle.lineDashOffset = style.lineDashOffset || 0;\n            subElStyle.stroke = textStroke;\n        }\n        if (textFill) {\n            subElStyle.fill = textFill;\n        }\n        var textWidth = token.contentWidth;\n        var textHeight = token.contentHeight;\n        el.setBoundingRect(new BoundingRect(adjustTextX(subElStyle.x, textWidth, subElStyle.textAlign), adjustTextY(subElStyle.y, textHeight, subElStyle.textBaseline), textWidth, textHeight));\n    };\n    ZRText.prototype._renderBackground = function (style, topStyle, x, y, width, height) {\n        var textBackgroundColor = style.backgroundColor;\n        var textBorderWidth = style.borderWidth;\n        var textBorderColor = style.borderColor;\n        var isImageBg = textBackgroundColor && textBackgroundColor.image;\n        var isPlainOrGradientBg = textBackgroundColor && !isImageBg;\n        var textBorderRadius = style.borderRadius;\n        var self = this;\n        var rectEl;\n        var imgEl;\n        if (isPlainOrGradientBg || style.lineHeight || (textBorderWidth && textBorderColor)) {\n            rectEl = this._getOrCreateChild(Rect);\n            rectEl.useStyle(rectEl.createStyle());\n            rectEl.style.fill = null;\n            var rectShape = rectEl.shape;\n            rectShape.x = x;\n            rectShape.y = y;\n            rectShape.width = width;\n            rectShape.height = height;\n            rectShape.r = textBorderRadius;\n            rectEl.dirtyShape();\n        }\n        if (isPlainOrGradientBg) {\n            var rectStyle = rectEl.style;\n            rectStyle.fill = textBackgroundColor || null;\n            rectStyle.fillOpacity = retrieve2(style.fillOpacity, 1);\n        }\n        else if (isImageBg) {\n            imgEl = this._getOrCreateChild(ZRImage);\n            imgEl.onload = function () {\n                self.dirtyStyle();\n            };\n            var imgStyle = imgEl.style;\n            imgStyle.image = textBackgroundColor.image;\n            imgStyle.x = x;\n            imgStyle.y = y;\n            imgStyle.width = width;\n            imgStyle.height = height;\n        }\n        if (textBorderWidth && textBorderColor) {\n            var rectStyle = rectEl.style;\n            rectStyle.lineWidth = textBorderWidth;\n            rectStyle.stroke = textBorderColor;\n            rectStyle.strokeOpacity = retrieve2(style.strokeOpacity, 1);\n            rectStyle.lineDash = style.borderDash;\n            rectStyle.lineDashOffset = style.borderDashOffset || 0;\n            rectEl.strokeContainThreshold = 0;\n            if (rectEl.hasFill() && rectEl.hasStroke()) {\n                rectStyle.strokeFirst = true;\n                rectStyle.lineWidth *= 2;\n            }\n        }\n        var commonStyle = (rectEl || imgEl).style;\n        commonStyle.shadowBlur = style.shadowBlur || 0;\n        commonStyle.shadowColor = style.shadowColor || 'transparent';\n        commonStyle.shadowOffsetX = style.shadowOffsetX || 0;\n        commonStyle.shadowOffsetY = style.shadowOffsetY || 0;\n        commonStyle.opacity = retrieve3(style.opacity, topStyle.opacity, 1);\n    };\n    ZRText.makeFont = function (style) {\n        var font = '';\n        if (style.fontSize || style.fontFamily || style.fontWeight) {\n            var fontSize = '';\n            if (typeof style.fontSize === 'string'\n                && (style.fontSize.indexOf('px') !== -1\n                    || style.fontSize.indexOf('rem') !== -1\n                    || style.fontSize.indexOf('em') !== -1)) {\n                fontSize = style.fontSize;\n            }\n            else if (!isNaN(+style.fontSize)) {\n                fontSize = style.fontSize + 'px';\n            }\n            else {\n                fontSize = '12px';\n            }\n            font = [\n                style.fontStyle,\n                style.fontWeight,\n                fontSize,\n                style.fontFamily || 'sans-serif'\n            ].join(' ');\n        }\n        return font && trim(font) || style.textFont || style.font;\n    };\n    return ZRText;\n}(Displayable));\nvar VALID_TEXT_ALIGN = { left: true, right: 1, center: 1 };\nvar VALID_TEXT_VERTICAL_ALIGN = { top: 1, bottom: 1, middle: 1 };\nexport function normalizeTextStyle(style) {\n    normalizeStyle(style);\n    each(style.rich, normalizeStyle);\n    return style;\n}\nfunction normalizeStyle(style) {\n    if (style) {\n        style.font = ZRText.makeFont(style);\n        var textAlign = style.align;\n        textAlign === 'middle' && (textAlign = 'center');\n        style.align = (textAlign == null || VALID_TEXT_ALIGN[textAlign]) ? textAlign : 'left';\n        var verticalAlign = style.verticalAlign;\n        verticalAlign === 'center' && (verticalAlign = 'middle');\n        style.verticalAlign = (verticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[verticalAlign]) ? verticalAlign : 'top';\n        var textPadding = style.padding;\n        if (textPadding) {\n            style.padding = normalizeCssArray(style.padding);\n        }\n    }\n}\nfunction getStroke(stroke, lineWidth) {\n    return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n        ? null\n        : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n}\nfunction getFill(fill) {\n    return (fill == null || fill === 'none')\n        ? null\n        : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n}\nfunction getTextXForPadding(x, textAlign, textPadding) {\n    return textAlign === 'right'\n        ? (x - textPadding[1])\n        : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n}\nfunction getStyleText(style) {\n    var text = style.text;\n    text != null && (text += '');\n    return text;\n}\nfunction needDrawBackground(style) {\n    return !!(style.backgroundColor\n        || style.lineHeight\n        || (style.borderWidth && style.borderColor));\n}\nexport default ZRText;\n"]},"metadata":{},"sourceType":"module"}
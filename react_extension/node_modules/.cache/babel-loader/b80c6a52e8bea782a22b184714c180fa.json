{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrUtil from 'zrender/lib/core/util';\nimport env from 'zrender/lib/core/env';\nimport TooltipHTMLContent from './TooltipHTMLContent';\nimport TooltipRichContent from './TooltipRichContent';\nimport * as formatUtil from '../../util/format';\nimport * as numberUtil from '../../util/number';\nimport * as graphic from '../../util/graphic';\nimport findPointFromSeries from '../axisPointer/findPointFromSeries';\nimport * as layoutUtil from '../../util/layout';\nimport Model from '../../model/Model';\nimport * as globalListener from '../axisPointer/globalListener';\nimport * as axisHelper from '../../coord/axisHelper';\nimport * as axisPointerViewHelper from '../axisPointer/viewHelper';\nimport { getTooltipRenderMode, preParseFinder, queryReferringComponents } from '../../util/model';\nimport ComponentView from '../../view/Component';\nimport { format as timeFormat } from '../../util/time'; // import { isDimensionStacked } from '../../data/helper/dataStackHelper';\n\nimport { getECData } from '../../util/innerStore';\nimport { shouldTooltipConfine } from './helper';\nimport { normalizeTooltipFormatResult } from '../../model/mixin/dataFormat';\nimport { createTooltipMarkup, buildTooltipMarkup, TooltipMarkupStyleCreator } from './tooltipMarkup';\nimport { findEventDispatcher } from '../../util/event';\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar TooltipView =\n/** @class */\nfunction (_super) {\n  __extends(TooltipView, _super);\n\n  function TooltipView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TooltipView.type;\n    return _this;\n  }\n\n  TooltipView.prototype.init = function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = tooltipModel.get('renderMode');\n    this._renderMode = getTooltipRenderMode(renderMode);\n    this._tooltipContent = this._renderMode === 'richText' ? new TooltipRichContent(api) : new TooltipHTMLContent(api.getDom(), api, {\n      appendToBody: tooltipModel.get('appendToBody', true)\n    });\n  };\n\n  TooltipView.prototype.render = function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    this._tooltipModel = tooltipModel;\n    this._ecModel = ecModel;\n    this._api = api;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  };\n\n  TooltipView.prototype._initGlobalListener = function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  };\n\n  TooltipView.prototype._keepShow = function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self_1 = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self_1.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self_1._lastX,\n          y: self_1._lastY,\n          dataByCoordSys: self_1._lastDataByCoordSys\n        });\n      });\n    }\n  };\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n\n\n  TooltipView.prototype.manuallyShowTip = function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n    var cmptRef = findComponentReference(payload, ecModel, api);\n\n    if (cmptRef) {\n      var rect = cmptRef.el.getBoundingRect().clone();\n      rect.applyTransform(cmptRef.el.transform);\n\n      this._tryShow({\n        offsetX: rect.x + rect.width / 2,\n        offsetY: rect.y + rect.height / 2,\n        target: cmptRef.el,\n        position: payload.position,\n        // When manully trigger, the mouse is not on the el, so we'd better to\n        // position tooltip on the bottom of the el and display arrow is possible.\n        positionDefault: 'bottom'\n      }, dispatchAction);\n    } else if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.x = payload.x;\n      el.y = payload.y;\n      el.update();\n      getECData(el).tooltipConfig = {\n        name: null,\n        option: payload.tooltip\n      }; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          target: pointInfo.el,\n          position: payload.position,\n          // When manully trigger, the mouse is not on the el, so we'd better to\n          // position tooltip on the bottom of the el and display arrow is possible.\n          positionDefault: 'bottom'\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  };\n\n  TooltipView.prototype.manuallyHideTip = function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = this._lastDataByCoordSys = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  }; // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n\n\n  TooltipView.prototype._manuallyAxisShowTip = function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex; // @ts-ignore\n\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipCascadedModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model], this._tooltipModel);\n\n    if (tooltipCascadedModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  };\n\n  TooltipView.prototype._tryShow = function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } else if (el) {\n      this._lastDataByCoordSys = null;\n      var seriesDispatcher_1;\n      var cmptDispatcher_1;\n      findEventDispatcher(el, function (target) {\n        // Always show item tooltip if mouse is on the element with dataIndex\n        if (getECData(target).dataIndex != null) {\n          seriesDispatcher_1 = target;\n          return true;\n        } // Tooltip provided directly. Like legend.\n\n\n        if (getECData(target).tooltipConfig != null) {\n          cmptDispatcher_1 = target;\n          return true;\n        }\n      }, true);\n\n      if (seriesDispatcher_1) {\n        this._showSeriesItemTooltip(e, seriesDispatcher_1, dispatchAction);\n      } else if (cmptDispatcher_1) {\n        this._showComponentItemTooltip(e, cmptDispatcher_1, dispatchAction);\n      } else {\n        this._hide(dispatchAction);\n      }\n    } else {\n      this._lastDataByCoordSys = null;\n\n      this._hide(dispatchAction);\n    }\n  };\n\n  TooltipView.prototype._showOrMove = function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  };\n\n  TooltipView.prototype._showAxisTooltip = function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption], globalTooltipModel);\n    var renderMode = this._renderMode;\n    var cbParamsList = [];\n    var articleMarkup = createTooltipMarkup('section', {\n      blocks: [],\n      noHeader: true\n    }); // Only for legacy: `Serise['formatTooltip']` returns a string.\n\n    var markupTextArrLegacy = [];\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\n    each(dataByCoordSys, function (itemCoordSys) {\n      each(itemCoordSys.dataByAxis, function (axisItem) {\n        var axisModel = ecModel.getComponent(axisItem.axisDim + 'Axis', axisItem.axisIndex);\n        var axisValue = axisItem.value;\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var axisValueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, axisItem.seriesDataIndices, axisItem.valueLabelOpt);\n        var axisSectionMarkup = createTooltipMarkup('section', {\n          header: axisValueLabel,\n          noHeader: !zrUtil.trim(axisValueLabel),\n          sortBlocks: true,\n          blocks: []\n        });\n        articleMarkup.blocks.push(axisSectionMarkup);\n        zrUtil.each(axisItem.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var cbParams = series.getDataParams(dataIndex); // Can't find data.\n\n          if (cbParams.dataIndex < 0) {\n            return;\n          }\n\n          cbParams.axisDim = axisItem.axisDim;\n          cbParams.axisIndex = axisItem.axisIndex;\n          cbParams.axisType = axisItem.axisType;\n          cbParams.axisId = axisItem.axisId;\n          cbParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, {\n            value: axisValue\n          });\n          cbParams.axisValueLabel = axisValueLabel; // Pre-create marker style for makers. Users can assemble richText\n          // text in `formatter` callback and use those markers style.\n\n          cbParams.marker = markupStyleCreator.makeTooltipMarker('item', formatUtil.convertToColorString(cbParams.color), renderMode);\n          var seriesTooltipResult = normalizeTooltipFormatResult(series.formatTooltip(dataIndex, true, null));\n\n          if (seriesTooltipResult.markupFragment) {\n            axisSectionMarkup.blocks.push(seriesTooltipResult.markupFragment);\n          }\n\n          if (seriesTooltipResult.markupText) {\n            markupTextArrLegacy.push(seriesTooltipResult.markupText);\n          }\n\n          cbParamsList.push(cbParams);\n        });\n      });\n    }); // In most cases, the second axis is displays upper on the first one.\n    // So we reverse it to look better.\n\n    articleMarkup.blocks.reverse();\n    markupTextArrLegacy.reverse();\n    var positionExpr = e.position;\n    var orderMode = singleTooltipModel.get('order');\n    var builtMarkupText = buildTooltipMarkup(articleMarkup, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), singleTooltipModel.get('textStyle'));\n    builtMarkupText && markupTextArrLegacy.unshift(builtMarkupText);\n    var blockBreak = renderMode === 'richText' ? '\\n\\n' : '<br/>';\n    var allMarkupText = markupTextArrLegacy.join(blockBreak);\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys, cbParamsList)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, cbParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, allMarkupText, cbParamsList, Math.random() + '', point[0], point[1], positionExpr, null, markupStyleCreator);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  };\n\n  TooltipView.prototype._showSeriesItemTooltip = function (e, dispatcher, dispatchAction) {\n    var ecModel = this._ecModel;\n    var ecData = getECData(dispatcher); // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = ecData.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = ecData.dataModel || seriesModel;\n    var dataIndex = ecData.dataIndex;\n    var dataType = ecData.dataType;\n    var data = dataModel.getData(dataType);\n    var renderMode = this._renderMode;\n    var positionDefault = e.positionDefault;\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model], this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Pre-create marker style for makers. Users can assemble richText\n    // text in `formatter` callback and use those markers style.\n\n    params.marker = markupStyleCreator.makeTooltipMarker('item', formatUtil.convertToColorString(params.color), renderMode);\n    var seriesTooltipResult = normalizeTooltipFormatResult(dataModel.formatTooltip(dataIndex, false, dataType));\n    var orderMode = tooltipModel.get('order');\n    var markupText = seriesTooltipResult.markupFragment ? buildTooltipMarkup(seriesTooltipResult.markupFragment, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), tooltipModel.get('textStyle')) : seriesTooltipResult.markupText;\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, markupText, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markupStyleCreator);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showComponentItemTooltip = function (e, el, dispatchAction) {\n    var ecData = getECData(el);\n    var tooltipConfig = ecData.tooltipConfig;\n    var tooltipOpt = tooltipConfig.option || {};\n\n    if (zrUtil.isString(tooltipOpt)) {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var tooltipModelCascade = [tooltipOpt];\n\n    var cmpt = this._ecModel.getComponent(ecData.componentMainType, ecData.componentIndex);\n\n    if (cmpt) {\n      tooltipModelCascade.push(cmpt);\n    } // In most cases, component tooltip formatter has different params with series tooltip formatter,\n    // so that they can not share the same formatter. Since the global tooltip formatter is used for series\n    // by convension, we do not use it as the default formatter for component.\n\n\n    tooltipModelCascade.push({\n      formatter: tooltipOpt.content\n    });\n    var positionDefault = e.positionDefault;\n    var subTooltipModel = buildTooltipModel(tooltipModelCascade, this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random() + ''; // PENDING: this case do not support richText style yet.\n\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      // Use formatterParams from element defined in component\n      // Avoid users modify it.\n      var formatterParams = zrUtil.clone(subTooltipModel.get('formatterParams') || {});\n\n      this._showTooltipContent(subTooltipModel, defaultHtml, formatterParams, asyncTicket, e.offsetX, e.offsetY, e.position, el, markupStyleCreator);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showTooltipContent = function ( // Use Model<TooltipOption> insteadof TooltipModel because this model may be from series or other options.\n  // Instead of top level tooltip.\n  tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markupStyleCreator) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    var nearPoint = this._getNearestPoint([x, y], params, tooltipModel.get('trigger'), tooltipModel.get('borderColor'));\n\n    var nearPointColor = nearPoint.color;\n\n    if (formatter) {\n      if (zrUtil.isString(formatter)) {\n        var useUTC = tooltipModel.ecModel.get('useUTC');\n        var params0 = zrUtil.isArray(params) ? params[0] : params;\n        var isTimeAxis = params0 && params0.axisType && params0.axisType.indexOf('time') >= 0;\n        html = formatter;\n\n        if (isTimeAxis) {\n          html = timeFormat(params0.axisValue, html, useUTC);\n        }\n\n        html = formatUtil.formatTpl(html, params, true);\n      } else if (zrUtil.isFunction(formatter)) {\n        var callback = bind(function (cbTicket, html) {\n          if (cbTicket === this._ticket) {\n            tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n\n            this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n          }\n        }, this);\n        this._ticket = asyncTicket;\n        html = formatter(params, asyncTicket, callback);\n      } else {\n        html = formatter;\n      }\n    }\n\n    tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n    tooltipContent.show(tooltipModel, nearPointColor);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  };\n\n  TooltipView.prototype._getNearestPoint = function (point, tooltipDataParams, trigger, borderColor) {\n    if (trigger === 'axis' || zrUtil.isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || (this._renderMode === 'html' ? '#fff' : 'none')\n      };\n    }\n\n    if (!zrUtil.isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || tooltipDataParams.color || tooltipDataParams.borderColor\n      };\n    }\n  };\n\n  TooltipView.prototype._updatePosition = function (tooltipModel, positionExpr, x, // Mouse x\n  y, // Mouse y\n  content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (zrUtil.isFunction(positionExpr)) {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      var boxLayoutPosition = positionExpr;\n      boxLayoutPosition.width = contentSize[0];\n      boxLayoutPosition.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(boxLayoutPosition, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (zrUtil.isString(positionExpr) && el) {\n      var pos = calcTooltipPosition(positionExpr, rect, contentSize, tooltipModel.get('borderWidth'));\n      x = pos[0];\n      y = pos[1];\n    } else {\n      var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (shouldTooltipConfine(tooltipModel)) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  }; // FIXME\n  // Should we remove this but leave this to user?\n\n\n  TooltipView.prototype._updateContentNotChangedOnAxis = function (dataByCoordSys, cbParamsList) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var lastCbParamsList = this._cbParamsList;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || [];\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged = contentNotChanged && lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged = contentNotChanged && lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged = contentNotChanged && lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        }); // check is cbParams data value changed\n\n        lastCbParamsList && zrUtil.each(lastItem.seriesDataIndices, function (idxItem) {\n          var seriesIdx = idxItem.seriesIndex;\n          var cbParams = cbParamsList[seriesIdx];\n          var lastCbParams = lastCbParamsList[seriesIdx];\n\n          if (cbParams && lastCbParams && lastCbParams.data !== cbParams.data) {\n            contentNotChanged = false;\n          }\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    this._cbParamsList = cbParamsList;\n    return !!contentNotChanged;\n  };\n\n  TooltipView.prototype._hide = function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype.dispose = function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.dispose();\n\n    globalListener.unregister('itemTooltip', api);\n  };\n\n  TooltipView.type = 'tooltip';\n  return TooltipView;\n}(ComponentView);\n/**\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade, globalTooltipModel, defaultTooltipOption) {\n  // Last is always tooltip model.\n  var ecModel = globalTooltipModel.ecModel;\n  var resultModel;\n\n  if (defaultTooltipOption) {\n    resultModel = new Model(defaultTooltipOption, ecModel, ecModel);\n    resultModel = new Model(globalTooltipModel.option, resultModel, ecModel);\n  } else {\n    resultModel = globalTooltipModel;\n  }\n\n  for (var i = modelCascade.length - 1; i >= 0; i--) {\n    var tooltipOpt = modelCascade[i];\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (zrUtil.isString(tooltipOpt)) {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      if (tooltipOpt) {\n        resultModel = new Model(tooltipOpt, resultModel, ecModel);\n      }\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n\n  if (gapH != null) {\n    // Add extra 2 pixels for this case:\n    // At present the \"values\" in defaut tooltip are using CSS `float: right`.\n    // When the right edge of the tooltip box is on the right side of the\n    // viewport, the `float` layout might push the \"values\" to the second line.\n    if (x + width + gapH + 2 > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize, borderWidth) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var offset = Math.ceil(Math.SQRT2 * borderWidth) + 8;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - offset;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + offset;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n/**\n * Find target component by payload like:\n * ```js\n * { legendId: 'some_id', name: 'xxx' }\n * { toolboxIndex: 1, name: 'xxx' }\n * { geoName: 'some_name', name: 'xxx' }\n * ```\n * PENDING: at present only\n *\n * If not found, return null/undefined.\n */\n\n\nfunction findComponentReference(payload, ecModel, api) {\n  var queryOptionMap = preParseFinder(payload).queryOptionMap;\n  var componentMainType = queryOptionMap.keys()[0];\n\n  if (!componentMainType || componentMainType === 'series') {\n    return;\n  }\n\n  var queryResult = queryReferringComponents(ecModel, componentMainType, queryOptionMap.get(componentMainType), {\n    useDefault: false,\n    enableAll: false,\n    enableNone: false\n  });\n  var model = queryResult.models[0];\n\n  if (!model) {\n    return;\n  }\n\n  var view = api.getViewOfComponentModel(model);\n  var el;\n  view.group.traverse(function (subEl) {\n    var tooltipConfig = getECData(subEl).tooltipConfig;\n\n    if (tooltipConfig && tooltipConfig.name === payload.name) {\n      el = subEl;\n      return true; // stop\n    }\n  });\n\n  if (el) {\n    return {\n      componentMainType: componentMainType,\n      componentIndex: model.componentIndex,\n      el: el\n    };\n  }\n}\n\nexport default TooltipView;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/component/tooltip/TooltipView.js"],"names":["__extends","zrUtil","env","TooltipHTMLContent","TooltipRichContent","formatUtil","numberUtil","graphic","findPointFromSeries","layoutUtil","Model","globalListener","axisHelper","axisPointerViewHelper","getTooltipRenderMode","preParseFinder","queryReferringComponents","ComponentView","format","timeFormat","getECData","shouldTooltipConfine","normalizeTooltipFormatResult","createTooltipMarkup","buildTooltipMarkup","TooltipMarkupStyleCreator","findEventDispatcher","bind","each","parsePercent","proxyRect","Rect","shape","x","y","width","height","TooltipView","_super","_this","apply","arguments","type","prototype","init","ecModel","api","node","tooltipModel","getComponent","renderMode","get","_renderMode","_tooltipContent","getDom","appendToBody","render","group","removeAll","_tooltipModel","_ecModel","_api","_alwaysShowContent","tooltipContent","update","setEnterable","_initGlobalListener","_keepShow","triggerOn","register","currTrigger","e","dispatchAction","indexOf","_tryShow","_hide","_lastX","_lastY","self_1","clearTimeout","_refreshUpdateTimeout","setTimeout","isDisposed","manuallyShowTip","dataByCoordSys","_lastDataByCoordSys","payload","from","uid","makeDispatchAction","_ticket","cmptRef","findComponentReference","rect","el","getBoundingRect","clone","applyTransform","transform","offsetX","offsetY","target","position","positionDefault","tooltip","tooltipConfig","name","option","tooltipOption","seriesIndex","_manuallyAxisShowTip","pointInfo","cx","point","cy","getZr","findHover","manuallyHideTip","hideLater","dataIndex","coordSysAxesInfo","seriesModel","getSeriesByIndex","data","getData","tooltipCascadedModel","buildTooltipModel","getItemModel","coordinateSystem","model","length","_showAxisTooltip","seriesDispatcher_1","cmptDispatcher_1","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","cb","delay","_showTimout","globalTooltipModel","singleTooltipModel","cbParamsList","articleMarkup","blocks","noHeader","markupTextArrLegacy","markupStyleCreator","itemCoordSys","dataByAxis","axisItem","axisModel","axisDim","axisIndex","axisValue","value","axisValueLabel","getValueLabel","axis","seriesDataIndices","valueLabelOpt","axisSectionMarkup","header","trim","sortBlocks","push","idxItem","series","dataIndexInside","cbParams","getDataParams","axisType","axisId","getAxisRawValue","marker","makeTooltipMarker","convertToColorString","color","seriesTooltipResult","formatTooltip","markupFragment","markupText","reverse","positionExpr","orderMode","builtMarkupText","unshift","blockBreak","allMarkupText","join","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","Math","random","dispatcher","ecData","dataModel","dataType","tooltipTrigger","params","asyncTicket","getRawIndex","tooltipOpt","isString","content","formatter","tooltipModelCascade","cmpt","componentMainType","componentIndex","subTooltipModel","defaultHtml","formatterParams","html","nearPoint","_getNearestPoint","nearPointColor","useUTC","params0","isArray","isTimeAxis","formatTpl","isFunction","callback","cbTicket","setContent","show","tooltipDataParams","trigger","borderColor","viewWidth","getWidth","viewHeight","getHeight","contentSize","getSize","align","vAlign","viewSize","slice","isObject","boxLayoutPosition","layoutRect","getLayoutRect","pos","calcTooltipPosition","refixTooltipPosition","isCenterAlign","confineTooltipPosition","moveTo","lastCoordSys","lastCbParamsList","_cbParamsList","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","j","newIdxItem","seriesIdx","lastCbParams","dispose","unregister","modelCascade","defaultTooltipOption","resultModel","i","gapH","gapV","size","min","max","borderWidth","domWidth","domHeight","offset","ceil","SQRT2","rectWidth","rectHeight","queryOptionMap","keys","queryResult","useDefault","enableAll","enableNone","models","view","getViewOfComponentModel","traverse","subEl"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrUtil from 'zrender/lib/core/util';\nimport env from 'zrender/lib/core/env';\nimport TooltipHTMLContent from './TooltipHTMLContent';\nimport TooltipRichContent from './TooltipRichContent';\nimport * as formatUtil from '../../util/format';\nimport * as numberUtil from '../../util/number';\nimport * as graphic from '../../util/graphic';\nimport findPointFromSeries from '../axisPointer/findPointFromSeries';\nimport * as layoutUtil from '../../util/layout';\nimport Model from '../../model/Model';\nimport * as globalListener from '../axisPointer/globalListener';\nimport * as axisHelper from '../../coord/axisHelper';\nimport * as axisPointerViewHelper from '../axisPointer/viewHelper';\nimport { getTooltipRenderMode, preParseFinder, queryReferringComponents } from '../../util/model';\nimport ComponentView from '../../view/Component';\nimport { format as timeFormat } from '../../util/time'; // import { isDimensionStacked } from '../../data/helper/dataStackHelper';\n\nimport { getECData } from '../../util/innerStore';\nimport { shouldTooltipConfine } from './helper';\nimport { normalizeTooltipFormatResult } from '../../model/mixin/dataFormat';\nimport { createTooltipMarkup, buildTooltipMarkup, TooltipMarkupStyleCreator } from './tooltipMarkup';\nimport { findEventDispatcher } from '../../util/event';\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar TooltipView =\n/** @class */\nfunction (_super) {\n  __extends(TooltipView, _super);\n\n  function TooltipView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TooltipView.type;\n    return _this;\n  }\n\n  TooltipView.prototype.init = function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = tooltipModel.get('renderMode');\n    this._renderMode = getTooltipRenderMode(renderMode);\n    this._tooltipContent = this._renderMode === 'richText' ? new TooltipRichContent(api) : new TooltipHTMLContent(api.getDom(), api, {\n      appendToBody: tooltipModel.get('appendToBody', true)\n    });\n  };\n\n  TooltipView.prototype.render = function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    this._tooltipModel = tooltipModel;\n    this._ecModel = ecModel;\n    this._api = api;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  };\n\n  TooltipView.prototype._initGlobalListener = function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  };\n\n  TooltipView.prototype._keepShow = function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self_1 = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self_1.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self_1._lastX,\n          y: self_1._lastY,\n          dataByCoordSys: self_1._lastDataByCoordSys\n        });\n      });\n    }\n  };\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n\n\n  TooltipView.prototype.manuallyShowTip = function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n    var cmptRef = findComponentReference(payload, ecModel, api);\n\n    if (cmptRef) {\n      var rect = cmptRef.el.getBoundingRect().clone();\n      rect.applyTransform(cmptRef.el.transform);\n\n      this._tryShow({\n        offsetX: rect.x + rect.width / 2,\n        offsetY: rect.y + rect.height / 2,\n        target: cmptRef.el,\n        position: payload.position,\n        // When manully trigger, the mouse is not on the el, so we'd better to\n        // position tooltip on the bottom of the el and display arrow is possible.\n        positionDefault: 'bottom'\n      }, dispatchAction);\n    } else if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.x = payload.x;\n      el.y = payload.y;\n      el.update();\n      getECData(el).tooltipConfig = {\n        name: null,\n        option: payload.tooltip\n      }; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          target: pointInfo.el,\n          position: payload.position,\n          // When manully trigger, the mouse is not on the el, so we'd better to\n          // position tooltip on the bottom of the el and display arrow is possible.\n          positionDefault: 'bottom'\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  };\n\n  TooltipView.prototype.manuallyHideTip = function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = this._lastDataByCoordSys = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  }; // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n\n\n  TooltipView.prototype._manuallyAxisShowTip = function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex; // @ts-ignore\n\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipCascadedModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model], this._tooltipModel);\n\n    if (tooltipCascadedModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  };\n\n  TooltipView.prototype._tryShow = function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } else if (el) {\n      this._lastDataByCoordSys = null;\n      var seriesDispatcher_1;\n      var cmptDispatcher_1;\n      findEventDispatcher(el, function (target) {\n        // Always show item tooltip if mouse is on the element with dataIndex\n        if (getECData(target).dataIndex != null) {\n          seriesDispatcher_1 = target;\n          return true;\n        } // Tooltip provided directly. Like legend.\n\n\n        if (getECData(target).tooltipConfig != null) {\n          cmptDispatcher_1 = target;\n          return true;\n        }\n      }, true);\n\n      if (seriesDispatcher_1) {\n        this._showSeriesItemTooltip(e, seriesDispatcher_1, dispatchAction);\n      } else if (cmptDispatcher_1) {\n        this._showComponentItemTooltip(e, cmptDispatcher_1, dispatchAction);\n      } else {\n        this._hide(dispatchAction);\n      }\n    } else {\n      this._lastDataByCoordSys = null;\n\n      this._hide(dispatchAction);\n    }\n  };\n\n  TooltipView.prototype._showOrMove = function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  };\n\n  TooltipView.prototype._showAxisTooltip = function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption], globalTooltipModel);\n    var renderMode = this._renderMode;\n    var cbParamsList = [];\n    var articleMarkup = createTooltipMarkup('section', {\n      blocks: [],\n      noHeader: true\n    }); // Only for legacy: `Serise['formatTooltip']` returns a string.\n\n    var markupTextArrLegacy = [];\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\n    each(dataByCoordSys, function (itemCoordSys) {\n      each(itemCoordSys.dataByAxis, function (axisItem) {\n        var axisModel = ecModel.getComponent(axisItem.axisDim + 'Axis', axisItem.axisIndex);\n        var axisValue = axisItem.value;\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var axisValueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, axisItem.seriesDataIndices, axisItem.valueLabelOpt);\n        var axisSectionMarkup = createTooltipMarkup('section', {\n          header: axisValueLabel,\n          noHeader: !zrUtil.trim(axisValueLabel),\n          sortBlocks: true,\n          blocks: []\n        });\n        articleMarkup.blocks.push(axisSectionMarkup);\n        zrUtil.each(axisItem.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var cbParams = series.getDataParams(dataIndex); // Can't find data.\n\n          if (cbParams.dataIndex < 0) {\n            return;\n          }\n\n          cbParams.axisDim = axisItem.axisDim;\n          cbParams.axisIndex = axisItem.axisIndex;\n          cbParams.axisType = axisItem.axisType;\n          cbParams.axisId = axisItem.axisId;\n          cbParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, {\n            value: axisValue\n          });\n          cbParams.axisValueLabel = axisValueLabel; // Pre-create marker style for makers. Users can assemble richText\n          // text in `formatter` callback and use those markers style.\n\n          cbParams.marker = markupStyleCreator.makeTooltipMarker('item', formatUtil.convertToColorString(cbParams.color), renderMode);\n          var seriesTooltipResult = normalizeTooltipFormatResult(series.formatTooltip(dataIndex, true, null));\n\n          if (seriesTooltipResult.markupFragment) {\n            axisSectionMarkup.blocks.push(seriesTooltipResult.markupFragment);\n          }\n\n          if (seriesTooltipResult.markupText) {\n            markupTextArrLegacy.push(seriesTooltipResult.markupText);\n          }\n\n          cbParamsList.push(cbParams);\n        });\n      });\n    }); // In most cases, the second axis is displays upper on the first one.\n    // So we reverse it to look better.\n\n    articleMarkup.blocks.reverse();\n    markupTextArrLegacy.reverse();\n    var positionExpr = e.position;\n    var orderMode = singleTooltipModel.get('order');\n    var builtMarkupText = buildTooltipMarkup(articleMarkup, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), singleTooltipModel.get('textStyle'));\n    builtMarkupText && markupTextArrLegacy.unshift(builtMarkupText);\n    var blockBreak = renderMode === 'richText' ? '\\n\\n' : '<br/>';\n    var allMarkupText = markupTextArrLegacy.join(blockBreak);\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys, cbParamsList)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, cbParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, allMarkupText, cbParamsList, Math.random() + '', point[0], point[1], positionExpr, null, markupStyleCreator);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  };\n\n  TooltipView.prototype._showSeriesItemTooltip = function (e, dispatcher, dispatchAction) {\n    var ecModel = this._ecModel;\n    var ecData = getECData(dispatcher); // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = ecData.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = ecData.dataModel || seriesModel;\n    var dataIndex = ecData.dataIndex;\n    var dataType = ecData.dataType;\n    var data = dataModel.getData(dataType);\n    var renderMode = this._renderMode;\n    var positionDefault = e.positionDefault;\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model], this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Pre-create marker style for makers. Users can assemble richText\n    // text in `formatter` callback and use those markers style.\n\n    params.marker = markupStyleCreator.makeTooltipMarker('item', formatUtil.convertToColorString(params.color), renderMode);\n    var seriesTooltipResult = normalizeTooltipFormatResult(dataModel.formatTooltip(dataIndex, false, dataType));\n    var orderMode = tooltipModel.get('order');\n    var markupText = seriesTooltipResult.markupFragment ? buildTooltipMarkup(seriesTooltipResult.markupFragment, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), tooltipModel.get('textStyle')) : seriesTooltipResult.markupText;\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, markupText, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markupStyleCreator);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showComponentItemTooltip = function (e, el, dispatchAction) {\n    var ecData = getECData(el);\n    var tooltipConfig = ecData.tooltipConfig;\n    var tooltipOpt = tooltipConfig.option || {};\n\n    if (zrUtil.isString(tooltipOpt)) {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var tooltipModelCascade = [tooltipOpt];\n\n    var cmpt = this._ecModel.getComponent(ecData.componentMainType, ecData.componentIndex);\n\n    if (cmpt) {\n      tooltipModelCascade.push(cmpt);\n    } // In most cases, component tooltip formatter has different params with series tooltip formatter,\n    // so that they can not share the same formatter. Since the global tooltip formatter is used for series\n    // by convension, we do not use it as the default formatter for component.\n\n\n    tooltipModelCascade.push({\n      formatter: tooltipOpt.content\n    });\n    var positionDefault = e.positionDefault;\n    var subTooltipModel = buildTooltipModel(tooltipModelCascade, this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random() + ''; // PENDING: this case do not support richText style yet.\n\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      // Use formatterParams from element defined in component\n      // Avoid users modify it.\n      var formatterParams = zrUtil.clone(subTooltipModel.get('formatterParams') || {});\n\n      this._showTooltipContent(subTooltipModel, defaultHtml, formatterParams, asyncTicket, e.offsetX, e.offsetY, e.position, el, markupStyleCreator);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showTooltipContent = function ( // Use Model<TooltipOption> insteadof TooltipModel because this model may be from series or other options.\n  // Instead of top level tooltip.\n  tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markupStyleCreator) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    var nearPoint = this._getNearestPoint([x, y], params, tooltipModel.get('trigger'), tooltipModel.get('borderColor'));\n\n    var nearPointColor = nearPoint.color;\n\n    if (formatter) {\n      if (zrUtil.isString(formatter)) {\n        var useUTC = tooltipModel.ecModel.get('useUTC');\n        var params0 = zrUtil.isArray(params) ? params[0] : params;\n        var isTimeAxis = params0 && params0.axisType && params0.axisType.indexOf('time') >= 0;\n        html = formatter;\n\n        if (isTimeAxis) {\n          html = timeFormat(params0.axisValue, html, useUTC);\n        }\n\n        html = formatUtil.formatTpl(html, params, true);\n      } else if (zrUtil.isFunction(formatter)) {\n        var callback = bind(function (cbTicket, html) {\n          if (cbTicket === this._ticket) {\n            tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n\n            this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n          }\n        }, this);\n        this._ticket = asyncTicket;\n        html = formatter(params, asyncTicket, callback);\n      } else {\n        html = formatter;\n      }\n    }\n\n    tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n    tooltipContent.show(tooltipModel, nearPointColor);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  };\n\n  TooltipView.prototype._getNearestPoint = function (point, tooltipDataParams, trigger, borderColor) {\n    if (trigger === 'axis' || zrUtil.isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || (this._renderMode === 'html' ? '#fff' : 'none')\n      };\n    }\n\n    if (!zrUtil.isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || tooltipDataParams.color || tooltipDataParams.borderColor\n      };\n    }\n  };\n\n  TooltipView.prototype._updatePosition = function (tooltipModel, positionExpr, x, // Mouse x\n  y, // Mouse y\n  content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (zrUtil.isFunction(positionExpr)) {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      var boxLayoutPosition = positionExpr;\n      boxLayoutPosition.width = contentSize[0];\n      boxLayoutPosition.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(boxLayoutPosition, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (zrUtil.isString(positionExpr) && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize, tooltipModel.get('borderWidth'));\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (shouldTooltipConfine(tooltipModel)) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  }; // FIXME\n  // Should we remove this but leave this to user?\n\n\n  TooltipView.prototype._updateContentNotChangedOnAxis = function (dataByCoordSys, cbParamsList) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var lastCbParamsList = this._cbParamsList;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || [];\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged = contentNotChanged && lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged = contentNotChanged && lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged = contentNotChanged && lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        }); // check is cbParams data value changed\n\n        lastCbParamsList && zrUtil.each(lastItem.seriesDataIndices, function (idxItem) {\n          var seriesIdx = idxItem.seriesIndex;\n          var cbParams = cbParamsList[seriesIdx];\n          var lastCbParams = lastCbParamsList[seriesIdx];\n\n          if (cbParams && lastCbParams && lastCbParams.data !== cbParams.data) {\n            contentNotChanged = false;\n          }\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    this._cbParamsList = cbParamsList;\n    return !!contentNotChanged;\n  };\n\n  TooltipView.prototype._hide = function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype.dispose = function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.dispose();\n\n    globalListener.unregister('itemTooltip', api);\n  };\n\n  TooltipView.type = 'tooltip';\n  return TooltipView;\n}(ComponentView);\n/**\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade, globalTooltipModel, defaultTooltipOption) {\n  // Last is always tooltip model.\n  var ecModel = globalTooltipModel.ecModel;\n  var resultModel;\n\n  if (defaultTooltipOption) {\n    resultModel = new Model(defaultTooltipOption, ecModel, ecModel);\n    resultModel = new Model(globalTooltipModel.option, resultModel, ecModel);\n  } else {\n    resultModel = globalTooltipModel;\n  }\n\n  for (var i = modelCascade.length - 1; i >= 0; i--) {\n    var tooltipOpt = modelCascade[i];\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (zrUtil.isString(tooltipOpt)) {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      if (tooltipOpt) {\n        resultModel = new Model(tooltipOpt, resultModel, ecModel);\n      }\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n\n  if (gapH != null) {\n    // Add extra 2 pixels for this case:\n    // At present the \"values\" in defaut tooltip are using CSS `float: right`.\n    // When the right edge of the tooltip box is on the right side of the\n    // viewport, the `float` layout might push the \"values\" to the second line.\n    if (x + width + gapH + 2 > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize, borderWidth) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var offset = Math.ceil(Math.SQRT2 * borderWidth) + 8;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - offset;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + offset;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n/**\n * Find target component by payload like:\n * ```js\n * { legendId: 'some_id', name: 'xxx' }\n * { toolboxIndex: 1, name: 'xxx' }\n * { geoName: 'some_name', name: 'xxx' }\n * ```\n * PENDING: at present only\n *\n * If not found, return null/undefined.\n */\n\n\nfunction findComponentReference(payload, ecModel, api) {\n  var queryOptionMap = preParseFinder(payload).queryOptionMap;\n  var componentMainType = queryOptionMap.keys()[0];\n\n  if (!componentMainType || componentMainType === 'series') {\n    return;\n  }\n\n  var queryResult = queryReferringComponents(ecModel, componentMainType, queryOptionMap.get(componentMainType), {\n    useDefault: false,\n    enableAll: false,\n    enableNone: false\n  });\n  var model = queryResult.models[0];\n\n  if (!model) {\n    return;\n  }\n\n  var view = api.getViewOfComponentModel(model);\n  var el;\n  view.group.traverse(function (subEl) {\n    var tooltipConfig = getECData(subEl).tooltipConfig;\n\n    if (tooltipConfig && tooltipConfig.name === payload.name) {\n      el = subEl;\n      return true; // stop\n    }\n  });\n\n  if (el) {\n    return {\n      componentMainType: componentMainType,\n      componentIndex: model.componentIndex,\n      el: el\n    };\n  }\n}\n\nexport default TooltipView;"]},"metadata":{},"sourceType":"module"}
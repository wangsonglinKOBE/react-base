{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { customInnerStore, TRANSFORM_PROPS } from './CustomSeries';\nimport { normalizeToArray } from '../../util/model';\nimport { assert, hasOwn, indexOf, isArrayLike, keys } from 'zrender/lib/core/util';\nimport { cloneValue } from 'zrender/lib/animation/Animator';\nvar LEGACY_TRANSFORM_PROPS = {\n  position: ['x', 'y'],\n  scale: ['scaleX', 'scaleY'],\n  origin: ['originX', 'originY']\n};\n\nfunction setLegacyTransformProp(elOption, targetProps, legacyName) {\n  var legacyArr = elOption[legacyName];\n  var xyName = LEGACY_TRANSFORM_PROPS[legacyName];\n\n  if (legacyArr) {\n    targetProps[xyName[0]] = legacyArr[0];\n    targetProps[xyName[1]] = legacyArr[1];\n  }\n}\n\nfunction setTransformProp(elOption, allProps, name) {\n  if (elOption[name] != null) {\n    allProps[name] = elOption[name];\n  }\n}\n\nfunction setTransformPropToTransitionFrom(transitionFrom, name, fromTransformable // If provided, retrieve from the element.\n) {\n  if (fromTransformable) {\n    transitionFrom[name] = fromTransformable[name];\n  }\n} // See [STRATEGY_TRANSITION]\n\n\nexport function prepareShapeOrExtraTransitionFrom(mainAttr, fromEl, elOption, transFromProps, isInit) {\n  var attrOpt = elOption[mainAttr];\n\n  if (!attrOpt) {\n    return;\n  }\n\n  var elPropsInAttr = fromEl[mainAttr];\n  var transFromPropsInAttr;\n  var enterFrom = attrOpt.enterFrom;\n\n  if (isInit && enterFrom) {\n    !transFromPropsInAttr && (transFromPropsInAttr = transFromProps[mainAttr] = {});\n    var enterFromKeys = keys(enterFrom);\n\n    for (var i = 0; i < enterFromKeys.length; i++) {\n      // `enterFrom` props are not necessarily also declared in `shape`/`style`/...,\n      // for example, `opacity` can only declared in `enterFrom` but not in `style`.\n      var key = enterFromKeys[i]; // Do not clone, animator will perform that clone.\n\n      transFromPropsInAttr[key] = enterFrom[key];\n    }\n  }\n\n  if (!isInit && elPropsInAttr) {\n    if (attrOpt.transition) {\n      !transFromPropsInAttr && (transFromPropsInAttr = transFromProps[mainAttr] = {});\n      var transitionKeys = normalizeToArray(attrOpt.transition);\n\n      for (var i = 0; i < transitionKeys.length; i++) {\n        var key = transitionKeys[i];\n        var elVal = elPropsInAttr[key];\n\n        if (process.env.NODE_ENV !== 'production') {\n          checkNonStyleTansitionRefer(key, attrOpt[key], elVal);\n        } // Do not clone, see `checkNonStyleTansitionRefer`.\n\n\n        transFromPropsInAttr[key] = elVal;\n      }\n    } else if (indexOf(elOption.transition, mainAttr) >= 0) {\n      !transFromPropsInAttr && (transFromPropsInAttr = transFromProps[mainAttr] = {});\n      var elPropsInAttrKeys = keys(elPropsInAttr);\n\n      for (var i = 0; i < elPropsInAttrKeys.length; i++) {\n        var key = elPropsInAttrKeys[i];\n        var elVal = elPropsInAttr[key];\n\n        if (isNonStyleTransitionEnabled(attrOpt[key], elVal)) {\n          transFromPropsInAttr[key] = elVal;\n        }\n      }\n    }\n  }\n\n  var leaveTo = attrOpt.leaveTo;\n\n  if (leaveTo) {\n    var leaveToProps = getOrCreateLeaveToPropsFromEl(fromEl);\n    var leaveToPropsInAttr = leaveToProps[mainAttr] || (leaveToProps[mainAttr] = {});\n    var leaveToKeys = keys(leaveTo);\n\n    for (var i = 0; i < leaveToKeys.length; i++) {\n      var key = leaveToKeys[i];\n      leaveToPropsInAttr[key] = leaveTo[key];\n    }\n  }\n}\nexport function prepareShapeOrExtraAllPropsFinal(mainAttr, elOption, allProps) {\n  var attrOpt = elOption[mainAttr];\n\n  if (!attrOpt) {\n    return;\n  }\n\n  var allPropsInAttr = allProps[mainAttr] = {};\n  var keysInAttr = keys(attrOpt);\n\n  for (var i = 0; i < keysInAttr.length; i++) {\n    var key = keysInAttr[i]; // To avoid share one object with different element, and\n    // to avoid user modify the object inexpectedly, have to clone.\n\n    allPropsInAttr[key] = cloneValue(attrOpt[key]);\n  }\n} // See [STRATEGY_TRANSITION].\n\nexport function prepareTransformTransitionFrom(el, elOption, transFromProps, isInit) {\n  var enterFrom = elOption.enterFrom;\n\n  if (isInit && enterFrom) {\n    var enterFromKeys = keys(enterFrom);\n\n    for (var i = 0; i < enterFromKeys.length; i++) {\n      var key = enterFromKeys[i];\n\n      if (process.env.NODE_ENV !== 'production') {\n        checkTransformPropRefer(key, 'el.enterFrom');\n      } // Do not clone, animator will perform that clone.\n\n\n      transFromProps[key] = enterFrom[key];\n    }\n  }\n\n  if (!isInit) {\n    if (elOption.transition) {\n      var transitionKeys = normalizeToArray(elOption.transition);\n\n      for (var i = 0; i < transitionKeys.length; i++) {\n        var key = transitionKeys[i];\n\n        if (key === 'style' || key === 'shape' || key === 'extra') {\n          continue;\n        }\n\n        var elVal = el[key];\n\n        if (process.env.NODE_ENV !== 'production') {\n          checkTransformPropRefer(key, 'el.transition');\n          checkNonStyleTansitionRefer(key, elOption[key], elVal);\n        } // Do not clone, see `checkNonStyleTansitionRefer`.\n\n\n        transFromProps[key] = elVal;\n      }\n    } // This default transition see [STRATEGY_TRANSITION]\n    else {\n      setTransformPropToTransitionFrom(transFromProps, 'x', el);\n      setTransformPropToTransitionFrom(transFromProps, 'y', el);\n    }\n  }\n\n  var leaveTo = elOption.leaveTo;\n\n  if (leaveTo) {\n    var leaveToProps = getOrCreateLeaveToPropsFromEl(el);\n    var leaveToKeys = keys(leaveTo);\n\n    for (var i = 0; i < leaveToKeys.length; i++) {\n      var key = leaveToKeys[i];\n\n      if (process.env.NODE_ENV !== 'production') {\n        checkTransformPropRefer(key, 'el.leaveTo');\n      }\n\n      leaveToProps[key] = leaveTo[key];\n    }\n  }\n}\nexport function prepareTransformAllPropsFinal(el, elOption, allProps) {\n  setLegacyTransformProp(elOption, allProps, 'position');\n  setLegacyTransformProp(elOption, allProps, 'scale');\n  setLegacyTransformProp(elOption, allProps, 'origin');\n  setTransformProp(elOption, allProps, 'x');\n  setTransformProp(elOption, allProps, 'y');\n  setTransformProp(elOption, allProps, 'scaleX');\n  setTransformProp(elOption, allProps, 'scaleY');\n  setTransformProp(elOption, allProps, 'originX');\n  setTransformProp(elOption, allProps, 'originY');\n  setTransformProp(elOption, allProps, 'rotation');\n} // See [STRATEGY_TRANSITION].\n\nexport function prepareStyleTransitionFrom(fromEl, elOption, styleOpt, transFromProps, isInit) {\n  if (!styleOpt) {\n    return;\n  }\n\n  var fromElStyle = fromEl.style;\n  var transFromStyleProps;\n  var enterFrom = styleOpt.enterFrom;\n\n  if (isInit && enterFrom) {\n    var enterFromKeys = keys(enterFrom);\n    !transFromStyleProps && (transFromStyleProps = transFromProps.style = {});\n\n    for (var i = 0; i < enterFromKeys.length; i++) {\n      var key = enterFromKeys[i]; // Do not clone, animator will perform that clone.\n\n      transFromStyleProps[key] = enterFrom[key];\n    }\n  }\n\n  if (!isInit && fromElStyle) {\n    if (styleOpt.transition) {\n      var transitionKeys = normalizeToArray(styleOpt.transition);\n      !transFromStyleProps && (transFromStyleProps = transFromProps.style = {});\n\n      for (var i = 0; i < transitionKeys.length; i++) {\n        var key = transitionKeys[i];\n        var elVal = fromElStyle[key]; // Do not clone, see `checkNonStyleTansitionRefer`.\n\n        transFromStyleProps[key] = elVal;\n      }\n    } else if (fromEl.getAnimationStyleProps && indexOf(elOption.transition, 'style') >= 0) {\n      var animationProps = fromEl.getAnimationStyleProps();\n      var animationStyleProps = animationProps ? animationProps.style : null;\n\n      if (animationStyleProps) {\n        !transFromStyleProps && (transFromStyleProps = transFromProps.style = {});\n        var styleKeys = keys(styleOpt);\n\n        for (var i = 0; i < styleKeys.length; i++) {\n          var key = styleKeys[i];\n\n          if (animationStyleProps[key]) {\n            var elVal = fromElStyle[key];\n            transFromStyleProps[key] = elVal;\n          }\n        }\n      }\n    }\n  }\n\n  var leaveTo = styleOpt.leaveTo;\n\n  if (leaveTo) {\n    var leaveToKeys = keys(leaveTo);\n    var leaveToProps = getOrCreateLeaveToPropsFromEl(fromEl);\n    var leaveToStyleProps = leaveToProps.style || (leaveToProps.style = {});\n\n    for (var i = 0; i < leaveToKeys.length; i++) {\n      var key = leaveToKeys[i];\n      leaveToStyleProps[key] = leaveTo[key];\n    }\n  }\n}\nvar checkNonStyleTansitionRefer;\n\nif (process.env.NODE_ENV !== 'production') {\n  checkNonStyleTansitionRefer = function (propName, optVal, elVal) {\n    if (!isArrayLike(optVal)) {\n      assert(optVal != null && isFinite(optVal), 'Prop `' + propName + '` must refer to a finite number or ArrayLike for transition.');\n    } else {\n      // Try not to copy array for performance, but if user use the same object in different\n      // call of `renderItem`, it will casue animation transition fail.\n      assert(optVal !== elVal, 'Prop `' + propName + '` must use different Array object each time for transition.');\n    }\n  };\n}\n\nfunction isNonStyleTransitionEnabled(optVal, elVal) {\n  // The same as `checkNonStyleTansitionRefer`.\n  return !isArrayLike(optVal) ? optVal != null && isFinite(optVal) : optVal !== elVal;\n}\n\nvar checkTransformPropRefer;\n\nif (process.env.NODE_ENV !== 'production') {\n  checkTransformPropRefer = function (key, usedIn) {\n    assert(hasOwn(TRANSFORM_PROPS, key), 'Prop `' + key + '` is not a permitted in `' + usedIn + '`. ' + 'Only `' + keys(TRANSFORM_PROPS).join('`, `') + '` are permitted.');\n  };\n}\n\nfunction getOrCreateLeaveToPropsFromEl(el) {\n  var innerEl = customInnerStore(el);\n  return innerEl.leaveToProps || (innerEl.leaveToProps = {});\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/chart/custom/prepare.js"],"names":["customInnerStore","TRANSFORM_PROPS","normalizeToArray","assert","hasOwn","indexOf","isArrayLike","keys","cloneValue","LEGACY_TRANSFORM_PROPS","position","scale","origin","setLegacyTransformProp","elOption","targetProps","legacyName","legacyArr","xyName","setTransformProp","allProps","name","setTransformPropToTransitionFrom","transitionFrom","fromTransformable","prepareShapeOrExtraTransitionFrom","mainAttr","fromEl","transFromProps","isInit","attrOpt","elPropsInAttr","transFromPropsInAttr","enterFrom","enterFromKeys","i","length","key","transition","transitionKeys","elVal","process","env","NODE_ENV","checkNonStyleTansitionRefer","elPropsInAttrKeys","isNonStyleTransitionEnabled","leaveTo","leaveToProps","getOrCreateLeaveToPropsFromEl","leaveToPropsInAttr","leaveToKeys","prepareShapeOrExtraAllPropsFinal","allPropsInAttr","keysInAttr","prepareTransformTransitionFrom","el","checkTransformPropRefer","prepareTransformAllPropsFinal","prepareStyleTransitionFrom","styleOpt","fromElStyle","style","transFromStyleProps","getAnimationStyleProps","animationProps","animationStyleProps","styleKeys","leaveToStyleProps","propName","optVal","isFinite","usedIn","join","innerEl"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,gBAAT,EAA2BC,eAA3B,QAAkD,gBAAlD;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAkCC,WAAlC,EAA+CC,IAA/C,QAA2D,uBAA3D;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,IAAIC,sBAAsB,GAAG;AAC3BC,EAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN,CADiB;AAE3BC,EAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,QAAX,CAFoB;AAG3BC,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ;AAHmB,CAA7B;;AAMA,SAASC,sBAAT,CAAgCC,QAAhC,EAA0CC,WAA1C,EAAuDC,UAAvD,EAAmE;AACjE,MAAIC,SAAS,GAAGH,QAAQ,CAACE,UAAD,CAAxB;AACA,MAAIE,MAAM,GAAGT,sBAAsB,CAACO,UAAD,CAAnC;;AAEA,MAAIC,SAAJ,EAAe;AACbF,IAAAA,WAAW,CAACG,MAAM,CAAC,CAAD,CAAP,CAAX,GAAyBD,SAAS,CAAC,CAAD,CAAlC;AACAF,IAAAA,WAAW,CAACG,MAAM,CAAC,CAAD,CAAP,CAAX,GAAyBD,SAAS,CAAC,CAAD,CAAlC;AACD;AACF;;AAED,SAASE,gBAAT,CAA0BL,QAA1B,EAAoCM,QAApC,EAA8CC,IAA9C,EAAoD;AAClD,MAAIP,QAAQ,CAACO,IAAD,CAAR,IAAkB,IAAtB,EAA4B;AAC1BD,IAAAA,QAAQ,CAACC,IAAD,CAAR,GAAiBP,QAAQ,CAACO,IAAD,CAAzB;AACD;AACF;;AAED,SAASC,gCAAT,CAA0CC,cAA1C,EAA0DF,IAA1D,EAAgEG,iBAAhE,CAAkF;AAAlF,EACE;AACA,MAAIA,iBAAJ,EAAuB;AACrBD,IAAAA,cAAc,CAACF,IAAD,CAAd,GAAuBG,iBAAiB,CAACH,IAAD,CAAxC;AACD;AACF,C,CAAC;;;AAGF,OAAO,SAASI,iCAAT,CAA2CC,QAA3C,EAAqDC,MAArD,EAA6Db,QAA7D,EAAuEc,cAAvE,EAAuFC,MAAvF,EAA+F;AACpG,MAAIC,OAAO,GAAGhB,QAAQ,CAACY,QAAD,CAAtB;;AAEA,MAAI,CAACI,OAAL,EAAc;AACZ;AACD;;AAED,MAAIC,aAAa,GAAGJ,MAAM,CAACD,QAAD,CAA1B;AACA,MAAIM,oBAAJ;AACA,MAAIC,SAAS,GAAGH,OAAO,CAACG,SAAxB;;AAEA,MAAIJ,MAAM,IAAII,SAAd,EAAyB;AACvB,KAACD,oBAAD,KAA0BA,oBAAoB,GAAGJ,cAAc,CAACF,QAAD,CAAd,GAA2B,EAA5E;AACA,QAAIQ,aAAa,GAAG3B,IAAI,CAAC0B,SAAD,CAAxB;;AAEA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,aAAa,CAACE,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C;AACA;AACA,UAAIE,GAAG,GAAGH,aAAa,CAACC,CAAD,CAAvB,CAH6C,CAGjB;;AAE5BH,MAAAA,oBAAoB,CAACK,GAAD,CAApB,GAA4BJ,SAAS,CAACI,GAAD,CAArC;AACD;AACF;;AAED,MAAI,CAACR,MAAD,IAAWE,aAAf,EAA8B;AAC5B,QAAID,OAAO,CAACQ,UAAZ,EAAwB;AACtB,OAACN,oBAAD,KAA0BA,oBAAoB,GAAGJ,cAAc,CAACF,QAAD,CAAd,GAA2B,EAA5E;AACA,UAAIa,cAAc,GAAGrC,gBAAgB,CAAC4B,OAAO,CAACQ,UAAT,CAArC;;AAEA,WAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGI,cAAc,CAACH,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,YAAIE,GAAG,GAAGE,cAAc,CAACJ,CAAD,CAAxB;AACA,YAAIK,KAAK,GAAGT,aAAa,CAACM,GAAD,CAAzB;;AAEA,YAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,UAAAA,2BAA2B,CAACP,GAAD,EAAMP,OAAO,CAACO,GAAD,CAAb,EAAoBG,KAApB,CAA3B;AACD,SAN6C,CAM5C;;;AAGFR,QAAAA,oBAAoB,CAACK,GAAD,CAApB,GAA4BG,KAA5B;AACD;AACF,KAfD,MAeO,IAAInC,OAAO,CAACS,QAAQ,CAACwB,UAAV,EAAsBZ,QAAtB,CAAP,IAA0C,CAA9C,EAAiD;AACtD,OAACM,oBAAD,KAA0BA,oBAAoB,GAAGJ,cAAc,CAACF,QAAD,CAAd,GAA2B,EAA5E;AACA,UAAImB,iBAAiB,GAAGtC,IAAI,CAACwB,aAAD,CAA5B;;AAEA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,iBAAiB,CAACT,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AACjD,YAAIE,GAAG,GAAGQ,iBAAiB,CAACV,CAAD,CAA3B;AACA,YAAIK,KAAK,GAAGT,aAAa,CAACM,GAAD,CAAzB;;AAEA,YAAIS,2BAA2B,CAAChB,OAAO,CAACO,GAAD,CAAR,EAAeG,KAAf,CAA/B,EAAsD;AACpDR,UAAAA,oBAAoB,CAACK,GAAD,CAApB,GAA4BG,KAA5B;AACD;AACF;AACF;AACF;;AAED,MAAIO,OAAO,GAAGjB,OAAO,CAACiB,OAAtB;;AAEA,MAAIA,OAAJ,EAAa;AACX,QAAIC,YAAY,GAAGC,6BAA6B,CAACtB,MAAD,CAAhD;AACA,QAAIuB,kBAAkB,GAAGF,YAAY,CAACtB,QAAD,CAAZ,KAA2BsB,YAAY,CAACtB,QAAD,CAAZ,GAAyB,EAApD,CAAzB;AACA,QAAIyB,WAAW,GAAG5C,IAAI,CAACwC,OAAD,CAAtB;;AAEA,SAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgB,WAAW,CAACf,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,UAAIE,GAAG,GAAGc,WAAW,CAAChB,CAAD,CAArB;AACAe,MAAAA,kBAAkB,CAACb,GAAD,CAAlB,GAA0BU,OAAO,CAACV,GAAD,CAAjC;AACD;AACF;AACF;AACD,OAAO,SAASe,gCAAT,CAA0C1B,QAA1C,EAAoDZ,QAApD,EAA8DM,QAA9D,EAAwE;AAC7E,MAAIU,OAAO,GAAGhB,QAAQ,CAACY,QAAD,CAAtB;;AAEA,MAAI,CAACI,OAAL,EAAc;AACZ;AACD;;AAED,MAAIuB,cAAc,GAAGjC,QAAQ,CAACM,QAAD,CAAR,GAAqB,EAA1C;AACA,MAAI4B,UAAU,GAAG/C,IAAI,CAACuB,OAAD,CAArB;;AAEA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,UAAU,CAAClB,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,QAAIE,GAAG,GAAGiB,UAAU,CAACnB,CAAD,CAApB,CAD0C,CACjB;AACzB;;AAEAkB,IAAAA,cAAc,CAAChB,GAAD,CAAd,GAAsB7B,UAAU,CAACsB,OAAO,CAACO,GAAD,CAAR,CAAhC;AACD;AACF,C,CAAC;;AAEF,OAAO,SAASkB,8BAAT,CAAwCC,EAAxC,EAA4C1C,QAA5C,EAAsDc,cAAtD,EAAsEC,MAAtE,EAA8E;AACnF,MAAII,SAAS,GAAGnB,QAAQ,CAACmB,SAAzB;;AAEA,MAAIJ,MAAM,IAAII,SAAd,EAAyB;AACvB,QAAIC,aAAa,GAAG3B,IAAI,CAAC0B,SAAD,CAAxB;;AAEA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,aAAa,CAACE,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAIE,GAAG,GAAGH,aAAa,CAACC,CAAD,CAAvB;;AAEA,UAAIM,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCc,QAAAA,uBAAuB,CAACpB,GAAD,EAAM,cAAN,CAAvB;AACD,OAL4C,CAK3C;;;AAGFT,MAAAA,cAAc,CAACS,GAAD,CAAd,GAAsBJ,SAAS,CAACI,GAAD,CAA/B;AACD;AACF;;AAED,MAAI,CAACR,MAAL,EAAa;AACX,QAAIf,QAAQ,CAACwB,UAAb,EAAyB;AACvB,UAAIC,cAAc,GAAGrC,gBAAgB,CAACY,QAAQ,CAACwB,UAAV,CAArC;;AAEA,WAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGI,cAAc,CAACH,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,YAAIE,GAAG,GAAGE,cAAc,CAACJ,CAAD,CAAxB;;AAEA,YAAIE,GAAG,KAAK,OAAR,IAAmBA,GAAG,KAAK,OAA3B,IAAsCA,GAAG,KAAK,OAAlD,EAA2D;AACzD;AACD;;AAED,YAAIG,KAAK,GAAGgB,EAAE,CAACnB,GAAD,CAAd;;AAEA,YAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCc,UAAAA,uBAAuB,CAACpB,GAAD,EAAM,eAAN,CAAvB;AACAO,UAAAA,2BAA2B,CAACP,GAAD,EAAMvB,QAAQ,CAACuB,GAAD,CAAd,EAAqBG,KAArB,CAA3B;AACD,SAZ6C,CAY5C;;;AAGFZ,QAAAA,cAAc,CAACS,GAAD,CAAd,GAAsBG,KAAtB;AACD;AACF,KApBD,CAoBE;AApBF,SAqBK;AACDlB,MAAAA,gCAAgC,CAACM,cAAD,EAAiB,GAAjB,EAAsB4B,EAAtB,CAAhC;AACAlC,MAAAA,gCAAgC,CAACM,cAAD,EAAiB,GAAjB,EAAsB4B,EAAtB,CAAhC;AACD;AACJ;;AAED,MAAIT,OAAO,GAAGjC,QAAQ,CAACiC,OAAvB;;AAEA,MAAIA,OAAJ,EAAa;AACX,QAAIC,YAAY,GAAGC,6BAA6B,CAACO,EAAD,CAAhD;AACA,QAAIL,WAAW,GAAG5C,IAAI,CAACwC,OAAD,CAAtB;;AAEA,SAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgB,WAAW,CAACf,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,UAAIE,GAAG,GAAGc,WAAW,CAAChB,CAAD,CAArB;;AAEA,UAAIM,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCc,QAAAA,uBAAuB,CAACpB,GAAD,EAAM,YAAN,CAAvB;AACD;;AAEDW,MAAAA,YAAY,CAACX,GAAD,CAAZ,GAAoBU,OAAO,CAACV,GAAD,CAA3B;AACD;AACF;AACF;AACD,OAAO,SAASqB,6BAAT,CAAuCF,EAAvC,EAA2C1C,QAA3C,EAAqDM,QAArD,EAA+D;AACpEP,EAAAA,sBAAsB,CAACC,QAAD,EAAWM,QAAX,EAAqB,UAArB,CAAtB;AACAP,EAAAA,sBAAsB,CAACC,QAAD,EAAWM,QAAX,EAAqB,OAArB,CAAtB;AACAP,EAAAA,sBAAsB,CAACC,QAAD,EAAWM,QAAX,EAAqB,QAArB,CAAtB;AACAD,EAAAA,gBAAgB,CAACL,QAAD,EAAWM,QAAX,EAAqB,GAArB,CAAhB;AACAD,EAAAA,gBAAgB,CAACL,QAAD,EAAWM,QAAX,EAAqB,GAArB,CAAhB;AACAD,EAAAA,gBAAgB,CAACL,QAAD,EAAWM,QAAX,EAAqB,QAArB,CAAhB;AACAD,EAAAA,gBAAgB,CAACL,QAAD,EAAWM,QAAX,EAAqB,QAArB,CAAhB;AACAD,EAAAA,gBAAgB,CAACL,QAAD,EAAWM,QAAX,EAAqB,SAArB,CAAhB;AACAD,EAAAA,gBAAgB,CAACL,QAAD,EAAWM,QAAX,EAAqB,SAArB,CAAhB;AACAD,EAAAA,gBAAgB,CAACL,QAAD,EAAWM,QAAX,EAAqB,UAArB,CAAhB;AACD,C,CAAC;;AAEF,OAAO,SAASuC,0BAAT,CAAoChC,MAApC,EAA4Cb,QAA5C,EAAsD8C,QAAtD,EAAgEhC,cAAhE,EAAgFC,MAAhF,EAAwF;AAC7F,MAAI,CAAC+B,QAAL,EAAe;AACb;AACD;;AAED,MAAIC,WAAW,GAAGlC,MAAM,CAACmC,KAAzB;AACA,MAAIC,mBAAJ;AACA,MAAI9B,SAAS,GAAG2B,QAAQ,CAAC3B,SAAzB;;AAEA,MAAIJ,MAAM,IAAII,SAAd,EAAyB;AACvB,QAAIC,aAAa,GAAG3B,IAAI,CAAC0B,SAAD,CAAxB;AACA,KAAC8B,mBAAD,KAAyBA,mBAAmB,GAAGnC,cAAc,CAACkC,KAAf,GAAuB,EAAtE;;AAEA,SAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,aAAa,CAACE,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAIE,GAAG,GAAGH,aAAa,CAACC,CAAD,CAAvB,CAD6C,CACjB;;AAE5B4B,MAAAA,mBAAmB,CAAC1B,GAAD,CAAnB,GAA2BJ,SAAS,CAACI,GAAD,CAApC;AACD;AACF;;AAED,MAAI,CAACR,MAAD,IAAWgC,WAAf,EAA4B;AAC1B,QAAID,QAAQ,CAACtB,UAAb,EAAyB;AACvB,UAAIC,cAAc,GAAGrC,gBAAgB,CAAC0D,QAAQ,CAACtB,UAAV,CAArC;AACA,OAACyB,mBAAD,KAAyBA,mBAAmB,GAAGnC,cAAc,CAACkC,KAAf,GAAuB,EAAtE;;AAEA,WAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGI,cAAc,CAACH,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,YAAIE,GAAG,GAAGE,cAAc,CAACJ,CAAD,CAAxB;AACA,YAAIK,KAAK,GAAGqB,WAAW,CAACxB,GAAD,CAAvB,CAF8C,CAEhB;;AAE9B0B,QAAAA,mBAAmB,CAAC1B,GAAD,CAAnB,GAA2BG,KAA3B;AACD;AACF,KAVD,MAUO,IAAIb,MAAM,CAACqC,sBAAP,IAAiC3D,OAAO,CAACS,QAAQ,CAACwB,UAAV,EAAsB,OAAtB,CAAP,IAAyC,CAA9E,EAAiF;AACtF,UAAI2B,cAAc,GAAGtC,MAAM,CAACqC,sBAAP,EAArB;AACA,UAAIE,mBAAmB,GAAGD,cAAc,GAAGA,cAAc,CAACH,KAAlB,GAA0B,IAAlE;;AAEA,UAAII,mBAAJ,EAAyB;AACvB,SAACH,mBAAD,KAAyBA,mBAAmB,GAAGnC,cAAc,CAACkC,KAAf,GAAuB,EAAtE;AACA,YAAIK,SAAS,GAAG5D,IAAI,CAACqD,QAAD,CAApB;;AAEA,aAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgC,SAAS,CAAC/B,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,cAAIE,GAAG,GAAG8B,SAAS,CAAChC,CAAD,CAAnB;;AAEA,cAAI+B,mBAAmB,CAAC7B,GAAD,CAAvB,EAA8B;AAC5B,gBAAIG,KAAK,GAAGqB,WAAW,CAACxB,GAAD,CAAvB;AACA0B,YAAAA,mBAAmB,CAAC1B,GAAD,CAAnB,GAA2BG,KAA3B;AACD;AACF;AACF;AACF;AACF;;AAED,MAAIO,OAAO,GAAGa,QAAQ,CAACb,OAAvB;;AAEA,MAAIA,OAAJ,EAAa;AACX,QAAII,WAAW,GAAG5C,IAAI,CAACwC,OAAD,CAAtB;AACA,QAAIC,YAAY,GAAGC,6BAA6B,CAACtB,MAAD,CAAhD;AACA,QAAIyC,iBAAiB,GAAGpB,YAAY,CAACc,KAAb,KAAuBd,YAAY,CAACc,KAAb,GAAqB,EAA5C,CAAxB;;AAEA,SAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgB,WAAW,CAACf,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,UAAIE,GAAG,GAAGc,WAAW,CAAChB,CAAD,CAArB;AACAiC,MAAAA,iBAAiB,CAAC/B,GAAD,CAAjB,GAAyBU,OAAO,CAACV,GAAD,CAAhC;AACD;AACF;AACF;AACD,IAAIO,2BAAJ;;AAEA,IAAIH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,EAAAA,2BAA2B,GAAG,UAAUyB,QAAV,EAAoBC,MAApB,EAA4B9B,KAA5B,EAAmC;AAC/D,QAAI,CAAClC,WAAW,CAACgE,MAAD,CAAhB,EAA0B;AACxBnE,MAAAA,MAAM,CAACmE,MAAM,IAAI,IAAV,IAAkBC,QAAQ,CAACD,MAAD,CAA3B,EAAqC,WAAWD,QAAX,GAAsB,8DAA3D,CAAN;AACD,KAFD,MAEO;AACL;AACA;AACAlE,MAAAA,MAAM,CAACmE,MAAM,KAAK9B,KAAZ,EAAmB,WAAW6B,QAAX,GAAsB,6DAAzC,CAAN;AACD;AACF,GARD;AASD;;AAED,SAASvB,2BAAT,CAAqCwB,MAArC,EAA6C9B,KAA7C,EAAoD;AAClD;AACA,SAAO,CAAClC,WAAW,CAACgE,MAAD,CAAZ,GAAuBA,MAAM,IAAI,IAAV,IAAkBC,QAAQ,CAACD,MAAD,CAAjD,GAA4DA,MAAM,KAAK9B,KAA9E;AACD;;AAED,IAAIiB,uBAAJ;;AAEA,IAAIhB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCc,EAAAA,uBAAuB,GAAG,UAAUpB,GAAV,EAAemC,MAAf,EAAuB;AAC/CrE,IAAAA,MAAM,CAACC,MAAM,CAACH,eAAD,EAAkBoC,GAAlB,CAAP,EAA+B,WAAWA,GAAX,GAAiB,2BAAjB,GAA+CmC,MAA/C,GAAwD,KAAxD,GAAgE,QAAhE,GAA2EjE,IAAI,CAACN,eAAD,CAAJ,CAAsBwE,IAAtB,CAA2B,MAA3B,CAA3E,GAAgH,kBAA/I,CAAN;AACD,GAFD;AAGD;;AAED,SAASxB,6BAAT,CAAuCO,EAAvC,EAA2C;AACzC,MAAIkB,OAAO,GAAG1E,gBAAgB,CAACwD,EAAD,CAA9B;AACA,SAAOkB,OAAO,CAAC1B,YAAR,KAAyB0B,OAAO,CAAC1B,YAAR,GAAuB,EAAhD,CAAP;AACD","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { customInnerStore, TRANSFORM_PROPS } from './CustomSeries';\nimport { normalizeToArray } from '../../util/model';\nimport { assert, hasOwn, indexOf, isArrayLike, keys } from 'zrender/lib/core/util';\nimport { cloneValue } from 'zrender/lib/animation/Animator';\nvar LEGACY_TRANSFORM_PROPS = {\n  position: ['x', 'y'],\n  scale: ['scaleX', 'scaleY'],\n  origin: ['originX', 'originY']\n};\n\nfunction setLegacyTransformProp(elOption, targetProps, legacyName) {\n  var legacyArr = elOption[legacyName];\n  var xyName = LEGACY_TRANSFORM_PROPS[legacyName];\n\n  if (legacyArr) {\n    targetProps[xyName[0]] = legacyArr[0];\n    targetProps[xyName[1]] = legacyArr[1];\n  }\n}\n\nfunction setTransformProp(elOption, allProps, name) {\n  if (elOption[name] != null) {\n    allProps[name] = elOption[name];\n  }\n}\n\nfunction setTransformPropToTransitionFrom(transitionFrom, name, fromTransformable // If provided, retrieve from the element.\n) {\n  if (fromTransformable) {\n    transitionFrom[name] = fromTransformable[name];\n  }\n} // See [STRATEGY_TRANSITION]\n\n\nexport function prepareShapeOrExtraTransitionFrom(mainAttr, fromEl, elOption, transFromProps, isInit) {\n  var attrOpt = elOption[mainAttr];\n\n  if (!attrOpt) {\n    return;\n  }\n\n  var elPropsInAttr = fromEl[mainAttr];\n  var transFromPropsInAttr;\n  var enterFrom = attrOpt.enterFrom;\n\n  if (isInit && enterFrom) {\n    !transFromPropsInAttr && (transFromPropsInAttr = transFromProps[mainAttr] = {});\n    var enterFromKeys = keys(enterFrom);\n\n    for (var i = 0; i < enterFromKeys.length; i++) {\n      // `enterFrom` props are not necessarily also declared in `shape`/`style`/...,\n      // for example, `opacity` can only declared in `enterFrom` but not in `style`.\n      var key = enterFromKeys[i]; // Do not clone, animator will perform that clone.\n\n      transFromPropsInAttr[key] = enterFrom[key];\n    }\n  }\n\n  if (!isInit && elPropsInAttr) {\n    if (attrOpt.transition) {\n      !transFromPropsInAttr && (transFromPropsInAttr = transFromProps[mainAttr] = {});\n      var transitionKeys = normalizeToArray(attrOpt.transition);\n\n      for (var i = 0; i < transitionKeys.length; i++) {\n        var key = transitionKeys[i];\n        var elVal = elPropsInAttr[key];\n\n        if (process.env.NODE_ENV !== 'production') {\n          checkNonStyleTansitionRefer(key, attrOpt[key], elVal);\n        } // Do not clone, see `checkNonStyleTansitionRefer`.\n\n\n        transFromPropsInAttr[key] = elVal;\n      }\n    } else if (indexOf(elOption.transition, mainAttr) >= 0) {\n      !transFromPropsInAttr && (transFromPropsInAttr = transFromProps[mainAttr] = {});\n      var elPropsInAttrKeys = keys(elPropsInAttr);\n\n      for (var i = 0; i < elPropsInAttrKeys.length; i++) {\n        var key = elPropsInAttrKeys[i];\n        var elVal = elPropsInAttr[key];\n\n        if (isNonStyleTransitionEnabled(attrOpt[key], elVal)) {\n          transFromPropsInAttr[key] = elVal;\n        }\n      }\n    }\n  }\n\n  var leaveTo = attrOpt.leaveTo;\n\n  if (leaveTo) {\n    var leaveToProps = getOrCreateLeaveToPropsFromEl(fromEl);\n    var leaveToPropsInAttr = leaveToProps[mainAttr] || (leaveToProps[mainAttr] = {});\n    var leaveToKeys = keys(leaveTo);\n\n    for (var i = 0; i < leaveToKeys.length; i++) {\n      var key = leaveToKeys[i];\n      leaveToPropsInAttr[key] = leaveTo[key];\n    }\n  }\n}\nexport function prepareShapeOrExtraAllPropsFinal(mainAttr, elOption, allProps) {\n  var attrOpt = elOption[mainAttr];\n\n  if (!attrOpt) {\n    return;\n  }\n\n  var allPropsInAttr = allProps[mainAttr] = {};\n  var keysInAttr = keys(attrOpt);\n\n  for (var i = 0; i < keysInAttr.length; i++) {\n    var key = keysInAttr[i]; // To avoid share one object with different element, and\n    // to avoid user modify the object inexpectedly, have to clone.\n\n    allPropsInAttr[key] = cloneValue(attrOpt[key]);\n  }\n} // See [STRATEGY_TRANSITION].\n\nexport function prepareTransformTransitionFrom(el, elOption, transFromProps, isInit) {\n  var enterFrom = elOption.enterFrom;\n\n  if (isInit && enterFrom) {\n    var enterFromKeys = keys(enterFrom);\n\n    for (var i = 0; i < enterFromKeys.length; i++) {\n      var key = enterFromKeys[i];\n\n      if (process.env.NODE_ENV !== 'production') {\n        checkTransformPropRefer(key, 'el.enterFrom');\n      } // Do not clone, animator will perform that clone.\n\n\n      transFromProps[key] = enterFrom[key];\n    }\n  }\n\n  if (!isInit) {\n    if (elOption.transition) {\n      var transitionKeys = normalizeToArray(elOption.transition);\n\n      for (var i = 0; i < transitionKeys.length; i++) {\n        var key = transitionKeys[i];\n\n        if (key === 'style' || key === 'shape' || key === 'extra') {\n          continue;\n        }\n\n        var elVal = el[key];\n\n        if (process.env.NODE_ENV !== 'production') {\n          checkTransformPropRefer(key, 'el.transition');\n          checkNonStyleTansitionRefer(key, elOption[key], elVal);\n        } // Do not clone, see `checkNonStyleTansitionRefer`.\n\n\n        transFromProps[key] = elVal;\n      }\n    } // This default transition see [STRATEGY_TRANSITION]\n    else {\n        setTransformPropToTransitionFrom(transFromProps, 'x', el);\n        setTransformPropToTransitionFrom(transFromProps, 'y', el);\n      }\n  }\n\n  var leaveTo = elOption.leaveTo;\n\n  if (leaveTo) {\n    var leaveToProps = getOrCreateLeaveToPropsFromEl(el);\n    var leaveToKeys = keys(leaveTo);\n\n    for (var i = 0; i < leaveToKeys.length; i++) {\n      var key = leaveToKeys[i];\n\n      if (process.env.NODE_ENV !== 'production') {\n        checkTransformPropRefer(key, 'el.leaveTo');\n      }\n\n      leaveToProps[key] = leaveTo[key];\n    }\n  }\n}\nexport function prepareTransformAllPropsFinal(el, elOption, allProps) {\n  setLegacyTransformProp(elOption, allProps, 'position');\n  setLegacyTransformProp(elOption, allProps, 'scale');\n  setLegacyTransformProp(elOption, allProps, 'origin');\n  setTransformProp(elOption, allProps, 'x');\n  setTransformProp(elOption, allProps, 'y');\n  setTransformProp(elOption, allProps, 'scaleX');\n  setTransformProp(elOption, allProps, 'scaleY');\n  setTransformProp(elOption, allProps, 'originX');\n  setTransformProp(elOption, allProps, 'originY');\n  setTransformProp(elOption, allProps, 'rotation');\n} // See [STRATEGY_TRANSITION].\n\nexport function prepareStyleTransitionFrom(fromEl, elOption, styleOpt, transFromProps, isInit) {\n  if (!styleOpt) {\n    return;\n  }\n\n  var fromElStyle = fromEl.style;\n  var transFromStyleProps;\n  var enterFrom = styleOpt.enterFrom;\n\n  if (isInit && enterFrom) {\n    var enterFromKeys = keys(enterFrom);\n    !transFromStyleProps && (transFromStyleProps = transFromProps.style = {});\n\n    for (var i = 0; i < enterFromKeys.length; i++) {\n      var key = enterFromKeys[i]; // Do not clone, animator will perform that clone.\n\n      transFromStyleProps[key] = enterFrom[key];\n    }\n  }\n\n  if (!isInit && fromElStyle) {\n    if (styleOpt.transition) {\n      var transitionKeys = normalizeToArray(styleOpt.transition);\n      !transFromStyleProps && (transFromStyleProps = transFromProps.style = {});\n\n      for (var i = 0; i < transitionKeys.length; i++) {\n        var key = transitionKeys[i];\n        var elVal = fromElStyle[key]; // Do not clone, see `checkNonStyleTansitionRefer`.\n\n        transFromStyleProps[key] = elVal;\n      }\n    } else if (fromEl.getAnimationStyleProps && indexOf(elOption.transition, 'style') >= 0) {\n      var animationProps = fromEl.getAnimationStyleProps();\n      var animationStyleProps = animationProps ? animationProps.style : null;\n\n      if (animationStyleProps) {\n        !transFromStyleProps && (transFromStyleProps = transFromProps.style = {});\n        var styleKeys = keys(styleOpt);\n\n        for (var i = 0; i < styleKeys.length; i++) {\n          var key = styleKeys[i];\n\n          if (animationStyleProps[key]) {\n            var elVal = fromElStyle[key];\n            transFromStyleProps[key] = elVal;\n          }\n        }\n      }\n    }\n  }\n\n  var leaveTo = styleOpt.leaveTo;\n\n  if (leaveTo) {\n    var leaveToKeys = keys(leaveTo);\n    var leaveToProps = getOrCreateLeaveToPropsFromEl(fromEl);\n    var leaveToStyleProps = leaveToProps.style || (leaveToProps.style = {});\n\n    for (var i = 0; i < leaveToKeys.length; i++) {\n      var key = leaveToKeys[i];\n      leaveToStyleProps[key] = leaveTo[key];\n    }\n  }\n}\nvar checkNonStyleTansitionRefer;\n\nif (process.env.NODE_ENV !== 'production') {\n  checkNonStyleTansitionRefer = function (propName, optVal, elVal) {\n    if (!isArrayLike(optVal)) {\n      assert(optVal != null && isFinite(optVal), 'Prop `' + propName + '` must refer to a finite number or ArrayLike for transition.');\n    } else {\n      // Try not to copy array for performance, but if user use the same object in different\n      // call of `renderItem`, it will casue animation transition fail.\n      assert(optVal !== elVal, 'Prop `' + propName + '` must use different Array object each time for transition.');\n    }\n  };\n}\n\nfunction isNonStyleTransitionEnabled(optVal, elVal) {\n  // The same as `checkNonStyleTansitionRefer`.\n  return !isArrayLike(optVal) ? optVal != null && isFinite(optVal) : optVal !== elVal;\n}\n\nvar checkTransformPropRefer;\n\nif (process.env.NODE_ENV !== 'production') {\n  checkTransformPropRefer = function (key, usedIn) {\n    assert(hasOwn(TRANSFORM_PROPS, key), 'Prop `' + key + '` is not a permitted in `' + usedIn + '`. ' + 'Only `' + keys(TRANSFORM_PROPS).join('`, `') + '` are permitted.');\n  };\n}\n\nfunction getOrCreateLeaveToPropsFromEl(el) {\n  var innerEl = customInnerStore(el);\n  return innerEl.leaveToProps || (innerEl.leaveToProps = {});\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\"; // TODO Batch by color\n\nimport * as graphic from '../../util/graphic';\nimport IncrementalDisplayable from 'zrender/lib/graphic/IncrementalDisplayable';\nimport * as lineContain from 'zrender/lib/contain/line';\nimport * as quadraticContain from 'zrender/lib/contain/quadratic';\nimport { getECData } from '../../util/innerStore';\n\nvar LargeLinesPathShape =\n/** @class */\nfunction () {\n  function LargeLinesPathShape() {\n    this.polyline = false;\n    this.curveness = 0;\n    this.segs = [];\n  }\n\n  return LargeLinesPathShape;\n}();\n\nvar LargeLinesPath =\n/** @class */\nfunction (_super) {\n  __extends(LargeLinesPath, _super);\n\n  function LargeLinesPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  LargeLinesPath.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  LargeLinesPath.prototype.getDefaultShape = function () {\n    return new LargeLinesPathShape();\n  };\n\n  LargeLinesPath.prototype.buildPath = function (ctx, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          ctx.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            ctx.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        ctx.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          ctx.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          ctx.lineTo(x1, y1);\n        }\n      }\n    }\n  };\n\n  LargeLinesPath.prototype.findDataIndex = function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n    var lineWidth = this.style.lineWidth;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1, lineWidth, x, y)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  };\n\n  return LargeLinesPath;\n}(graphic.Path);\n\nvar LargeLineDraw =\n/** @class */\nfunction () {\n  function LargeLineDraw() {\n    this.group = new graphic.Group();\n  }\n\n  LargeLineDraw.prototype.isPersistent = function () {\n    return !this._incremental;\n  };\n\n  ;\n  /**\n   * Update symbols draw by new data\n   */\n\n  LargeLineDraw.prototype.updateData = function (data) {\n    this.group.removeAll();\n    var lineEl = new LargeLinesPath({\n      rectHover: true,\n      cursor: 'default'\n    });\n    lineEl.setShape({\n      segs: data.getLayout('linesPoints')\n    });\n\n    this._setCommon(lineEl, data); // Add back\n\n\n    this.group.add(lineEl);\n    this._incremental = null;\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this.group.removeAll();\n\n    this._clearIncremental();\n\n    if (data.count() > 5e5) {\n      if (!this._incremental) {\n        this._incremental = new IncrementalDisplayable({\n          silent: true\n        });\n      }\n\n      this.group.add(this._incremental);\n    } else {\n      this._incremental = null;\n    }\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.incrementalUpdate = function (taskParams, data) {\n    var lineEl = new LargeLinesPath();\n    lineEl.setShape({\n      segs: data.getLayout('linesPoints')\n    });\n\n    this._setCommon(lineEl, data, !!this._incremental);\n\n    if (!this._incremental) {\n      lineEl.rectHover = true;\n      lineEl.cursor = 'default';\n      lineEl.__startIndex = taskParams.start;\n      this.group.add(lineEl);\n    } else {\n      this._incremental.addDisplayable(lineEl, true);\n    }\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.remove = function () {\n    this._clearIncremental();\n\n    this._incremental = null;\n    this.group.removeAll();\n  };\n\n  ;\n\n  LargeLineDraw.prototype._setCommon = function (lineEl, data, isIncremental) {\n    var hostModel = data.hostModel;\n    lineEl.setShape({\n      polyline: hostModel.get('polyline'),\n      curveness: hostModel.get(['lineStyle', 'curveness'])\n    });\n    lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n    lineEl.style.strokeNoScale = true;\n    var style = data.getVisual('style');\n\n    if (style && style.stroke) {\n      lineEl.setStyle('stroke', style.stroke);\n    }\n\n    lineEl.setStyle('fill', null);\n\n    if (!isIncremental) {\n      var ecData_1 = getECData(lineEl); // Enable tooltip\n      // PENDING May have performance issue when path is extremely large\n\n      ecData_1.seriesIndex = hostModel.seriesIndex;\n      lineEl.on('mousemove', function (e) {\n        ecData_1.dataIndex = null;\n        var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n        if (dataIndex > 0) {\n          // Provide dataIndex for tooltip\n          ecData_1.dataIndex = dataIndex + lineEl.__startIndex;\n        }\n      });\n    }\n  };\n\n  ;\n\n  LargeLineDraw.prototype._clearIncremental = function () {\n    var incremental = this._incremental;\n\n    if (incremental) {\n      incremental.clearDisplaybles();\n    }\n  };\n\n  ;\n  return LargeLineDraw;\n}();\n\nexport default LargeLineDraw;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/chart/helper/LargeLineDraw.js"],"names":["__extends","graphic","IncrementalDisplayable","lineContain","quadraticContain","getECData","LargeLinesPathShape","polyline","curveness","segs","LargeLinesPath","_super","opts","call","prototype","getDefaultStyle","stroke","fill","getDefaultShape","buildPath","ctx","shape","i","length","count","moveTo","k","lineTo","x0","y0","x1","y1","x2","y2","quadraticCurveTo","findDataIndex","x","y","lineWidth","style","dataIndex","containStroke","Path","LargeLineDraw","group","Group","isPersistent","_incremental","updateData","data","removeAll","lineEl","rectHover","cursor","setShape","getLayout","_setCommon","add","incrementalPrepareUpdate","_clearIncremental","silent","incrementalUpdate","taskParams","__startIndex","start","addDisplayable","remove","isIncremental","hostModel","get","useStyle","getModel","getLineStyle","strokeNoScale","getVisual","setStyle","ecData_1","seriesIndex","on","e","offsetX","offsetY","incremental","clearDisplaybles"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\"; // TODO Batch by color\n\nimport * as graphic from '../../util/graphic';\nimport IncrementalDisplayable from 'zrender/lib/graphic/IncrementalDisplayable';\nimport * as lineContain from 'zrender/lib/contain/line';\nimport * as quadraticContain from 'zrender/lib/contain/quadratic';\nimport { getECData } from '../../util/innerStore';\n\nvar LargeLinesPathShape =\n/** @class */\nfunction () {\n  function LargeLinesPathShape() {\n    this.polyline = false;\n    this.curveness = 0;\n    this.segs = [];\n  }\n\n  return LargeLinesPathShape;\n}();\n\nvar LargeLinesPath =\n/** @class */\nfunction (_super) {\n  __extends(LargeLinesPath, _super);\n\n  function LargeLinesPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  LargeLinesPath.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  LargeLinesPath.prototype.getDefaultShape = function () {\n    return new LargeLinesPathShape();\n  };\n\n  LargeLinesPath.prototype.buildPath = function (ctx, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          ctx.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            ctx.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        ctx.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          ctx.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          ctx.lineTo(x1, y1);\n        }\n      }\n    }\n  };\n\n  LargeLinesPath.prototype.findDataIndex = function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n    var lineWidth = this.style.lineWidth;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1, lineWidth, x, y)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  };\n\n  return LargeLinesPath;\n}(graphic.Path);\n\nvar LargeLineDraw =\n/** @class */\nfunction () {\n  function LargeLineDraw() {\n    this.group = new graphic.Group();\n  }\n\n  LargeLineDraw.prototype.isPersistent = function () {\n    return !this._incremental;\n  };\n\n  ;\n  /**\n   * Update symbols draw by new data\n   */\n\n  LargeLineDraw.prototype.updateData = function (data) {\n    this.group.removeAll();\n    var lineEl = new LargeLinesPath({\n      rectHover: true,\n      cursor: 'default'\n    });\n    lineEl.setShape({\n      segs: data.getLayout('linesPoints')\n    });\n\n    this._setCommon(lineEl, data); // Add back\n\n\n    this.group.add(lineEl);\n    this._incremental = null;\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this.group.removeAll();\n\n    this._clearIncremental();\n\n    if (data.count() > 5e5) {\n      if (!this._incremental) {\n        this._incremental = new IncrementalDisplayable({\n          silent: true\n        });\n      }\n\n      this.group.add(this._incremental);\n    } else {\n      this._incremental = null;\n    }\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.incrementalUpdate = function (taskParams, data) {\n    var lineEl = new LargeLinesPath();\n    lineEl.setShape({\n      segs: data.getLayout('linesPoints')\n    });\n\n    this._setCommon(lineEl, data, !!this._incremental);\n\n    if (!this._incremental) {\n      lineEl.rectHover = true;\n      lineEl.cursor = 'default';\n      lineEl.__startIndex = taskParams.start;\n      this.group.add(lineEl);\n    } else {\n      this._incremental.addDisplayable(lineEl, true);\n    }\n  };\n\n  ;\n  /**\n   * @override\n   */\n\n  LargeLineDraw.prototype.remove = function () {\n    this._clearIncremental();\n\n    this._incremental = null;\n    this.group.removeAll();\n  };\n\n  ;\n\n  LargeLineDraw.prototype._setCommon = function (lineEl, data, isIncremental) {\n    var hostModel = data.hostModel;\n    lineEl.setShape({\n      polyline: hostModel.get('polyline'),\n      curveness: hostModel.get(['lineStyle', 'curveness'])\n    });\n    lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n    lineEl.style.strokeNoScale = true;\n    var style = data.getVisual('style');\n\n    if (style && style.stroke) {\n      lineEl.setStyle('stroke', style.stroke);\n    }\n\n    lineEl.setStyle('fill', null);\n\n    if (!isIncremental) {\n      var ecData_1 = getECData(lineEl); // Enable tooltip\n      // PENDING May have performance issue when path is extremely large\n\n      ecData_1.seriesIndex = hostModel.seriesIndex;\n      lineEl.on('mousemove', function (e) {\n        ecData_1.dataIndex = null;\n        var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n        if (dataIndex > 0) {\n          // Provide dataIndex for tooltip\n          ecData_1.dataIndex = dataIndex + lineEl.__startIndex;\n        }\n      });\n    }\n  };\n\n  ;\n\n  LargeLineDraw.prototype._clearIncremental = function () {\n    var incremental = this._incremental;\n\n    if (incremental) {\n      incremental.clearDisplaybles();\n    }\n  };\n\n  ;\n  return LargeLineDraw;\n}();\n\nexport default LargeLineDraw;"]},"metadata":{},"sourceType":"module"}
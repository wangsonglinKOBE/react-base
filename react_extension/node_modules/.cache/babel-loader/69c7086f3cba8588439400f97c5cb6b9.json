{"ast":null,"code":"import { __extends } from \"tslib\";\nimport Path from '../Path';\n\nvar ArcShape = function () {\n  function ArcShape() {\n    this.cx = 0;\n    this.cy = 0;\n    this.r = 0;\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.clockwise = true;\n  }\n\n  return ArcShape;\n}();\n\nexport { ArcShape };\n\nvar Arc = function (_super) {\n  __extends(Arc, _super);\n\n  function Arc(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  Arc.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  Arc.prototype.getDefaultShape = function () {\n    return new ArcShape();\n  };\n\n  Arc.prototype.buildPath = function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  };\n\n  return Arc;\n}(Path);\n\nArc.prototype.type = 'arc';\nexport default Arc;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/zrender/lib/graphic/shape/Arc.js"],"names":["__extends","Path","ArcShape","cx","cy","r","startAngle","endAngle","Math","PI","clockwise","Arc","_super","opts","call","prototype","getDefaultStyle","stroke","fill","getDefaultShape","buildPath","ctx","shape","x","y","max","unitX","cos","unitY","sin","moveTo","arc","type"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AACA,IAAIC,QAAQ,GAAI,YAAY;AACxB,WAASA,QAAT,GAAoB;AAChB,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,CAAL,GAAS,CAAT;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,QAAL,GAAgBC,IAAI,CAACC,EAAL,GAAU,CAA1B;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACH;;AACD,SAAOR,QAAP;AACH,CAVe,EAAhB;;AAWA,SAASA,QAAT;;AACA,IAAIS,GAAG,GAAI,UAAUC,MAAV,EAAkB;AACzBZ,EAAAA,SAAS,CAACW,GAAD,EAAMC,MAAN,CAAT;;AACA,WAASD,GAAT,CAAaE,IAAb,EAAmB;AACf,WAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,IAAlB,KAA2B,IAAlC;AACH;;AACDF,EAAAA,GAAG,CAACI,SAAJ,CAAcC,eAAd,GAAgC,YAAY;AACxC,WAAO;AACHC,MAAAA,MAAM,EAAE,MADL;AAEHC,MAAAA,IAAI,EAAE;AAFH,KAAP;AAIH,GALD;;AAMAP,EAAAA,GAAG,CAACI,SAAJ,CAAcI,eAAd,GAAgC,YAAY;AACxC,WAAO,IAAIjB,QAAJ,EAAP;AACH,GAFD;;AAGAS,EAAAA,GAAG,CAACI,SAAJ,CAAcK,SAAd,GAA0B,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAC5C,QAAIC,CAAC,GAAGD,KAAK,CAACnB,EAAd;AACA,QAAIqB,CAAC,GAAGF,KAAK,CAAClB,EAAd;AACA,QAAIC,CAAC,GAAGG,IAAI,CAACiB,GAAL,CAASH,KAAK,CAACjB,CAAf,EAAkB,CAAlB,CAAR;AACA,QAAIC,UAAU,GAAGgB,KAAK,CAAChB,UAAvB;AACA,QAAIC,QAAQ,GAAGe,KAAK,CAACf,QAArB;AACA,QAAIG,SAAS,GAAGY,KAAK,CAACZ,SAAtB;AACA,QAAIgB,KAAK,GAAGlB,IAAI,CAACmB,GAAL,CAASrB,UAAT,CAAZ;AACA,QAAIsB,KAAK,GAAGpB,IAAI,CAACqB,GAAL,CAASvB,UAAT,CAAZ;AACAe,IAAAA,GAAG,CAACS,MAAJ,CAAWJ,KAAK,GAAGrB,CAAR,GAAYkB,CAAvB,EAA0BK,KAAK,GAAGvB,CAAR,GAAYmB,CAAtC;AACAH,IAAAA,GAAG,CAACU,GAAJ,CAAQR,CAAR,EAAWC,CAAX,EAAcnB,CAAd,EAAiBC,UAAjB,EAA6BC,QAA7B,EAAuC,CAACG,SAAxC;AACH,GAXD;;AAYA,SAAOC,GAAP;AACH,CA3BU,CA2BTV,IA3BS,CAAX;;AA4BAU,GAAG,CAACI,SAAJ,CAAciB,IAAd,GAAqB,KAArB;AACA,eAAerB,GAAf","sourcesContent":["import { __extends } from \"tslib\";\nimport Path from '../Path';\nvar ArcShape = (function () {\n    function ArcShape() {\n        this.cx = 0;\n        this.cy = 0;\n        this.r = 0;\n        this.startAngle = 0;\n        this.endAngle = Math.PI * 2;\n        this.clockwise = true;\n    }\n    return ArcShape;\n}());\nexport { ArcShape };\nvar Arc = (function (_super) {\n    __extends(Arc, _super);\n    function Arc(opts) {\n        return _super.call(this, opts) || this;\n    }\n    Arc.prototype.getDefaultStyle = function () {\n        return {\n            stroke: '#000',\n            fill: null\n        };\n    };\n    Arc.prototype.getDefaultShape = function () {\n        return new ArcShape();\n    };\n    Arc.prototype.buildPath = function (ctx, shape) {\n        var x = shape.cx;\n        var y = shape.cy;\n        var r = Math.max(shape.r, 0);\n        var startAngle = shape.startAngle;\n        var endAngle = shape.endAngle;\n        var clockwise = shape.clockwise;\n        var unitX = Math.cos(startAngle);\n        var unitY = Math.sin(startAngle);\n        ctx.moveTo(unitX * r + x, unitY * r + y);\n        ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    };\n    return Arc;\n}(Path));\nArc.prototype.type = 'arc';\nexport default Arc;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrender from 'zrender/lib/zrender';\nimport { assert, each, isFunction, isObject, indexOf, bind, clone, setAsPrimitive, createCanvas, extend, createHashMap, map, defaults, isDom, isArray, $override, noop } from 'zrender/lib/core/util';\nimport * as colorTool from 'zrender/lib/tool/color';\nimport env from 'zrender/lib/core/env';\nimport timsort from 'zrender/lib/core/timsort';\nimport Eventful from 'zrender/lib/core/Eventful';\nimport GlobalModel from '../model/Global';\nimport ExtensionAPI from './ExtensionAPI';\nimport CoordinateSystemManager from './CoordinateSystem';\nimport OptionManager from '../model/OptionManager';\nimport backwardCompat from '../preprocessor/backwardCompat';\nimport dataStack from '../processor/dataStack';\nimport SeriesModel from '../model/Series';\nimport ComponentView from '../view/Component';\nimport ChartView from '../view/Chart';\nimport * as graphic from '../util/graphic';\nimport { getECData } from '../util/innerStore';\nimport { isHighDownDispatcher, HOVER_STATE_EMPHASIS, HOVER_STATE_BLUR, blurSeriesFromHighlightPayload, toggleSelectionFromPayload, updateSeriesElementSelection, getAllSelectedIndices, isSelectChangePayload, isHighDownPayload, HIGHLIGHT_ACTION_TYPE, DOWNPLAY_ACTION_TYPE, SELECT_ACTION_TYPE, UNSELECT_ACTION_TYPE, TOGGLE_SELECT_ACTION_TYPE, savePathStates, enterEmphasis, leaveEmphasis, leaveBlur, enterSelect, leaveSelect, enterBlur, allLeaveBlur, findComponentHighDownDispatchers, blurComponent, handleGlobalMouseOverForHighDown, handleGlboalMouseOutForHighDown } from '../util/states';\nimport * as modelUtil from '../util/model';\nimport { throttle } from '../util/throttle';\nimport { seriesStyleTask, dataStyleTask, dataColorPaletteTask } from '../visual/style';\nimport loadingDefault from '../loading/default';\nimport Scheduler from './Scheduler';\nimport lightTheme from '../theme/light';\nimport darkTheme from '../theme/dark';\nimport { parseClassType } from '../util/clazz';\nimport { ECEventProcessor } from '../util/ECEventProcessor';\nimport { seriesSymbolTask, dataSymbolTask } from '../visual/symbol';\nimport { getVisualFromData, getItemVisualFromData } from '../visual/helper';\nimport { deprecateLog } from '../util/log';\nimport { handleLegacySelectEvents } from '../legacy/dataSelectAction';\nimport { registerExternalTransform } from '../data/helper/transform';\nimport { createLocaleObject, SYSTEM_LANG } from './locale';\nimport { findEventDispatcher } from '../util/event';\nimport decal from '../visual/decal';\nimport geoSourceManager from '../coord/geo/geoSourceManager';\nimport lifecycle from './lifecycle';\nvar hasWindow = typeof window !== 'undefined';\nexport var version = '5.2.0';\nexport var dependencies = {\n  zrender: '5.2.0'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800; // Some data processors depends on the stack result dimension (to calculate data extent).\n// So data stack stage should be in front of data processing stage.\n\nvar PRIORITY_PROCESSOR_DATASTACK = 900; // \"Data filter\" will block the stream, so it should be\n// put at the begining of data processing.\n\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_DEFAULT = 2000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\n// overwrite the viusal result of component (like `visualMap`)\n// using data item specific setting (like itemStyle.xxx on data item)\n\nvar PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500; // Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\n// visual result like `symbolSize`.\n\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY_VISUAL_ARIA = 6000;\nvar PRIORITY_VISUAL_DECAL = 7000;\nexport var PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH,\n    CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\n    ARIA: PRIORITY_VISUAL_ARIA,\n    DECAL: PRIORITY_VISUAL_DECAL\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\nvar PENDING_UPDATE = '__pendingUpdate';\nvar STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nvar CONNECT_STATUS_KEY = '__connectUpdateStatus';\nvar CONNECT_STATUS_PENDING = 0;\nvar CONNECT_STATUS_UPDATING = 1;\nvar CONNECT_STATUS_UPDATED = 2;\n;\n;\n\nfunction createRegisterEventWithLowercaseECharts(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (this.isDisposed()) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction createRegisterEventWithLowercaseMessageCenter(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction toLowercaseNameAndCallEventful(host, method, args) {\n  // `args[0]` is event name. Event name is all lowercase.\n  args[0] = args[0] && args[0].toLowerCase();\n  return Eventful.prototype[method].apply(host, args);\n}\n\nvar MessageCenter =\n/** @class */\nfunction (_super) {\n  __extends(MessageCenter, _super);\n\n  function MessageCenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return MessageCenter;\n}(Eventful);\n\nvar messageCenterProto = MessageCenter.prototype;\nmessageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\nmessageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off'); // ---------------------------------------\n// Internal method names for class ECharts\n// ---------------------------------------\n\nvar prepare;\nvar prepareView;\nvar updateDirectly;\nvar updateMethods;\nvar doConvertPixel;\nvar updateStreamModes;\nvar doDispatchAction;\nvar flushPendingActions;\nvar triggerUpdatedEvent;\nvar bindRenderedEvent;\nvar bindMouseEvent;\nvar clearColorPalette;\nvar render;\nvar renderComponents;\nvar renderSeries;\nvar createExtensionAPI;\nvar enableConnect;\nvar markStatusToUpdate;\nvar applyChangedStates;\n\nvar ECharts =\n/** @class */\nfunction (_super) {\n  __extends(ECharts, _super);\n\n  function ECharts(dom, // Theme name or themeOption.\n  theme, opts) {\n    var _this = _super.call(this, new ECEventProcessor()) || this;\n\n    _this._chartsViews = [];\n    _this._chartsMap = {};\n    _this._componentsViews = [];\n    _this._componentsMap = {}; // Can't dispatch action during rendering procedure\n\n    _this._pendingActions = [];\n    opts = opts || {}; // Get theme by name\n\n    if (typeof theme === 'string') {\n      theme = themeStorage[theme];\n    }\n\n    _this._dom = dom;\n    var defaultRenderer = 'canvas';\n    var defaultUseDirtyRect = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var root =\n      /* eslint-disable-next-line */\n      hasWindow ? window : global;\n      defaultRenderer = root.__ECHARTS__DEFAULT__RENDERER__ || defaultRenderer;\n      var devUseDirtyRect = root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;\n      defaultUseDirtyRect = devUseDirtyRect == null ? defaultUseDirtyRect : devUseDirtyRect;\n    }\n\n    var zr = _this._zr = zrender.init(dom, {\n      renderer: opts.renderer || defaultRenderer,\n      devicePixelRatio: opts.devicePixelRatio,\n      width: opts.width,\n      height: opts.height,\n      useDirtyRect: opts.useDirtyRect == null ? defaultUseDirtyRect : opts.useDirtyRect\n    }); // Expect 60 fps.\n\n    _this._throttledZrFlush = throttle(bind(zr.flush, zr), 17);\n    theme = clone(theme);\n    theme && backwardCompat(theme, true);\n    _this._theme = theme;\n    _this._locale = createLocaleObject(opts.locale || SYSTEM_LANG);\n    _this._coordSysMgr = new CoordinateSystemManager();\n    var api = _this._api = createExtensionAPI(_this); // Sort on demand\n\n    function prioritySortFunc(a, b) {\n      return a.__prio - b.__prio;\n    }\n\n    timsort(visualFuncs, prioritySortFunc);\n    timsort(dataProcessorFuncs, prioritySortFunc);\n    _this._scheduler = new Scheduler(_this, api, dataProcessorFuncs, visualFuncs);\n    _this._messageCenter = new MessageCenter(); // Init mouse events\n\n    _this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n    _this.resize = bind(_this.resize, _this);\n    zr.animation.on('frame', _this._onframe, _this);\n    bindRenderedEvent(zr, _this);\n    bindMouseEvent(zr, _this); // ECharts instance can be used as value.\n\n    setAsPrimitive(_this);\n    return _this;\n  }\n\n  ECharts.prototype._onframe = function () {\n    if (this._disposed) {\n      return;\n    }\n\n    applyChangedStates(this);\n    var scheduler = this._scheduler; // Lazy update\n\n    if (this[PENDING_UPDATE]) {\n      var silent = this[PENDING_UPDATE].silent;\n      this[IN_MAIN_PROCESS_KEY] = true;\n      prepare(this);\n      updateMethods.update.call(this, null, this[PENDING_UPDATE].updateParams); // At present, in each frame, zrender performs:\n      //   (1) animation step forward.\n      //   (2) trigger('frame') (where this `_onframe` is called)\n      //   (3) zrender flush (render).\n      // If we do nothing here, since we use `setToFinal: true`, the step (3) above\n      // will render the final state of the elements before the real animation started.\n\n      this._zr.flush();\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n      this[PENDING_UPDATE] = null;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    } // Avoid do both lazy update and progress in one frame.\n    else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain', {});\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n  };\n\n  ECharts.prototype.getDom = function () {\n    return this._dom;\n  };\n\n  ECharts.prototype.getId = function () {\n    return this.id;\n  };\n\n  ECharts.prototype.getZr = function () {\n    return this._zr;\n  };\n  /* eslint-disable-next-line */\n\n\n  ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!this[IN_MAIN_PROCESS_KEY], '`setOption` should not be called during main process.');\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var silent;\n    var replaceMerge;\n    var transitionOpt;\n\n    if (isObject(notMerge)) {\n      lazyUpdate = notMerge.lazyUpdate;\n      silent = notMerge.silent;\n      replaceMerge = notMerge.replaceMerge;\n      transitionOpt = notMerge.transition;\n      notMerge = notMerge.notMerge;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    if (!this._model || notMerge) {\n      var optionManager = new OptionManager(this._api);\n      var theme = this._theme;\n      var ecModel = this._model = new GlobalModel();\n      ecModel.scheduler = this._scheduler;\n      ecModel.init(null, null, null, theme, this._locale, optionManager);\n    }\n\n    this._model.setOption(option, {\n      replaceMerge: replaceMerge\n    }, optionPreprocessorFuncs);\n\n    var updateParams = {\n      seriesTransition: transitionOpt,\n      optionChanged: true\n    };\n\n    if (lazyUpdate) {\n      this[PENDING_UPDATE] = {\n        silent: silent,\n        updateParams: updateParams\n      };\n      this[IN_MAIN_PROCESS_KEY] = false; // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\n      // It should wake it up to make sure zrender start to render at the next frame.\n\n      this.getZr().wakeUp();\n    } else {\n      prepare(this);\n      updateMethods.update.call(this, null, updateParams); // Ensure zr refresh sychronously, and then pixel in canvas can be\n      // fetched after `setOption`.\n\n      this._zr.flush();\n\n      this[PENDING_UPDATE] = null;\n      this[IN_MAIN_PROCESS_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n  };\n  /**\n   * @DEPRECATED\n   */\n\n\n  ECharts.prototype.setTheme = function () {\n    console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n  }; // We don't want developers to use getModel directly.\n\n\n  ECharts.prototype.getModel = function () {\n    return this._model;\n  };\n\n  ECharts.prototype.getOption = function () {\n    return this._model && this._model.getOption();\n  };\n\n  ECharts.prototype.getWidth = function () {\n    return this._zr.getWidth();\n  };\n\n  ECharts.prototype.getHeight = function () {\n    return this._zr.getHeight();\n  };\n\n  ECharts.prototype.getDevicePixelRatio = function () {\n    return this._zr.painter.dpr\n    /* eslint-disable-next-line */\n    || hasWindow && window.devicePixelRatio || 1;\n  };\n  /**\n   * Get canvas which has all thing rendered\n   */\n\n\n  ECharts.prototype.getRenderedCanvas = function (opts) {\n    if (!env.canvasSupported) {\n      return;\n    }\n\n    opts = opts || {};\n    return this._zr.painter.getRenderedCanvas({\n      backgroundColor: opts.backgroundColor || this._model.get('backgroundColor'),\n      pixelRatio: opts.pixelRatio || this.getDevicePixelRatio()\n    });\n  };\n  /**\n   * Get svg data url\n   */\n\n\n  ECharts.prototype.getSvgDataURL = function () {\n    if (!env.svgSupported) {\n      return;\n    }\n\n    var zr = this._zr;\n    var list = zr.storage.getDisplayList(); // Stop animations\n\n    each(list, function (el) {\n      el.stopAnimation(null, true);\n    });\n    return zr.painter.toDataURL();\n  };\n\n  ECharts.prototype.getDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    opts = opts || {};\n    var excludeComponents = opts.excludeComponents;\n    var ecModel = this._model;\n    var excludesComponentViews = [];\n    var self = this;\n    each(excludeComponents, function (componentType) {\n      ecModel.eachComponent({\n        mainType: componentType\n      }, function (component) {\n        var view = self._componentsMap[component.__viewId];\n\n        if (!view.group.ignore) {\n          excludesComponentViews.push(view);\n          view.group.ignore = true;\n        }\n      });\n    });\n    var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n    each(excludesComponentViews, function (view) {\n      view.group.ignore = false;\n    });\n    return url;\n  };\n\n  ECharts.prototype.getConnectedDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!env.canvasSupported) {\n      return;\n    }\n\n    var isSvg = opts.type === 'svg';\n    var groupId = this.group;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var MAX_NUMBER = Infinity;\n\n    if (connectedGroups[groupId]) {\n      var left_1 = MAX_NUMBER;\n      var top_1 = MAX_NUMBER;\n      var right_1 = -MAX_NUMBER;\n      var bottom_1 = -MAX_NUMBER;\n      var canvasList_1 = [];\n      var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\n      each(instances, function (chart, id) {\n        if (chart.group === groupId) {\n          var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.getRenderedCanvas(clone(opts));\n          var boundingRect = chart.getDom().getBoundingClientRect();\n          left_1 = mathMin(boundingRect.left, left_1);\n          top_1 = mathMin(boundingRect.top, top_1);\n          right_1 = mathMax(boundingRect.right, right_1);\n          bottom_1 = mathMax(boundingRect.bottom, bottom_1);\n          canvasList_1.push({\n            dom: canvas,\n            left: boundingRect.left,\n            top: boundingRect.top\n          });\n        }\n      });\n      left_1 *= dpr_1;\n      top_1 *= dpr_1;\n      right_1 *= dpr_1;\n      bottom_1 *= dpr_1;\n      var width = right_1 - left_1;\n      var height = bottom_1 - top_1;\n      var targetCanvas = createCanvas();\n      var zr_1 = zrender.init(targetCanvas, {\n        renderer: isSvg ? 'svg' : 'canvas'\n      });\n      zr_1.resize({\n        width: width,\n        height: height\n      });\n\n      if (isSvg) {\n        var content_1 = '';\n        each(canvasList_1, function (item) {\n          var x = item.left - left_1;\n          var y = item.top - top_1;\n          content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n        });\n        zr_1.painter.getSvgRoot().innerHTML = content_1;\n\n        if (opts.connectedBackgroundColor) {\n          zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\n        }\n\n        zr_1.refreshImmediately();\n        return zr_1.painter.toDataURL();\n      } else {\n        // Background between the charts\n        if (opts.connectedBackgroundColor) {\n          zr_1.add(new graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: width,\n              height: height\n            },\n            style: {\n              fill: opts.connectedBackgroundColor\n            }\n          }));\n        }\n\n        each(canvasList_1, function (item) {\n          var img = new graphic.Image({\n            style: {\n              x: item.left * dpr_1 - left_1,\n              y: item.top * dpr_1 - top_1,\n              image: item.dom\n            }\n          });\n          zr_1.add(img);\n        });\n        zr_1.refreshImmediately();\n        return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n      }\n    } else {\n      return this.getDataURL(opts);\n    }\n  };\n\n  ECharts.prototype.convertToPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertToPixel', finder, value);\n  };\n\n  ECharts.prototype.convertFromPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertFromPixel', finder, value);\n  };\n  /**\n   * Is the specified coordinate systems or components contain the given pixel point.\n   * @param {Array|number} value\n   * @return {boolean} result\n   */\n\n\n  ECharts.prototype.containPixel = function (finder, value) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var ecModel = this._model;\n    var result;\n    var findResult = modelUtil.parseFinder(ecModel, finder);\n    each(findResult, function (models, key) {\n      key.indexOf('Models') >= 0 && each(models, function (model) {\n        var coordSys = model.coordinateSystem;\n\n        if (coordSys && coordSys.containPoint) {\n          result = result || !!coordSys.containPoint(value);\n        } else if (key === 'seriesModels') {\n          var view = this._chartsMap[model.__viewId];\n\n          if (view && view.containPoint) {\n            result = result || view.containPoint(value, model);\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\n            }\n          }\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(key + ': containPoint is not supported');\n          }\n        }\n      }, this);\n    }, this);\n    return !!result;\n  };\n  /**\n   * Get visual from series or data.\n   * @param finder\n   *        If string, e.g., 'series', means {seriesIndex: 0}.\n   *        If Object, could contain some of these properties below:\n   *        {\n   *            seriesIndex / seriesId / seriesName,\n   *            dataIndex / dataIndexInside\n   *        }\n   *        If dataIndex is not specified, series visual will be fetched,\n   *        but not data item visual.\n   *        If all of seriesIndex, seriesId, seriesName are not specified,\n   *        visual will be fetched from first series.\n   * @param visualType 'color', 'symbol', 'symbolSize'\n   */\n\n\n  ECharts.prototype.getVisual = function (finder, visualType) {\n    var ecModel = this._model;\n    var parsedFinder = modelUtil.parseFinder(ecModel, finder, {\n      defaultMainType: 'series'\n    });\n    var seriesModel = parsedFinder.seriesModel;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!seriesModel) {\n        console.warn('There is no specified seires model');\n      }\n    }\n\n    var data = seriesModel.getData();\n    var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\n    return dataIndexInside != null ? getItemVisualFromData(data, dataIndexInside, visualType) : getVisualFromData(data, visualType);\n  };\n  /**\n   * Get view of corresponding component model\n   */\n\n\n  ECharts.prototype.getViewOfComponentModel = function (componentModel) {\n    return this._componentsMap[componentModel.__viewId];\n  };\n  /**\n   * Get view of corresponding series model\n   */\n\n\n  ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\n    return this._chartsMap[seriesModel.__viewId];\n  };\n\n  ECharts.prototype._initEvents = function () {\n    var _this = this;\n\n    each(MOUSE_EVENT_NAMES, function (eveName) {\n      var handler = function (e) {\n        var ecModel = _this.getModel();\n\n        var el = e.target;\n        var params;\n        var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n        if (isGlobalOut) {\n          params = {};\n        } else {\n          el && findEventDispatcher(el, function (parent) {\n            var ecData = getECData(parent);\n\n            if (ecData && ecData.dataIndex != null) {\n              var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\n              params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType) || {};\n              return true;\n            } // If element has custom eventData of components\n            else if (ecData.eventData) {\n              params = extend({}, ecData.eventData);\n              return true;\n            }\n          }, true);\n        } // Contract: if params prepared in mouse event,\n        // these properties must be specified:\n        // {\n        //    componentType: string (component main type)\n        //    componentIndex: number\n        // }\n        // Otherwise event query can not work.\n\n\n        if (params) {\n          var componentType = params.componentType;\n          var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n          // markLine/markPoint/markArea, the componentType is\n          // 'markLine'/'markPoint'/'markArea', but we should better\n          // enable them to be queried by seriesIndex, since their\n          // option is set in each series.\n\n          if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n            componentType = 'series';\n            componentIndex = params.seriesIndex;\n          }\n\n          var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n          var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n\n          if (process.env.NODE_ENV !== 'production') {\n            // `event.componentType` and `event[componentTpype + 'Index']` must not\n            // be missed, otherwise there is no way to distinguish source component.\n            // See `dataFormat.getDataParams`.\n            if (!isGlobalOut && !(model && view)) {\n              console.warn('model or view can not be found by params');\n            }\n          }\n\n          params.event = e;\n          params.type = eveName;\n          _this._$eventProcessor.eventInfo = {\n            targetEl: el,\n            packedEvent: params,\n            model: model,\n            view: view\n          };\n\n          _this.trigger(eveName, params);\n        }\n      }; // Consider that some component (like tooltip, brush, ...)\n      // register zr event handler, but user event handler might\n      // do anything, such as call `setOption` or `dispatchAction`,\n      // which probably update any of the content and probably\n      // cause problem if it is called previous other inner handlers.\n\n\n      handler.zrEventfulCallAtLast = true;\n\n      _this._zr.on(eveName, handler, _this);\n    });\n    each(eventActionMap, function (actionType, eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    }); // Extra events\n    // TODO register?\n\n    each(['selectchanged'], function (eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    });\n    handleLegacySelectEvents(this._messageCenter, this, this._api);\n  };\n\n  ECharts.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n\n  ECharts.prototype.clear = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this.setOption({\n      series: []\n    }, true);\n  };\n\n  ECharts.prototype.dispose = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._disposed = true;\n    modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n    var chart = this;\n    var api = chart._api;\n    var ecModel = chart._model;\n    each(chart._componentsViews, function (component) {\n      component.dispose(ecModel, api);\n    });\n    each(chart._chartsViews, function (chart) {\n      chart.dispose(ecModel, api);\n    }); // Dispose after all views disposed\n\n    chart._zr.dispose(); // Set properties to null.\n    // To reduce the memory cost in case the top code still holds this instance unexpectedly.\n\n\n    chart._dom = chart._model = chart._chartsMap = chart._componentsMap = chart._chartsViews = chart._componentsViews = chart._scheduler = chart._api = chart._zr = chart._throttledZrFlush = chart._theme = chart._coordSysMgr = chart._messageCenter = null;\n    delete instances[chart.id];\n  };\n  /**\n   * Resize the chart\n   */\n\n\n  ECharts.prototype.resize = function (opts) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!this[IN_MAIN_PROCESS_KEY], '`resize` should not be called during main process.');\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._zr.resize(opts);\n\n    var ecModel = this._model; // Resize loading effect\n\n    this._loadingFX && this._loadingFX.resize();\n\n    if (!ecModel) {\n      return;\n    }\n\n    var needPrepare = ecModel.resetOption('media');\n    var silent = opts && opts.silent; // There is some real cases that:\n    // chart.setOption(option, { lazyUpdate: true });\n    // chart.resize();\n\n    if (this[PENDING_UPDATE]) {\n      if (silent == null) {\n        silent = this[PENDING_UPDATE].silent;\n      }\n\n      needPrepare = true;\n      this[PENDING_UPDATE] = null;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n    needPrepare && prepare(this);\n    updateMethods.update.call(this, {\n      type: 'resize',\n      animation: extend({\n        // Disable animation\n        duration: 0\n      }, opts && opts.animation)\n    });\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.showLoading = function (name, cfg) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (isObject(name)) {\n      cfg = name;\n      name = '';\n    }\n\n    name = name || 'default';\n    this.hideLoading();\n\n    if (!loadingEffects[name]) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Loading effects ' + name + ' not exists.');\n      }\n\n      return;\n    }\n\n    var el = loadingEffects[name](this._api, cfg);\n    var zr = this._zr;\n    this._loadingFX = el;\n    zr.add(el);\n  };\n  /**\n   * Hide loading effect\n   */\n\n\n  ECharts.prototype.hideLoading = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._loadingFX && this._zr.remove(this._loadingFX);\n    this._loadingFX = null;\n  };\n\n  ECharts.prototype.makeActionFromEvent = function (eventObj) {\n    var payload = extend({}, eventObj);\n    payload.type = eventActionMap[eventObj.type];\n    return payload;\n  };\n  /**\n   * @param opt If pass boolean, means opt.silent\n   * @param opt.silent Default `false`. Whether trigger events.\n   * @param opt.flush Default `undefined`.\n   *        true: Flush immediately, and then pixel in canvas can be fetched\n   *            immediately. Caution: it might affect performance.\n   *        false: Not flush.\n   *        undefined: Auto decide whether perform flush.\n   */\n\n\n  ECharts.prototype.dispatchAction = function (payload, opt) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!isObject(opt)) {\n      opt = {\n        silent: !!opt\n      };\n    }\n\n    if (!actions[payload.type]) {\n      return;\n    } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n    if (!this._model) {\n      return;\n    } // May dispatchAction in rendering procedure\n\n\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      this._pendingActions.push(payload);\n\n      return;\n    }\n\n    var silent = opt.silent;\n    doDispatchAction.call(this, payload, silent);\n    var flush = opt.flush;\n\n    if (flush) {\n      this._zr.flush();\n    } else if (flush !== false && env.browser.weChat) {\n      // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n      // hang when sliding page (on touch event), which cause that zr does not\n      // refresh util user interaction finished, which is not expected.\n      // But `dispatchAction` may be called too frequently when pan on touch\n      // screen, which impacts performance if do not throttle them.\n      this._throttledZrFlush();\n    }\n\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.updateLabelLayout = function () {\n    lifecycle.trigger('series:layoutlabels', this._model, this._api, {\n      // Not adding series labels.\n      // TODO\n      updatedSeries: []\n    });\n  };\n\n  ECharts.prototype.appendData = function (params) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var seriesIndex = params.seriesIndex;\n    var ecModel = this.getModel();\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert(params.data && seriesModel);\n    }\n\n    seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n    // system, util some scenario require that. In the expected usage of\n    // `appendData`, the initial extent of coordinate system should better\n    // be fixed by axis `min`/`max` setting or initial data, otherwise if\n    // the extent changed while `appendData`, the location of the painted\n    // graphic elements have to be changed, which make the usage of\n    // `appendData` meaningless.\n\n    this._scheduler.unfinished = true;\n    this.getZr().wakeUp();\n  }; // A work around for no `internal` modifier in ts yet but\n  // need to strictly hide private methods to JS users.\n\n\n  ECharts.internalField = function () {\n    prepare = function (ecIns) {\n      var scheduler = ecIns._scheduler;\n      scheduler.restorePipelines(ecIns._model);\n      scheduler.prepareStageTasks();\n      prepareView(ecIns, true);\n      prepareView(ecIns, false);\n      scheduler.plan();\n    };\n    /**\n     * Prepare view instances of charts and components\n     */\n\n\n    prepareView = function (ecIns, isComponent) {\n      var ecModel = ecIns._model;\n      var scheduler = ecIns._scheduler;\n      var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n      var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n      var zr = ecIns._zr;\n      var api = ecIns._api;\n\n      for (var i = 0; i < viewList.length; i++) {\n        viewList[i].__alive = false;\n      }\n\n      isComponent ? ecModel.eachComponent(function (componentType, model) {\n        componentType !== 'series' && doPrepare(model);\n      }) : ecModel.eachSeries(doPrepare);\n\n      function doPrepare(model) {\n        // By defaut view will be reused if possible for the case that `setOption` with \"notMerge\"\n        // mode and need to enable transition animation. (Usually, when they have the same id, or\n        // especially no id but have the same type & name & index. See the `model.id` generation\n        // rule in `makeIdAndName` and `viewId` generation rule here).\n        // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\n        // the new model has nothing to do with the old model.\n        var requireNewView = model.__requireNewView; // This command should not work twice.\n\n        model.__requireNewView = false; // Consider: id same and type changed.\n\n        var viewId = '_ec_' + model.id + '_' + model.type;\n        var view = !requireNewView && viewMap[viewId];\n\n        if (!view) {\n          var classType = parseClassType(model.type);\n          var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : // FIXME:TS\n          // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\n          // For backward compat, still support a chart type declared as only subType\n          // like \"liquidfill\", but recommend \"series.liquidfill\"\n          // But need a base class to make a type series.\n          ChartView.getClass(classType.sub);\n\n          if (process.env.NODE_ENV !== 'production') {\n            assert(Clazz, classType.sub + ' does not exist.');\n          }\n\n          view = new Clazz();\n          view.init(ecModel, api);\n          viewMap[viewId] = view;\n          viewList.push(view);\n          zr.add(view.group);\n        }\n\n        model.__viewId = view.__id = viewId;\n        view.__alive = true;\n        view.__model = model;\n        view.group.__ecComponentInfo = {\n          mainType: model.mainType,\n          index: model.componentIndex\n        };\n        !isComponent && scheduler.prepareView(view, model, ecModel, api);\n      }\n\n      for (var i = 0; i < viewList.length;) {\n        var view = viewList[i];\n\n        if (!view.__alive) {\n          !isComponent && view.renderTask.dispose();\n          zr.remove(view.group);\n          view.dispose(ecModel, api);\n          viewList.splice(i, 1);\n\n          if (viewMap[view.__id] === view) {\n            delete viewMap[view.__id];\n          }\n\n          view.__id = view.group.__ecComponentInfo = null;\n        } else {\n          i++;\n        }\n      }\n    };\n\n    updateDirectly = function (ecIns, method, payload, mainType, subType) {\n      var ecModel = ecIns._model;\n      ecModel.setUpdatePayload(payload); // broadcast\n\n      if (!mainType) {\n        // FIXME\n        // Chart will not be update directly here, except set dirty.\n        // But there is no such scenario now.\n        each([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\n        return;\n      }\n\n      var query = {};\n      query[mainType + 'Id'] = payload[mainType + 'Id'];\n      query[mainType + 'Index'] = payload[mainType + 'Index'];\n      query[mainType + 'Name'] = payload[mainType + 'Name'];\n      var condition = {\n        mainType: mainType,\n        query: query\n      };\n      subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n      var excludeSeriesId = payload.excludeSeriesId;\n      var excludeSeriesIdMap;\n\n      if (excludeSeriesId != null) {\n        excludeSeriesIdMap = createHashMap();\n        each(modelUtil.normalizeToArray(excludeSeriesId), function (id) {\n          var modelId = modelUtil.convertOptionIdName(id, null);\n\n          if (modelId != null) {\n            excludeSeriesIdMap.set(modelId, true);\n          }\n        });\n      }\n\n      if (isHighDownPayload(payload)) {\n        allLeaveBlur(ecIns._api);\n      } // If dispatchAction before setOption, do nothing.\n\n\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) !== null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n\n        if (isHighDownPayload(payload)) {\n          if (model instanceof SeriesModel) {\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && !payload.notBlur) {\n              blurSeriesFromHighlightPayload(model, payload, ecIns._api);\n            }\n          } else {\n            var _a = findComponentHighDownDispatchers(model.mainType, model.componentIndex, payload.name, ecIns._api),\n                focusSelf = _a.focusSelf,\n                dispatchers = _a.dispatchers;\n\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && focusSelf && !payload.notBlur) {\n              blurComponent(model.mainType, model.componentIndex, ecIns._api);\n            } // PENDING:\n            // Whether to put this \"enter emphasis\" code in `ComponentView`,\n            // which will be the same as `ChartView` but might be not necessary\n            // and will be far from this logic.\n\n\n            if (dispatchers) {\n              each(dispatchers, function (dispatcher) {\n                payload.type === HIGHLIGHT_ACTION_TYPE ? enterEmphasis(dispatcher) : leaveEmphasis(dispatcher);\n              });\n            }\n          }\n        } else if (isSelectChangePayload(payload)) {\n          // TODO geo\n          if (model instanceof SeriesModel) {\n            toggleSelectionFromPayload(model, payload, ecIns._api);\n            updateSeriesElementSelection(model);\n            markStatusToUpdate(ecIns);\n          }\n        }\n      }, ecIns);\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) !== null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n        callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n      }, ecIns);\n\n      function callView(view) {\n        view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n      }\n    };\n\n    updateMethods = {\n      prepareAndUpdate: function (payload) {\n        prepare(this);\n        updateMethods.update.call(this, payload, {\n          // Needs to mark option changed if newOption is given.\n          // It's from MagicType.\n          // TODO If use a separate flag optionChanged in payload?\n          optionChanged: payload.newOption != null\n        });\n      },\n      update: function (payload, updateParams) {\n        var ecModel = this._model;\n        var api = this._api;\n        var zr = this._zr;\n        var coordSysMgr = this._coordSysMgr;\n        var scheduler = this._scheduler; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        scheduler.restoreData(ecModel, payload);\n        scheduler.performSeriesTasks(ecModel); // TODO\n        // Save total ecModel here for undo/redo (after restoring data and before processing data).\n        // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n        // Create new coordinate system each update\n        // In LineView may save the old coordinate system and use it to get the orignal point\n\n        coordSysMgr.create(ecModel, api);\n        scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n        // stream modes after data processing, where the filtered data is used to\n        // deteming whether use progressive rendering.\n\n        updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n        // can be fetched when coord sys updating (consider the barGrid extent fix). But\n        // the drawback is the full coord info can not be fetched. Fortunately this full\n        // coord is not requied in stream mode updater currently.\n\n        coordSysMgr.update(ecModel, api);\n        clearColorPalette(ecModel);\n        scheduler.performVisualTasks(ecModel, payload);\n        render(this, ecModel, api, payload, updateParams); // Set background\n\n        var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n        var darkMode = ecModel.get('darkMode'); // In IE8\n\n        if (!env.canvasSupported) {\n          var colorArr = colorTool.parse(backgroundColor);\n          backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n          if (colorArr[3] === 0) {\n            backgroundColor = 'transparent';\n          }\n        } else {\n          zr.setBackgroundColor(backgroundColor); // Force set dark mode.\n\n          if (darkMode != null && darkMode !== 'auto') {\n            zr.setDarkMode(darkMode);\n          }\n        }\n\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateTransform: function (payload) {\n        var _this = this;\n\n        var ecModel = this._model;\n        var api = this._api; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n        var componentDirtyList = [];\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType === 'series') {\n            return;\n          }\n\n          var componentView = _this.getViewOfComponentModel(componentModel);\n\n          if (componentView && componentView.__alive) {\n            if (componentView.updateTransform) {\n              var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n              result && result.update && componentDirtyList.push(componentView);\n            } else {\n              componentDirtyList.push(componentView);\n            }\n          }\n        });\n        var seriesDirtyMap = createHashMap();\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n\n          if (chartView.updateTransform) {\n            var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n            result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n          } else {\n            seriesDirtyMap.set(seriesModel.uid, 1);\n          }\n        });\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true,\n          dirtyMap: seriesDirtyMap\n        }); // Currently, not call render of components. Geo render cost a lot.\n        // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n        renderSeries(this, ecModel, api, payload, {}, seriesDirtyMap);\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateView: function (payload) {\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        ChartView.markUpdateMethod(payload, 'updateView');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true\n        });\n\n        render(this, ecModel, this._api, payload, {});\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateVisual: function (payload) {\n        // updateMethods.update.call(this, payload);\n        var _this = this;\n\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // clear all visual\n\n        ecModel.eachSeries(function (seriesModel) {\n          seriesModel.getData().clearAllVisual();\n        }); // Perform visual\n\n        ChartView.markUpdateMethod(payload, 'updateVisual');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          visualType: 'visual',\n          setDirty: true\n        });\n\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType !== 'series') {\n            var componentView = _this.getViewOfComponentModel(componentModel);\n\n            componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\n          }\n        });\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\n        });\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateLayout: function (payload) {\n        updateMethods.update.call(this, payload);\n      }\n    };\n\n    doConvertPixel = function (ecIns, methodName, finder, value) {\n      if (ecIns._disposed) {\n        disposedWarning(ecIns.id);\n        return;\n      }\n\n      var ecModel = ecIns._model;\n\n      var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\n\n      var result;\n      var parsedFinder = modelUtil.parseFinder(ecModel, finder);\n\n      for (var i = 0; i < coordSysList.length; i++) {\n        var coordSys = coordSysList[i];\n\n        if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value)) != null) {\n          return result;\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\n      }\n    };\n\n    updateStreamModes = function (ecIns, ecModel) {\n      var chartsMap = ecIns._chartsMap;\n      var scheduler = ecIns._scheduler;\n      ecModel.eachSeries(function (seriesModel) {\n        scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n      });\n    };\n\n    doDispatchAction = function (payload, silent) {\n      var _this = this;\n\n      var ecModel = this.getModel();\n      var payloadType = payload.type;\n      var escapeConnect = payload.escapeConnect;\n      var actionWrap = actions[payloadType];\n      var actionInfo = actionWrap.actionInfo;\n      var cptTypeTmp = (actionInfo.update || 'update').split(':');\n      var updateMethod = cptTypeTmp.pop();\n      var cptType = cptTypeTmp[0] != null && parseClassType(cptTypeTmp[0]);\n      this[IN_MAIN_PROCESS_KEY] = true;\n      var payloads = [payload];\n      var batched = false; // Batch action\n\n      if (payload.batch) {\n        batched = true;\n        payloads = map(payload.batch, function (item) {\n          item = defaults(extend({}, item), payload);\n          item.batch = null;\n          return item;\n        });\n      }\n\n      var eventObjBatch = [];\n      var eventObj;\n      var isSelectChange = isSelectChangePayload(payload);\n      var isHighDown = isHighDownPayload(payload);\n      each(payloads, function (batchItem) {\n        // Action can specify the event by return it.\n        eventObj = actionWrap.action(batchItem, _this._model, _this._api); // Emit event outside\n\n        eventObj = eventObj || extend({}, batchItem); // Convert type to eventType\n\n        eventObj.type = actionInfo.event || eventObj.type;\n        eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n        if (isHighDown) {\n          var _a = modelUtil.preParseFinder(payload),\n              queryOptionMap = _a.queryOptionMap,\n              mainTypeSpecified = _a.mainTypeSpecified;\n\n          var componentMainType = mainTypeSpecified ? queryOptionMap.keys()[0] : 'series';\n          updateDirectly(_this, updateMethod, batchItem, componentMainType);\n          markStatusToUpdate(_this);\n        } else if (isSelectChange) {\n          // At present `dispatchAction({ type: 'select', ... })` is not supported on components.\n          // geo still use 'geoselect'.\n          updateDirectly(_this, updateMethod, batchItem, 'series');\n          markStatusToUpdate(_this);\n        } else if (cptType) {\n          updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\n        }\n      });\n\n      if (updateMethod !== 'none' && !isHighDown && !isSelectChange && !cptType) {\n        // Still dirty\n        if (this[PENDING_UPDATE]) {\n          prepare(this);\n          updateMethods.update.call(this, payload);\n          this[PENDING_UPDATE] = null;\n        } else {\n          updateMethods[updateMethod].call(this, payload);\n        }\n      } // Follow the rule of action batch\n\n\n      if (batched) {\n        eventObj = {\n          type: actionInfo.event || payloadType,\n          escapeConnect: escapeConnect,\n          batch: eventObjBatch\n        };\n      } else {\n        eventObj = eventObjBatch[0];\n      }\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n\n      if (!silent) {\n        var messageCenter = this._messageCenter;\n        messageCenter.trigger(eventObj.type, eventObj); // Extra triggered 'selectchanged' event\n\n        if (isSelectChange) {\n          var newObj = {\n            type: 'selectchanged',\n            escapeConnect: escapeConnect,\n            selected: getAllSelectedIndices(ecModel),\n            isFromClick: payload.isFromClick || false,\n            fromAction: payload.type,\n            fromActionPayload: payload\n          };\n          messageCenter.trigger(newObj.type, newObj);\n        }\n      }\n    };\n\n    flushPendingActions = function (silent) {\n      var pendingActions = this._pendingActions;\n\n      while (pendingActions.length) {\n        var payload = pendingActions.shift();\n        doDispatchAction.call(this, payload, silent);\n      }\n    };\n\n    triggerUpdatedEvent = function (silent) {\n      !silent && this.trigger('updated');\n    };\n    /**\n     * Event `rendered` is triggered when zr\n     * rendered. It is useful for realtime\n     * snapshot (reflect animation).\n     *\n     * Event `finished` is triggered when:\n     * (1) zrender rendering finished.\n     * (2) initial animation finished.\n     * (3) progressive rendering finished.\n     * (4) no pending action.\n     * (5) no delayed setOption needs to be processed.\n     */\n\n\n    bindRenderedEvent = function (zr, ecIns) {\n      zr.on('rendered', function (params) {\n        ecIns.trigger('rendered', params); // The `finished` event should not be triggered repeatly,\n        // so it should only be triggered when rendering indeed happend\n        // in zrender. (Consider the case that dipatchAction is keep\n        // triggering when mouse move).\n\n        if ( // Although zr is dirty if initial animation is not finished\n        // and this checking is called on frame, we also check\n        // animation finished for robustness.\n        zr.animation.isFinished() && !ecIns[PENDING_UPDATE] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n          ecIns.trigger('finished');\n        }\n      });\n    };\n\n    bindMouseEvent = function (zr, ecIns) {\n      zr.on('mouseover', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlobalMouseOverForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('mouseout', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlboalMouseOutForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('click', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, function (target) {\n          return getECData(target).dataIndex != null;\n        }, true);\n\n        if (dispatcher) {\n          var actionType = dispatcher.selected ? 'unselect' : 'select';\n          var ecData = getECData(dispatcher);\n\n          ecIns._api.dispatchAction({\n            type: actionType,\n            dataType: ecData.dataType,\n            dataIndexInside: ecData.dataIndex,\n            seriesIndex: ecData.seriesIndex,\n            isFromClick: true\n          });\n        }\n      });\n    };\n\n    clearColorPalette = function (ecModel) {\n      ecModel.clearColorPalette();\n      ecModel.eachSeries(function (seriesModel) {\n        seriesModel.clearColorPalette();\n      });\n    };\n\n    render = function (ecIns, ecModel, api, payload, updateParams) {\n      renderComponents(ecIns, ecModel, api, payload, updateParams);\n      each(ecIns._chartsViews, function (chart) {\n        chart.__alive = false;\n      });\n      renderSeries(ecIns, ecModel, api, payload, updateParams); // Remove groups of unrendered charts\n\n      each(ecIns._chartsViews, function (chart) {\n        if (!chart.__alive) {\n          chart.remove(ecModel, api);\n        }\n      });\n    };\n\n    renderComponents = function (ecIns, ecModel, api, payload, updateParams, dirtyList) {\n      each(dirtyList || ecIns._componentsViews, function (componentView) {\n        var componentModel = componentView.__model;\n        clearStates(componentModel, componentView);\n        componentView.render(componentModel, ecModel, api, payload);\n        updateZ(componentModel, componentView);\n        updateStates(componentModel, componentView);\n      });\n    };\n    /**\n     * Render each chart and component\n     */\n\n\n    renderSeries = function (ecIns, ecModel, api, payload, updateParams, dirtyMap) {\n      // Render all charts\n      var scheduler = ecIns._scheduler;\n      updateParams = extend(updateParams || {}, {\n        updatedSeries: ecModel.getSeries()\n      }); // TODO progressive?\n\n      lifecycle.trigger('series:beforeupdate', ecModel, api, updateParams);\n      var unfinished = false;\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        chartView.__alive = true;\n        var renderTask = chartView.renderTask;\n        scheduler.updatePayload(renderTask, payload); // TODO states on marker.\n\n        clearStates(seriesModel, chartView);\n\n        if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n          renderTask.dirty();\n        }\n\n        if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\n          unfinished = true;\n        }\n\n        chartView.group.silent = !!seriesModel.get('silent'); // Should not call markRedraw on group, because it will disable zrender\n        // increamental render (alway render from the __startIndex each frame)\n        // chartView.group.markRedraw();\n\n        updateBlend(seriesModel, chartView);\n        updateSeriesElementSelection(seriesModel);\n      });\n      scheduler.unfinished = unfinished || scheduler.unfinished;\n      lifecycle.trigger('series:layoutlabels', ecModel, api, updateParams); // transition after label is layouted.\n\n      lifecycle.trigger('series:transition', ecModel, api, updateParams);\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId]; // Update Z after labels updated. Before applying states.\n\n        updateZ(seriesModel, chartView); // NOTE: Update states after label is updated.\n        // label should be in normal status when layouting.\n\n        updateStates(seriesModel, chartView);\n      }); // If use hover layer\n\n      updateHoverLayerStatus(ecIns, ecModel);\n      lifecycle.trigger('series:afterupdate', ecModel, api, updateParams);\n    };\n\n    markStatusToUpdate = function (ecIns) {\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = true; // Wake up zrender if it's sleep. Let it update states in the next frame.\n\n      ecIns.getZr().wakeUp();\n    };\n\n    applyChangedStates = function (ecIns) {\n      if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\n        return;\n      }\n\n      ecIns.getZr().storage.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        applyElementStates(el);\n      });\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\n    };\n\n    function applyElementStates(el) {\n      var newStates = [];\n      var oldStates = el.currentStates; // Keep other states.\n\n      for (var i = 0; i < oldStates.length; i++) {\n        var stateName = oldStates[i];\n\n        if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\n          newStates.push(stateName);\n        }\n      } // Only use states when it's exists.\n\n\n      if (el.selected && el.states.select) {\n        newStates.push('select');\n      }\n\n      if (el.hoverState === HOVER_STATE_EMPHASIS && el.states.emphasis) {\n        newStates.push('emphasis');\n      } else if (el.hoverState === HOVER_STATE_BLUR && el.states.blur) {\n        newStates.push('blur');\n      }\n\n      el.useStates(newStates);\n    }\n\n    function updateHoverLayerStatus(ecIns, ecModel) {\n      var zr = ecIns._zr;\n      var storage = zr.storage;\n      var elCount = 0;\n      storage.traverse(function (el) {\n        if (!el.isGroup) {\n          elCount++;\n        }\n      });\n\n      if (elCount > ecModel.get('hoverLayerThreshold') && !env.node && !env.worker) {\n        ecModel.eachSeries(function (seriesModel) {\n          if (seriesModel.preventUsingHoverLayer) {\n            return;\n          }\n\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n          if (chartView.__alive) {\n            chartView.group.traverse(function (el) {\n              if (el.states.emphasis) {\n                el.states.emphasis.hoverLayer = true;\n              }\n            });\n          }\n        });\n      }\n    }\n\n    ;\n    /**\n     * Update chart and blend.\n     */\n\n    function updateBlend(seriesModel, chartView) {\n      var blendMode = seriesModel.get('blendMode') || null;\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n          console.warn('Only canvas support blendMode');\n        }\n      }\n\n      chartView.group.traverse(function (el) {\n        // FIXME marker and other components\n        if (!el.isGroup) {\n          // DONT mark the element dirty. In case element is incremental and don't wan't to rerender.\n          el.style.blend = blendMode;\n        }\n\n        if (el.eachPendingDisplayable) {\n          el.eachPendingDisplayable(function (displayable) {\n            displayable.style.blend = blendMode;\n          });\n        }\n      });\n    }\n\n    ;\n\n    function updateZ(model, view) {\n      if (model.preventAutoZ) {\n        return;\n      } // Set z and zlevel\n\n\n      _updateZ(view.group, model.get('z') || 0, model.get('zlevel') || 0, -Infinity);\n    }\n\n    ;\n\n    function _updateZ(el, z, zlevel, maxZ2) {\n      // Group may also have textContent\n      var label = el.getTextContent();\n      var labelLine = el.getTextGuideLine();\n      var isGroup = el.isGroup;\n\n      if (isGroup) {\n        // set z & zlevel of children elements of Group\n        // el.traverse((childEl: Element) => _updateZ(childEl, z, zlevel));\n        var children = el.childrenRef();\n\n        for (var i = 0; i < children.length; i++) {\n          maxZ2 = Math.max(_updateZ(children[i], z, zlevel, maxZ2), maxZ2);\n        }\n      } else {\n        // not Group\n        el.z = z;\n        el.zlevel = zlevel;\n        maxZ2 = Math.max(el.z2, maxZ2);\n      } // always set z and zlevel if label/labelLine exists\n\n\n      if (label) {\n        label.z = z;\n        label.zlevel = zlevel; // lift z2 of text content\n        // TODO if el.emphasis.z2 is spcefied, what about textContent.\n\n        isFinite(maxZ2) && (label.z2 = maxZ2 + 2);\n      }\n\n      if (labelLine) {\n        var textGuideLineConfig = el.textGuideLineConfig;\n        labelLine.z = z;\n        labelLine.zlevel = zlevel;\n        isFinite(maxZ2) && (labelLine.z2 = maxZ2 + (textGuideLineConfig && textGuideLineConfig.showAbove ? 1 : -1));\n      }\n\n      return maxZ2;\n    } // Clear states without animation.\n    // TODO States on component.\n\n\n    function clearStates(model, view) {\n      view.group.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        var textContent = el.getTextContent();\n        var textGuide = el.getTextGuideLine();\n\n        if (el.stateTransition) {\n          el.stateTransition = null;\n        }\n\n        if (textContent && textContent.stateTransition) {\n          textContent.stateTransition = null;\n        }\n\n        if (textGuide && textGuide.stateTransition) {\n          textGuide.stateTransition = null;\n        } // TODO If el is incremental.\n\n\n        if (el.hasState()) {\n          el.prevStates = el.currentStates;\n          el.clearStates();\n        } else if (el.prevStates) {\n          el.prevStates = null;\n        }\n      });\n    }\n\n    function updateStates(model, view) {\n      var stateAnimationModel = model.getModel('stateAnimation');\n      var enableAnimation = model.isAnimationEnabled();\n      var duration = stateAnimationModel.get('duration');\n      var stateTransition = duration > 0 ? {\n        duration: duration,\n        delay: stateAnimationModel.get('delay'),\n        easing: stateAnimationModel.get('easing') // additive: stateAnimationModel.get('additive')\n\n      } : null;\n      view.group.traverse(function (el) {\n        if (el.states && el.states.emphasis) {\n          // Not applied on removed elements, it may still in fading.\n          if (graphic.isElementRemoved(el)) {\n            return;\n          }\n\n          if (el instanceof graphic.Path) {\n            savePathStates(el);\n          } // Only updated on changed element. In case element is incremental and don't wan't to rerender.\n          // TODO, a more proper way?\n\n\n          if (el.__dirty) {\n            var prevStates = el.prevStates; // Restore states without animation\n\n            if (prevStates) {\n              el.useStates(prevStates);\n            }\n          } // Update state transition and enable animation again.\n\n\n          if (enableAnimation) {\n            el.stateTransition = stateTransition;\n            var textContent = el.getTextContent();\n            var textGuide = el.getTextGuideLine(); // TODO Is it necessary to animate label?\n\n            if (textContent) {\n              textContent.stateTransition = stateTransition;\n            }\n\n            if (textGuide) {\n              textGuide.stateTransition = stateTransition;\n            }\n          } // The use higlighted and selected flag to toggle states.\n\n\n          if (el.__dirty) {\n            applyElementStates(el);\n          }\n        }\n      });\n    }\n\n    ;\n\n    createExtensionAPI = function (ecIns) {\n      return new (\n      /** @class */\n      function (_super) {\n        __extends(class_1, _super);\n\n        function class_1() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        class_1.prototype.getCoordinateSystems = function () {\n          return ecIns._coordSysMgr.getCoordinateSystems();\n        };\n\n        class_1.prototype.getComponentByElement = function (el) {\n          while (el) {\n            var modelInfo = el.__ecComponentInfo;\n\n            if (modelInfo != null) {\n              return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\n            }\n\n            el = el.parent;\n          }\n        };\n\n        class_1.prototype.enterEmphasis = function (el, highlightDigit) {\n          enterEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\n          leaveEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterBlur = function (el) {\n          enterBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveBlur = function (el) {\n          leaveBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterSelect = function (el) {\n          enterSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveSelect = function (el) {\n          leaveSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.getModel = function () {\n          return ecIns.getModel();\n        };\n\n        class_1.prototype.getViewOfComponentModel = function (componentModel) {\n          return ecIns.getViewOfComponentModel(componentModel);\n        };\n\n        class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\n          return ecIns.getViewOfSeriesModel(seriesModel);\n        };\n\n        return class_1;\n      }(ExtensionAPI))(ecIns);\n    };\n\n    enableConnect = function (chart) {\n      function updateConnectedChartsStatus(charts, status) {\n        for (var i = 0; i < charts.length; i++) {\n          var otherChart = charts[i];\n          otherChart[CONNECT_STATUS_KEY] = status;\n        }\n      }\n\n      each(eventActionMap, function (actionType, eventType) {\n        chart._messageCenter.on(eventType, function (event) {\n          if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\n            if (event && event.escapeConnect) {\n              return;\n            }\n\n            var action_1 = chart.makeActionFromEvent(event);\n            var otherCharts_1 = [];\n            each(instances, function (otherChart) {\n              if (otherChart !== chart && otherChart.group === chart.group) {\n                otherCharts_1.push(otherChart);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\n            each(otherCharts_1, function (otherChart) {\n              if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\n                otherChart.dispatchAction(action_1);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\n          }\n        });\n      });\n    };\n  }();\n\n  return ECharts;\n}(Eventful);\n\nvar echartsProto = ECharts.prototype;\nechartsProto.on = createRegisterEventWithLowercaseECharts('on');\nechartsProto.off = createRegisterEventWithLowercaseECharts('off');\n/**\n * @deprecated\n */\n// @ts-ignore\n\nechartsProto.one = function (eventName, cb, ctx) {\n  var self = this;\n  deprecateLog('ECharts#one is deprecated.');\n\n  function wrapped() {\n    var args2 = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args2[_i] = arguments[_i];\n    }\n\n    cb && cb.apply && cb.apply(this, args2); // @ts-ignore\n\n    self.off(eventName, wrapped);\n  }\n\n  ; // @ts-ignore\n\n  this.on.call(this, eventName, wrapped, ctx);\n}; // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         let isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n\nfunction disposedWarning(id) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('Instance ' + id + ' has been disposed');\n  }\n}\n\nvar actions = {};\n/**\n * Map eventType to actionType\n */\n\nvar eventActionMap = {};\nvar dataProcessorFuncs = [];\nvar optionPreprocessorFuncs = [];\nvar visualFuncs = [];\nvar themeStorage = {};\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = +new Date() - 0;\nvar groupIdBase = +new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n/**\n * @param opts.devicePixelRatio Use window.devicePixelRatio by default\n * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\n * @param opts.width Use clientWidth of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.height Use clientHeight of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.locale Specify the locale.\n * @param opts.useDirtyRect Enable dirty rectangle rendering or not.\n */\n\nexport function init(dom, theme, opts) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!dom) {\n      throw new Error('Initialize failed: invalid dom.');\n    }\n  }\n\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('There is a chart instance already initialized on the dom.');\n    }\n\n    return existInstance;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\n      console.warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\n    }\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  lifecycle.trigger('afterinit', chart);\n  return chart;\n}\n/**\n * @usage\n * (A)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * chart1.group = 'xxx';\n * chart2.group = 'xxx';\n * echarts.connect('xxx');\n * ```\n * (B)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * echarts.connect('xxx', [chart1, chart2]);\n * ```\n */\n\nexport function connect(groupId) {\n  // Is array of charts\n  if (isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @deprecated\n */\n\nexport function disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * Alias and backword compat\n */\n\nexport var disconnect = disConnect;\n/**\n * Dispose a chart instance\n */\n\nexport function dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\nexport function getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\nexport function getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\nexport function registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n */\n\nexport function registerPreprocessor(preprocessorFunc) {\n  if (indexOf(optionPreprocessorFuncs, preprocessorFunc) < 0) {\n    optionPreprocessorFuncs.push(preprocessorFunc);\n  }\n}\nexport function registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\n}\n/**\n * Register postIniter\n * @param {Function} postInitFunc\n */\n\nexport function registerPostInit(postInitFunc) {\n  registerUpdateLifecycle('afterinit', postInitFunc);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\nexport function registerPostUpdate(postUpdateFunc) {\n  registerUpdateLifecycle('afterupdate', postUpdateFunc);\n}\nexport function registerUpdateLifecycle(name, cb) {\n  lifecycle.on(name, cb);\n}\nexport function registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event;\n\n  if (eventActionMap[eventName]) {\n    // Already registered.\n    return;\n  } // Validate action type and event name.\n\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\nexport function registerCoordinateSystem(type, coordSysCreator) {\n  CoordinateSystemManager.register(type, coordSysCreator);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\nexport function getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\nexport { registerLocale } from './locale';\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n\nexport { registerLayout, registerVisual };\nvar registeredTasks = [];\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNaN(priority) || priority == null) {\n      throw new Error('Illegal priority');\n    } // Check duplicate\n\n\n    each(targetList, function (wrap) {\n      assert(wrap.__raw !== fn);\n    });\n  } // Already registered\n\n\n  if (indexOf(registeredTasks, fn) >= 0) {\n    return;\n  }\n\n  registeredTasks.push(fn);\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n}\n\nexport function registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @example\n *     let Canvas = require('canvas');\n *     let echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\nexport function setCanvasCreator(creator) {\n  $override('createCanvas', creator);\n}\n/**\n * The parameters and usage: see `geoSourceManager.registerMap`.\n * Compatible with previous `echarts.registerMap`.\n */\n\nexport function registerMap(mapName, geoJson, specialAreas) {\n  geoSourceManager.registerMap(mapName, geoJson, specialAreas);\n}\nexport function getMap(mapName) {\n  return geoSourceManager.getMapForUser(mapName);\n}\nexport var registerTransform = registerExternalTransform;\n/**\n * Globa dispatchAction to a specified chart instance.\n */\n// export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\n//     if (!payload || !payload.chartId) {\n//         // Must have chartId to find chart\n//         return;\n//     }\n//     const chart = instances[payload.chartId];\n//     if (chart) {\n//         chart.dispatchAction(payload, opt);\n//     }\n// }\n// Buitlin global visual\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataColorPaletteTask);\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesSymbolTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataSymbolTask);\nregisterVisual(PRIORITY_VISUAL_DECAL, decal);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: HIGHLIGHT_ACTION_TYPE,\n  event: HIGHLIGHT_ACTION_TYPE,\n  update: HIGHLIGHT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: DOWNPLAY_ACTION_TYPE,\n  event: DOWNPLAY_ACTION_TYPE,\n  update: DOWNPLAY_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: SELECT_ACTION_TYPE,\n  event: SELECT_ACTION_TYPE,\n  update: SELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: UNSELECT_ACTION_TYPE,\n  event: UNSELECT_ACTION_TYPE,\n  update: UNSELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: TOGGLE_SELECT_ACTION_TYPE,\n  event: TOGGLE_SELECT_ACTION_TYPE,\n  update: TOGGLE_SELECT_ACTION_TYPE\n}, noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nexport var dataTool = {};","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/core/echarts.js"],"names":["__extends","zrender","assert","each","isFunction","isObject","indexOf","bind","clone","setAsPrimitive","createCanvas","extend","createHashMap","map","defaults","isDom","isArray","$override","noop","colorTool","env","timsort","Eventful","GlobalModel","ExtensionAPI","CoordinateSystemManager","OptionManager","backwardCompat","dataStack","SeriesModel","ComponentView","ChartView","graphic","getECData","isHighDownDispatcher","HOVER_STATE_EMPHASIS","HOVER_STATE_BLUR","blurSeriesFromHighlightPayload","toggleSelectionFromPayload","updateSeriesElementSelection","getAllSelectedIndices","isSelectChangePayload","isHighDownPayload","HIGHLIGHT_ACTION_TYPE","DOWNPLAY_ACTION_TYPE","SELECT_ACTION_TYPE","UNSELECT_ACTION_TYPE","TOGGLE_SELECT_ACTION_TYPE","savePathStates","enterEmphasis","leaveEmphasis","leaveBlur","enterSelect","leaveSelect","enterBlur","allLeaveBlur","findComponentHighDownDispatchers","blurComponent","handleGlobalMouseOverForHighDown","handleGlboalMouseOutForHighDown","modelUtil","throttle","seriesStyleTask","dataStyleTask","dataColorPaletteTask","loadingDefault","Scheduler","lightTheme","darkTheme","parseClassType","ECEventProcessor","seriesSymbolTask","dataSymbolTask","getVisualFromData","getItemVisualFromData","deprecateLog","handleLegacySelectEvents","registerExternalTransform","createLocaleObject","SYSTEM_LANG","findEventDispatcher","decal","geoSourceManager","lifecycle","hasWindow","window","version","dependencies","TEST_FRAME_REMAIN_TIME","PRIORITY_PROCESSOR_SERIES_FILTER","PRIORITY_PROCESSOR_DATASTACK","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_DEFAULT","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_PROGRESSIVE_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_CHART_DATA_CUSTOM","PRIORITY_VISUAL_POST_CHART_LAYOUT","PRIORITY_VISUAL_BRUSH","PRIORITY_VISUAL_ARIA","PRIORITY_VISUAL_DECAL","PRIORITY","PROCESSOR","FILTER","SERIES_FILTER","STATISTIC","VISUAL","LAYOUT","PROGRESSIVE_LAYOUT","GLOBAL","CHART","POST_CHART_LAYOUT","COMPONENT","BRUSH","CHART_ITEM","ARIA","DECAL","IN_MAIN_PROCESS_KEY","PENDING_UPDATE","STATUS_NEEDS_UPDATE_KEY","ACTION_REG","CONNECT_STATUS_KEY","CONNECT_STATUS_PENDING","CONNECT_STATUS_UPDATING","CONNECT_STATUS_UPDATED","createRegisterEventWithLowercaseECharts","method","args","_i","arguments","length","isDisposed","disposedWarning","id","toLowercaseNameAndCallEventful","createRegisterEventWithLowercaseMessageCenter","host","toLowerCase","prototype","apply","MessageCenter","_super","messageCenterProto","on","off","prepare","prepareView","updateDirectly","updateMethods","doConvertPixel","updateStreamModes","doDispatchAction","flushPendingActions","triggerUpdatedEvent","bindRenderedEvent","bindMouseEvent","clearColorPalette","render","renderComponents","renderSeries","createExtensionAPI","enableConnect","markStatusToUpdate","applyChangedStates","ECharts","dom","theme","opts","_this","call","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_pendingActions","themeStorage","_dom","defaultRenderer","defaultUseDirtyRect","process","NODE_ENV","root","global","__ECHARTS__DEFAULT__RENDERER__","devUseDirtyRect","__ECHARTS__DEFAULT__USE_DIRTY_RECT__","zr","_zr","init","renderer","devicePixelRatio","width","height","useDirtyRect","_throttledZrFlush","flush","_theme","_locale","locale","_coordSysMgr","api","_api","prioritySortFunc","a","b","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_initEvents","resize","animation","_onframe","_disposed","scheduler","silent","update","updateParams","unfinished","remainTime","ecModel","_model","startTime","Date","performSeriesTasks","performDataProcessorTasks","performVisualTasks","getDom","getId","getZr","setOption","option","notMerge","lazyUpdate","replaceMerge","transitionOpt","transition","optionManager","optionPreprocessorFuncs","seriesTransition","optionChanged","wakeUp","setTheme","console","error","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","canvasSupported","backgroundColor","get","pixelRatio","getSvgDataURL","svgSupported","list","storage","getDisplayList","el","stopAnimation","toDataURL","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","mainType","component","view","__viewId","group","ignore","push","url","getType","type","getConnectedDataURL","isSvg","groupId","mathMin","Math","min","mathMax","max","MAX_NUMBER","Infinity","connectedGroups","left_1","top_1","right_1","bottom_1","canvasList_1","dpr_1","instances","chart","canvas","getSvgDom","innerHTML","boundingRect","getBoundingClientRect","left","top","right","bottom","targetCanvas","zr_1","content_1","item","x","y","getSvgRoot","connectedBackgroundColor","setBackgroundColor","refreshImmediately","add","Rect","shape","style","fill","img","Image","image","convertToPixel","finder","value","convertFromPixel","containPixel","result","findResult","parseFinder","models","key","model","coordSys","coordinateSystem","containPoint","warn","getVisual","visualType","parsedFinder","defaultMainType","seriesModel","data","getData","dataIndexInside","hasOwnProperty","indexOfRawIndex","dataIndex","getViewOfComponentModel","componentModel","getViewOfSeriesModel","MOUSE_EVENT_NAMES","eveName","handler","e","target","params","isGlobalOut","parent","ecData","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","componentIndex","getComponent","event","_$eventProcessor","eventInfo","targetEl","packedEvent","trigger","zrEventfulCallAtLast","eventActionMap","actionType","eventType","clear","series","dispose","setAttribute","DOM_ATTRIBUTE_KEY","_loadingFX","needPrepare","resetOption","duration","showLoading","name","cfg","hideLoading","loadingEffects","remove","makeActionFromEvent","eventObj","payload","dispatchAction","opt","actions","browser","weChat","updateLabelLayout","updatedSeries","appendData","internalField","ecIns","restorePipelines","prepareStageTasks","plan","isComponent","viewList","viewMap","i","__alive","doPrepare","eachSeries","requireNewView","__requireNewView","viewId","classType","Clazz","getClass","main","sub","__id","__model","__ecComponentInfo","index","renderTask","splice","subType","setUpdatePayload","concat","callView","query","condition","excludeSeriesId","excludeSeriesIdMap","normalizeToArray","modelId","convertOptionIdName","set","isExcluded","notBlur","_a","focusSelf","dispatchers","dispatcher","prepareAndUpdate","newOption","coordSysMgr","restoreData","create","darkMode","colorArr","parse","stringify","setDarkMode","updateTransform","componentDirtyList","componentView","seriesDirtyMap","chartView","uid","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","clearAllVisual","updateLayout","methodName","coordSysList","getCoordinateSystems","chartsMap","payloadType","escapeConnect","actionWrap","actionInfo","cptTypeTmp","split","updateMethod","pop","cptType","payloads","batched","batch","eventObjBatch","isSelectChange","isHighDown","batchItem","action","preParseFinder","queryOptionMap","mainTypeSpecified","componentMainType","keys","messageCenter","newObj","selected","isFromClick","fromAction","fromActionPayload","pendingActions","shift","isFinished","dirtyList","clearStates","updateZ","updateStates","getSeries","updatePayload","dirty","perform","getPerformArgs","updateBlend","updateHoverLayerStatus","traverse","isElementRemoved","applyElementStates","newStates","oldStates","currentStates","stateName","states","select","hoverState","emphasis","blur","useStates","elCount","isGroup","node","worker","preventUsingHoverLayer","hoverLayer","blendMode","blend","eachPendingDisplayable","displayable","preventAutoZ","_updateZ","z","zlevel","maxZ2","label","getTextContent","labelLine","getTextGuideLine","children","childrenRef","z2","isFinite","textGuideLineConfig","showAbove","textContent","textGuide","stateTransition","hasState","prevStates","stateAnimationModel","enableAnimation","isAnimationEnabled","delay","easing","Path","__dirty","class_1","getComponentByElement","modelInfo","highlightDigit","updateConnectedChartsStatus","charts","status","otherChart","action_1","otherCharts_1","echartsProto","one","eventName","cb","ctx","wrapped","args2","idBase","groupIdBase","Error","existInstance","getInstanceByDom","nodeName","toUpperCase","clientWidth","clientHeight","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerPostInit","postInitFunc","registerUpdateLifecycle","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","coordSysCreator","register","getCoordinateSystemDimensions","getDimensionsInfo","dimensions","slice","registerLocale","registerLayout","layoutTask","registerVisual","visualTask","registeredTasks","targetList","fn","defaultPriority","isNaN","wrap","__raw","stageHandler","wrapStageHandler","registerLoading","loadingFx","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","getMap","getMapForUser","registerTransform","dataTool"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrender from 'zrender/lib/zrender';\nimport { assert, each, isFunction, isObject, indexOf, bind, clone, setAsPrimitive, createCanvas, extend, createHashMap, map, defaults, isDom, isArray, $override, noop } from 'zrender/lib/core/util';\nimport * as colorTool from 'zrender/lib/tool/color';\nimport env from 'zrender/lib/core/env';\nimport timsort from 'zrender/lib/core/timsort';\nimport Eventful from 'zrender/lib/core/Eventful';\nimport GlobalModel from '../model/Global';\nimport ExtensionAPI from './ExtensionAPI';\nimport CoordinateSystemManager from './CoordinateSystem';\nimport OptionManager from '../model/OptionManager';\nimport backwardCompat from '../preprocessor/backwardCompat';\nimport dataStack from '../processor/dataStack';\nimport SeriesModel from '../model/Series';\nimport ComponentView from '../view/Component';\nimport ChartView from '../view/Chart';\nimport * as graphic from '../util/graphic';\nimport { getECData } from '../util/innerStore';\nimport { isHighDownDispatcher, HOVER_STATE_EMPHASIS, HOVER_STATE_BLUR, blurSeriesFromHighlightPayload, toggleSelectionFromPayload, updateSeriesElementSelection, getAllSelectedIndices, isSelectChangePayload, isHighDownPayload, HIGHLIGHT_ACTION_TYPE, DOWNPLAY_ACTION_TYPE, SELECT_ACTION_TYPE, UNSELECT_ACTION_TYPE, TOGGLE_SELECT_ACTION_TYPE, savePathStates, enterEmphasis, leaveEmphasis, leaveBlur, enterSelect, leaveSelect, enterBlur, allLeaveBlur, findComponentHighDownDispatchers, blurComponent, handleGlobalMouseOverForHighDown, handleGlboalMouseOutForHighDown } from '../util/states';\nimport * as modelUtil from '../util/model';\nimport { throttle } from '../util/throttle';\nimport { seriesStyleTask, dataStyleTask, dataColorPaletteTask } from '../visual/style';\nimport loadingDefault from '../loading/default';\nimport Scheduler from './Scheduler';\nimport lightTheme from '../theme/light';\nimport darkTheme from '../theme/dark';\nimport { parseClassType } from '../util/clazz';\nimport { ECEventProcessor } from '../util/ECEventProcessor';\nimport { seriesSymbolTask, dataSymbolTask } from '../visual/symbol';\nimport { getVisualFromData, getItemVisualFromData } from '../visual/helper';\nimport { deprecateLog } from '../util/log';\nimport { handleLegacySelectEvents } from '../legacy/dataSelectAction';\nimport { registerExternalTransform } from '../data/helper/transform';\nimport { createLocaleObject, SYSTEM_LANG } from './locale';\nimport { findEventDispatcher } from '../util/event';\nimport decal from '../visual/decal';\nimport geoSourceManager from '../coord/geo/geoSourceManager';\nimport lifecycle from './lifecycle';\nvar hasWindow = typeof window !== 'undefined';\nexport var version = '5.2.0';\nexport var dependencies = {\n  zrender: '5.2.0'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800; // Some data processors depends on the stack result dimension (to calculate data extent).\n// So data stack stage should be in front of data processing stage.\n\nvar PRIORITY_PROCESSOR_DATASTACK = 900; // \"Data filter\" will block the stream, so it should be\n// put at the begining of data processing.\n\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_DEFAULT = 2000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\n// overwrite the viusal result of component (like `visualMap`)\n// using data item specific setting (like itemStyle.xxx on data item)\n\nvar PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500; // Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\n// visual result like `symbolSize`.\n\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY_VISUAL_ARIA = 6000;\nvar PRIORITY_VISUAL_DECAL = 7000;\nexport var PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH,\n    CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\n    ARIA: PRIORITY_VISUAL_ARIA,\n    DECAL: PRIORITY_VISUAL_DECAL\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\nvar PENDING_UPDATE = '__pendingUpdate';\nvar STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nvar CONNECT_STATUS_KEY = '__connectUpdateStatus';\nvar CONNECT_STATUS_PENDING = 0;\nvar CONNECT_STATUS_UPDATING = 1;\nvar CONNECT_STATUS_UPDATED = 2;\n;\n;\n\nfunction createRegisterEventWithLowercaseECharts(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (this.isDisposed()) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction createRegisterEventWithLowercaseMessageCenter(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction toLowercaseNameAndCallEventful(host, method, args) {\n  // `args[0]` is event name. Event name is all lowercase.\n  args[0] = args[0] && args[0].toLowerCase();\n  return Eventful.prototype[method].apply(host, args);\n}\n\nvar MessageCenter =\n/** @class */\nfunction (_super) {\n  __extends(MessageCenter, _super);\n\n  function MessageCenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return MessageCenter;\n}(Eventful);\n\nvar messageCenterProto = MessageCenter.prototype;\nmessageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\nmessageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off'); // ---------------------------------------\n// Internal method names for class ECharts\n// ---------------------------------------\n\nvar prepare;\nvar prepareView;\nvar updateDirectly;\nvar updateMethods;\nvar doConvertPixel;\nvar updateStreamModes;\nvar doDispatchAction;\nvar flushPendingActions;\nvar triggerUpdatedEvent;\nvar bindRenderedEvent;\nvar bindMouseEvent;\nvar clearColorPalette;\nvar render;\nvar renderComponents;\nvar renderSeries;\nvar createExtensionAPI;\nvar enableConnect;\nvar markStatusToUpdate;\nvar applyChangedStates;\n\nvar ECharts =\n/** @class */\nfunction (_super) {\n  __extends(ECharts, _super);\n\n  function ECharts(dom, // Theme name or themeOption.\n  theme, opts) {\n    var _this = _super.call(this, new ECEventProcessor()) || this;\n\n    _this._chartsViews = [];\n    _this._chartsMap = {};\n    _this._componentsViews = [];\n    _this._componentsMap = {}; // Can't dispatch action during rendering procedure\n\n    _this._pendingActions = [];\n    opts = opts || {}; // Get theme by name\n\n    if (typeof theme === 'string') {\n      theme = themeStorage[theme];\n    }\n\n    _this._dom = dom;\n    var defaultRenderer = 'canvas';\n    var defaultUseDirtyRect = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var root =\n      /* eslint-disable-next-line */\n      hasWindow ? window : global;\n      defaultRenderer = root.__ECHARTS__DEFAULT__RENDERER__ || defaultRenderer;\n      var devUseDirtyRect = root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;\n      defaultUseDirtyRect = devUseDirtyRect == null ? defaultUseDirtyRect : devUseDirtyRect;\n    }\n\n    var zr = _this._zr = zrender.init(dom, {\n      renderer: opts.renderer || defaultRenderer,\n      devicePixelRatio: opts.devicePixelRatio,\n      width: opts.width,\n      height: opts.height,\n      useDirtyRect: opts.useDirtyRect == null ? defaultUseDirtyRect : opts.useDirtyRect\n    }); // Expect 60 fps.\n\n    _this._throttledZrFlush = throttle(bind(zr.flush, zr), 17);\n    theme = clone(theme);\n    theme && backwardCompat(theme, true);\n    _this._theme = theme;\n    _this._locale = createLocaleObject(opts.locale || SYSTEM_LANG);\n    _this._coordSysMgr = new CoordinateSystemManager();\n    var api = _this._api = createExtensionAPI(_this); // Sort on demand\n\n    function prioritySortFunc(a, b) {\n      return a.__prio - b.__prio;\n    }\n\n    timsort(visualFuncs, prioritySortFunc);\n    timsort(dataProcessorFuncs, prioritySortFunc);\n    _this._scheduler = new Scheduler(_this, api, dataProcessorFuncs, visualFuncs);\n    _this._messageCenter = new MessageCenter(); // Init mouse events\n\n    _this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n    _this.resize = bind(_this.resize, _this);\n    zr.animation.on('frame', _this._onframe, _this);\n    bindRenderedEvent(zr, _this);\n    bindMouseEvent(zr, _this); // ECharts instance can be used as value.\n\n    setAsPrimitive(_this);\n    return _this;\n  }\n\n  ECharts.prototype._onframe = function () {\n    if (this._disposed) {\n      return;\n    }\n\n    applyChangedStates(this);\n    var scheduler = this._scheduler; // Lazy update\n\n    if (this[PENDING_UPDATE]) {\n      var silent = this[PENDING_UPDATE].silent;\n      this[IN_MAIN_PROCESS_KEY] = true;\n      prepare(this);\n      updateMethods.update.call(this, null, this[PENDING_UPDATE].updateParams); // At present, in each frame, zrender performs:\n      //   (1) animation step forward.\n      //   (2) trigger('frame') (where this `_onframe` is called)\n      //   (3) zrender flush (render).\n      // If we do nothing here, since we use `setToFinal: true`, the step (3) above\n      // will render the final state of the elements before the real animation started.\n\n      this._zr.flush();\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n      this[PENDING_UPDATE] = null;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    } // Avoid do both lazy update and progress in one frame.\n    else if (scheduler.unfinished) {\n        // Stream progress.\n        var remainTime = TEST_FRAME_REMAIN_TIME;\n        var ecModel = this._model;\n        var api = this._api;\n        scheduler.unfinished = false;\n\n        do {\n          var startTime = +new Date();\n          scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n          scheduler.performDataProcessorTasks(ecModel);\n          updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n          // each frame is not a good user experience. So we follow the rule that\n          // the extent of the coordinate system is determin in the first frame (the\n          // frame is executed immedietely after task reset.\n          // this._coordSysMgr.update(ecModel, api);\n          // console.log('--- ec frame visual ---', remainTime);\n\n          scheduler.performVisualTasks(ecModel);\n          renderSeries(this, this._model, api, 'remain', {});\n          remainTime -= +new Date() - startTime;\n        } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n        if (!scheduler.unfinished) {\n          this._zr.flush();\n        } // Else, zr flushing be ensue within the same frame,\n        // because zr flushing is after onframe event.\n\n      }\n  };\n\n  ECharts.prototype.getDom = function () {\n    return this._dom;\n  };\n\n  ECharts.prototype.getId = function () {\n    return this.id;\n  };\n\n  ECharts.prototype.getZr = function () {\n    return this._zr;\n  };\n  /* eslint-disable-next-line */\n\n\n  ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!this[IN_MAIN_PROCESS_KEY], '`setOption` should not be called during main process.');\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var silent;\n    var replaceMerge;\n    var transitionOpt;\n\n    if (isObject(notMerge)) {\n      lazyUpdate = notMerge.lazyUpdate;\n      silent = notMerge.silent;\n      replaceMerge = notMerge.replaceMerge;\n      transitionOpt = notMerge.transition;\n      notMerge = notMerge.notMerge;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    if (!this._model || notMerge) {\n      var optionManager = new OptionManager(this._api);\n      var theme = this._theme;\n      var ecModel = this._model = new GlobalModel();\n      ecModel.scheduler = this._scheduler;\n      ecModel.init(null, null, null, theme, this._locale, optionManager);\n    }\n\n    this._model.setOption(option, {\n      replaceMerge: replaceMerge\n    }, optionPreprocessorFuncs);\n\n    var updateParams = {\n      seriesTransition: transitionOpt,\n      optionChanged: true\n    };\n\n    if (lazyUpdate) {\n      this[PENDING_UPDATE] = {\n        silent: silent,\n        updateParams: updateParams\n      };\n      this[IN_MAIN_PROCESS_KEY] = false; // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\n      // It should wake it up to make sure zrender start to render at the next frame.\n\n      this.getZr().wakeUp();\n    } else {\n      prepare(this);\n      updateMethods.update.call(this, null, updateParams); // Ensure zr refresh sychronously, and then pixel in canvas can be\n      // fetched after `setOption`.\n\n      this._zr.flush();\n\n      this[PENDING_UPDATE] = null;\n      this[IN_MAIN_PROCESS_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n  };\n  /**\n   * @DEPRECATED\n   */\n\n\n  ECharts.prototype.setTheme = function () {\n    console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n  }; // We don't want developers to use getModel directly.\n\n\n  ECharts.prototype.getModel = function () {\n    return this._model;\n  };\n\n  ECharts.prototype.getOption = function () {\n    return this._model && this._model.getOption();\n  };\n\n  ECharts.prototype.getWidth = function () {\n    return this._zr.getWidth();\n  };\n\n  ECharts.prototype.getHeight = function () {\n    return this._zr.getHeight();\n  };\n\n  ECharts.prototype.getDevicePixelRatio = function () {\n    return this._zr.painter.dpr\n    /* eslint-disable-next-line */\n    || hasWindow && window.devicePixelRatio || 1;\n  };\n  /**\n   * Get canvas which has all thing rendered\n   */\n\n\n  ECharts.prototype.getRenderedCanvas = function (opts) {\n    if (!env.canvasSupported) {\n      return;\n    }\n\n    opts = opts || {};\n    return this._zr.painter.getRenderedCanvas({\n      backgroundColor: opts.backgroundColor || this._model.get('backgroundColor'),\n      pixelRatio: opts.pixelRatio || this.getDevicePixelRatio()\n    });\n  };\n  /**\n   * Get svg data url\n   */\n\n\n  ECharts.prototype.getSvgDataURL = function () {\n    if (!env.svgSupported) {\n      return;\n    }\n\n    var zr = this._zr;\n    var list = zr.storage.getDisplayList(); // Stop animations\n\n    each(list, function (el) {\n      el.stopAnimation(null, true);\n    });\n    return zr.painter.toDataURL();\n  };\n\n  ECharts.prototype.getDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    opts = opts || {};\n    var excludeComponents = opts.excludeComponents;\n    var ecModel = this._model;\n    var excludesComponentViews = [];\n    var self = this;\n    each(excludeComponents, function (componentType) {\n      ecModel.eachComponent({\n        mainType: componentType\n      }, function (component) {\n        var view = self._componentsMap[component.__viewId];\n\n        if (!view.group.ignore) {\n          excludesComponentViews.push(view);\n          view.group.ignore = true;\n        }\n      });\n    });\n    var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n    each(excludesComponentViews, function (view) {\n      view.group.ignore = false;\n    });\n    return url;\n  };\n\n  ECharts.prototype.getConnectedDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!env.canvasSupported) {\n      return;\n    }\n\n    var isSvg = opts.type === 'svg';\n    var groupId = this.group;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var MAX_NUMBER = Infinity;\n\n    if (connectedGroups[groupId]) {\n      var left_1 = MAX_NUMBER;\n      var top_1 = MAX_NUMBER;\n      var right_1 = -MAX_NUMBER;\n      var bottom_1 = -MAX_NUMBER;\n      var canvasList_1 = [];\n      var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\n      each(instances, function (chart, id) {\n        if (chart.group === groupId) {\n          var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.getRenderedCanvas(clone(opts));\n          var boundingRect = chart.getDom().getBoundingClientRect();\n          left_1 = mathMin(boundingRect.left, left_1);\n          top_1 = mathMin(boundingRect.top, top_1);\n          right_1 = mathMax(boundingRect.right, right_1);\n          bottom_1 = mathMax(boundingRect.bottom, bottom_1);\n          canvasList_1.push({\n            dom: canvas,\n            left: boundingRect.left,\n            top: boundingRect.top\n          });\n        }\n      });\n      left_1 *= dpr_1;\n      top_1 *= dpr_1;\n      right_1 *= dpr_1;\n      bottom_1 *= dpr_1;\n      var width = right_1 - left_1;\n      var height = bottom_1 - top_1;\n      var targetCanvas = createCanvas();\n      var zr_1 = zrender.init(targetCanvas, {\n        renderer: isSvg ? 'svg' : 'canvas'\n      });\n      zr_1.resize({\n        width: width,\n        height: height\n      });\n\n      if (isSvg) {\n        var content_1 = '';\n        each(canvasList_1, function (item) {\n          var x = item.left - left_1;\n          var y = item.top - top_1;\n          content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n        });\n        zr_1.painter.getSvgRoot().innerHTML = content_1;\n\n        if (opts.connectedBackgroundColor) {\n          zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\n        }\n\n        zr_1.refreshImmediately();\n        return zr_1.painter.toDataURL();\n      } else {\n        // Background between the charts\n        if (opts.connectedBackgroundColor) {\n          zr_1.add(new graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: width,\n              height: height\n            },\n            style: {\n              fill: opts.connectedBackgroundColor\n            }\n          }));\n        }\n\n        each(canvasList_1, function (item) {\n          var img = new graphic.Image({\n            style: {\n              x: item.left * dpr_1 - left_1,\n              y: item.top * dpr_1 - top_1,\n              image: item.dom\n            }\n          });\n          zr_1.add(img);\n        });\n        zr_1.refreshImmediately();\n        return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n      }\n    } else {\n      return this.getDataURL(opts);\n    }\n  };\n\n  ECharts.prototype.convertToPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertToPixel', finder, value);\n  };\n\n  ECharts.prototype.convertFromPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertFromPixel', finder, value);\n  };\n  /**\n   * Is the specified coordinate systems or components contain the given pixel point.\n   * @param {Array|number} value\n   * @return {boolean} result\n   */\n\n\n  ECharts.prototype.containPixel = function (finder, value) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var ecModel = this._model;\n    var result;\n    var findResult = modelUtil.parseFinder(ecModel, finder);\n    each(findResult, function (models, key) {\n      key.indexOf('Models') >= 0 && each(models, function (model) {\n        var coordSys = model.coordinateSystem;\n\n        if (coordSys && coordSys.containPoint) {\n          result = result || !!coordSys.containPoint(value);\n        } else if (key === 'seriesModels') {\n          var view = this._chartsMap[model.__viewId];\n\n          if (view && view.containPoint) {\n            result = result || view.containPoint(value, model);\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\n            }\n          }\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(key + ': containPoint is not supported');\n          }\n        }\n      }, this);\n    }, this);\n    return !!result;\n  };\n  /**\n   * Get visual from series or data.\n   * @param finder\n   *        If string, e.g., 'series', means {seriesIndex: 0}.\n   *        If Object, could contain some of these properties below:\n   *        {\n   *            seriesIndex / seriesId / seriesName,\n   *            dataIndex / dataIndexInside\n   *        }\n   *        If dataIndex is not specified, series visual will be fetched,\n   *        but not data item visual.\n   *        If all of seriesIndex, seriesId, seriesName are not specified,\n   *        visual will be fetched from first series.\n   * @param visualType 'color', 'symbol', 'symbolSize'\n   */\n\n\n  ECharts.prototype.getVisual = function (finder, visualType) {\n    var ecModel = this._model;\n    var parsedFinder = modelUtil.parseFinder(ecModel, finder, {\n      defaultMainType: 'series'\n    });\n    var seriesModel = parsedFinder.seriesModel;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!seriesModel) {\n        console.warn('There is no specified seires model');\n      }\n    }\n\n    var data = seriesModel.getData();\n    var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\n    return dataIndexInside != null ? getItemVisualFromData(data, dataIndexInside, visualType) : getVisualFromData(data, visualType);\n  };\n  /**\n   * Get view of corresponding component model\n   */\n\n\n  ECharts.prototype.getViewOfComponentModel = function (componentModel) {\n    return this._componentsMap[componentModel.__viewId];\n  };\n  /**\n   * Get view of corresponding series model\n   */\n\n\n  ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\n    return this._chartsMap[seriesModel.__viewId];\n  };\n\n  ECharts.prototype._initEvents = function () {\n    var _this = this;\n\n    each(MOUSE_EVENT_NAMES, function (eveName) {\n      var handler = function (e) {\n        var ecModel = _this.getModel();\n\n        var el = e.target;\n        var params;\n        var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n        if (isGlobalOut) {\n          params = {};\n        } else {\n          el && findEventDispatcher(el, function (parent) {\n            var ecData = getECData(parent);\n\n            if (ecData && ecData.dataIndex != null) {\n              var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\n              params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType) || {};\n              return true;\n            } // If element has custom eventData of components\n            else if (ecData.eventData) {\n                params = extend({}, ecData.eventData);\n                return true;\n              }\n          }, true);\n        } // Contract: if params prepared in mouse event,\n        // these properties must be specified:\n        // {\n        //    componentType: string (component main type)\n        //    componentIndex: number\n        // }\n        // Otherwise event query can not work.\n\n\n        if (params) {\n          var componentType = params.componentType;\n          var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n          // markLine/markPoint/markArea, the componentType is\n          // 'markLine'/'markPoint'/'markArea', but we should better\n          // enable them to be queried by seriesIndex, since their\n          // option is set in each series.\n\n          if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n            componentType = 'series';\n            componentIndex = params.seriesIndex;\n          }\n\n          var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n          var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n\n          if (process.env.NODE_ENV !== 'production') {\n            // `event.componentType` and `event[componentTpype + 'Index']` must not\n            // be missed, otherwise there is no way to distinguish source component.\n            // See `dataFormat.getDataParams`.\n            if (!isGlobalOut && !(model && view)) {\n              console.warn('model or view can not be found by params');\n            }\n          }\n\n          params.event = e;\n          params.type = eveName;\n          _this._$eventProcessor.eventInfo = {\n            targetEl: el,\n            packedEvent: params,\n            model: model,\n            view: view\n          };\n\n          _this.trigger(eveName, params);\n        }\n      }; // Consider that some component (like tooltip, brush, ...)\n      // register zr event handler, but user event handler might\n      // do anything, such as call `setOption` or `dispatchAction`,\n      // which probably update any of the content and probably\n      // cause problem if it is called previous other inner handlers.\n\n\n      handler.zrEventfulCallAtLast = true;\n\n      _this._zr.on(eveName, handler, _this);\n    });\n    each(eventActionMap, function (actionType, eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    }); // Extra events\n    // TODO register?\n\n    each(['selectchanged'], function (eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    });\n    handleLegacySelectEvents(this._messageCenter, this, this._api);\n  };\n\n  ECharts.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n\n  ECharts.prototype.clear = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this.setOption({\n      series: []\n    }, true);\n  };\n\n  ECharts.prototype.dispose = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._disposed = true;\n    modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n    var chart = this;\n    var api = chart._api;\n    var ecModel = chart._model;\n    each(chart._componentsViews, function (component) {\n      component.dispose(ecModel, api);\n    });\n    each(chart._chartsViews, function (chart) {\n      chart.dispose(ecModel, api);\n    }); // Dispose after all views disposed\n\n    chart._zr.dispose(); // Set properties to null.\n    // To reduce the memory cost in case the top code still holds this instance unexpectedly.\n\n\n    chart._dom = chart._model = chart._chartsMap = chart._componentsMap = chart._chartsViews = chart._componentsViews = chart._scheduler = chart._api = chart._zr = chart._throttledZrFlush = chart._theme = chart._coordSysMgr = chart._messageCenter = null;\n    delete instances[chart.id];\n  };\n  /**\n   * Resize the chart\n   */\n\n\n  ECharts.prototype.resize = function (opts) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!this[IN_MAIN_PROCESS_KEY], '`resize` should not be called during main process.');\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._zr.resize(opts);\n\n    var ecModel = this._model; // Resize loading effect\n\n    this._loadingFX && this._loadingFX.resize();\n\n    if (!ecModel) {\n      return;\n    }\n\n    var needPrepare = ecModel.resetOption('media');\n    var silent = opts && opts.silent; // There is some real cases that:\n    // chart.setOption(option, { lazyUpdate: true });\n    // chart.resize();\n\n    if (this[PENDING_UPDATE]) {\n      if (silent == null) {\n        silent = this[PENDING_UPDATE].silent;\n      }\n\n      needPrepare = true;\n      this[PENDING_UPDATE] = null;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n    needPrepare && prepare(this);\n    updateMethods.update.call(this, {\n      type: 'resize',\n      animation: extend({\n        // Disable animation\n        duration: 0\n      }, opts && opts.animation)\n    });\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.showLoading = function (name, cfg) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (isObject(name)) {\n      cfg = name;\n      name = '';\n    }\n\n    name = name || 'default';\n    this.hideLoading();\n\n    if (!loadingEffects[name]) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Loading effects ' + name + ' not exists.');\n      }\n\n      return;\n    }\n\n    var el = loadingEffects[name](this._api, cfg);\n    var zr = this._zr;\n    this._loadingFX = el;\n    zr.add(el);\n  };\n  /**\n   * Hide loading effect\n   */\n\n\n  ECharts.prototype.hideLoading = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._loadingFX && this._zr.remove(this._loadingFX);\n    this._loadingFX = null;\n  };\n\n  ECharts.prototype.makeActionFromEvent = function (eventObj) {\n    var payload = extend({}, eventObj);\n    payload.type = eventActionMap[eventObj.type];\n    return payload;\n  };\n  /**\n   * @param opt If pass boolean, means opt.silent\n   * @param opt.silent Default `false`. Whether trigger events.\n   * @param opt.flush Default `undefined`.\n   *        true: Flush immediately, and then pixel in canvas can be fetched\n   *            immediately. Caution: it might affect performance.\n   *        false: Not flush.\n   *        undefined: Auto decide whether perform flush.\n   */\n\n\n  ECharts.prototype.dispatchAction = function (payload, opt) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!isObject(opt)) {\n      opt = {\n        silent: !!opt\n      };\n    }\n\n    if (!actions[payload.type]) {\n      return;\n    } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n    if (!this._model) {\n      return;\n    } // May dispatchAction in rendering procedure\n\n\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      this._pendingActions.push(payload);\n\n      return;\n    }\n\n    var silent = opt.silent;\n    doDispatchAction.call(this, payload, silent);\n    var flush = opt.flush;\n\n    if (flush) {\n      this._zr.flush();\n    } else if (flush !== false && env.browser.weChat) {\n      // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n      // hang when sliding page (on touch event), which cause that zr does not\n      // refresh util user interaction finished, which is not expected.\n      // But `dispatchAction` may be called too frequently when pan on touch\n      // screen, which impacts performance if do not throttle them.\n      this._throttledZrFlush();\n    }\n\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.updateLabelLayout = function () {\n    lifecycle.trigger('series:layoutlabels', this._model, this._api, {\n      // Not adding series labels.\n      // TODO\n      updatedSeries: []\n    });\n  };\n\n  ECharts.prototype.appendData = function (params) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var seriesIndex = params.seriesIndex;\n    var ecModel = this.getModel();\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert(params.data && seriesModel);\n    }\n\n    seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n    // system, util some scenario require that. In the expected usage of\n    // `appendData`, the initial extent of coordinate system should better\n    // be fixed by axis `min`/`max` setting or initial data, otherwise if\n    // the extent changed while `appendData`, the location of the painted\n    // graphic elements have to be changed, which make the usage of\n    // `appendData` meaningless.\n\n    this._scheduler.unfinished = true;\n    this.getZr().wakeUp();\n  }; // A work around for no `internal` modifier in ts yet but\n  // need to strictly hide private methods to JS users.\n\n\n  ECharts.internalField = function () {\n    prepare = function (ecIns) {\n      var scheduler = ecIns._scheduler;\n      scheduler.restorePipelines(ecIns._model);\n      scheduler.prepareStageTasks();\n      prepareView(ecIns, true);\n      prepareView(ecIns, false);\n      scheduler.plan();\n    };\n    /**\n     * Prepare view instances of charts and components\n     */\n\n\n    prepareView = function (ecIns, isComponent) {\n      var ecModel = ecIns._model;\n      var scheduler = ecIns._scheduler;\n      var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n      var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n      var zr = ecIns._zr;\n      var api = ecIns._api;\n\n      for (var i = 0; i < viewList.length; i++) {\n        viewList[i].__alive = false;\n      }\n\n      isComponent ? ecModel.eachComponent(function (componentType, model) {\n        componentType !== 'series' && doPrepare(model);\n      }) : ecModel.eachSeries(doPrepare);\n\n      function doPrepare(model) {\n        // By defaut view will be reused if possible for the case that `setOption` with \"notMerge\"\n        // mode and need to enable transition animation. (Usually, when they have the same id, or\n        // especially no id but have the same type & name & index. See the `model.id` generation\n        // rule in `makeIdAndName` and `viewId` generation rule here).\n        // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\n        // the new model has nothing to do with the old model.\n        var requireNewView = model.__requireNewView; // This command should not work twice.\n\n        model.__requireNewView = false; // Consider: id same and type changed.\n\n        var viewId = '_ec_' + model.id + '_' + model.type;\n        var view = !requireNewView && viewMap[viewId];\n\n        if (!view) {\n          var classType = parseClassType(model.type);\n          var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : // FIXME:TS\n          // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\n          // For backward compat, still support a chart type declared as only subType\n          // like \"liquidfill\", but recommend \"series.liquidfill\"\n          // But need a base class to make a type series.\n          ChartView.getClass(classType.sub);\n\n          if (process.env.NODE_ENV !== 'production') {\n            assert(Clazz, classType.sub + ' does not exist.');\n          }\n\n          view = new Clazz();\n          view.init(ecModel, api);\n          viewMap[viewId] = view;\n          viewList.push(view);\n          zr.add(view.group);\n        }\n\n        model.__viewId = view.__id = viewId;\n        view.__alive = true;\n        view.__model = model;\n        view.group.__ecComponentInfo = {\n          mainType: model.mainType,\n          index: model.componentIndex\n        };\n        !isComponent && scheduler.prepareView(view, model, ecModel, api);\n      }\n\n      for (var i = 0; i < viewList.length;) {\n        var view = viewList[i];\n\n        if (!view.__alive) {\n          !isComponent && view.renderTask.dispose();\n          zr.remove(view.group);\n          view.dispose(ecModel, api);\n          viewList.splice(i, 1);\n\n          if (viewMap[view.__id] === view) {\n            delete viewMap[view.__id];\n          }\n\n          view.__id = view.group.__ecComponentInfo = null;\n        } else {\n          i++;\n        }\n      }\n    };\n\n    updateDirectly = function (ecIns, method, payload, mainType, subType) {\n      var ecModel = ecIns._model;\n      ecModel.setUpdatePayload(payload); // broadcast\n\n      if (!mainType) {\n        // FIXME\n        // Chart will not be update directly here, except set dirty.\n        // But there is no such scenario now.\n        each([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\n        return;\n      }\n\n      var query = {};\n      query[mainType + 'Id'] = payload[mainType + 'Id'];\n      query[mainType + 'Index'] = payload[mainType + 'Index'];\n      query[mainType + 'Name'] = payload[mainType + 'Name'];\n      var condition = {\n        mainType: mainType,\n        query: query\n      };\n      subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n      var excludeSeriesId = payload.excludeSeriesId;\n      var excludeSeriesIdMap;\n\n      if (excludeSeriesId != null) {\n        excludeSeriesIdMap = createHashMap();\n        each(modelUtil.normalizeToArray(excludeSeriesId), function (id) {\n          var modelId = modelUtil.convertOptionIdName(id, null);\n\n          if (modelId != null) {\n            excludeSeriesIdMap.set(modelId, true);\n          }\n        });\n      }\n\n      if (isHighDownPayload(payload)) {\n        allLeaveBlur(ecIns._api);\n      } // If dispatchAction before setOption, do nothing.\n\n\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) !== null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n\n        if (isHighDownPayload(payload)) {\n          if (model instanceof SeriesModel) {\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && !payload.notBlur) {\n              blurSeriesFromHighlightPayload(model, payload, ecIns._api);\n            }\n          } else {\n            var _a = findComponentHighDownDispatchers(model.mainType, model.componentIndex, payload.name, ecIns._api),\n                focusSelf = _a.focusSelf,\n                dispatchers = _a.dispatchers;\n\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && focusSelf && !payload.notBlur) {\n              blurComponent(model.mainType, model.componentIndex, ecIns._api);\n            } // PENDING:\n            // Whether to put this \"enter emphasis\" code in `ComponentView`,\n            // which will be the same as `ChartView` but might be not necessary\n            // and will be far from this logic.\n\n\n            if (dispatchers) {\n              each(dispatchers, function (dispatcher) {\n                payload.type === HIGHLIGHT_ACTION_TYPE ? enterEmphasis(dispatcher) : leaveEmphasis(dispatcher);\n              });\n            }\n          }\n        } else if (isSelectChangePayload(payload)) {\n          // TODO geo\n          if (model instanceof SeriesModel) {\n            toggleSelectionFromPayload(model, payload, ecIns._api);\n            updateSeriesElementSelection(model);\n            markStatusToUpdate(ecIns);\n          }\n        }\n      }, ecIns);\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) !== null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n        callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n      }, ecIns);\n\n      function callView(view) {\n        view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n      }\n    };\n\n    updateMethods = {\n      prepareAndUpdate: function (payload) {\n        prepare(this);\n        updateMethods.update.call(this, payload, {\n          // Needs to mark option changed if newOption is given.\n          // It's from MagicType.\n          // TODO If use a separate flag optionChanged in payload?\n          optionChanged: payload.newOption != null\n        });\n      },\n      update: function (payload, updateParams) {\n        var ecModel = this._model;\n        var api = this._api;\n        var zr = this._zr;\n        var coordSysMgr = this._coordSysMgr;\n        var scheduler = this._scheduler; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        scheduler.restoreData(ecModel, payload);\n        scheduler.performSeriesTasks(ecModel); // TODO\n        // Save total ecModel here for undo/redo (after restoring data and before processing data).\n        // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n        // Create new coordinate system each update\n        // In LineView may save the old coordinate system and use it to get the orignal point\n\n        coordSysMgr.create(ecModel, api);\n        scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n        // stream modes after data processing, where the filtered data is used to\n        // deteming whether use progressive rendering.\n\n        updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n        // can be fetched when coord sys updating (consider the barGrid extent fix). But\n        // the drawback is the full coord info can not be fetched. Fortunately this full\n        // coord is not requied in stream mode updater currently.\n\n        coordSysMgr.update(ecModel, api);\n        clearColorPalette(ecModel);\n        scheduler.performVisualTasks(ecModel, payload);\n        render(this, ecModel, api, payload, updateParams); // Set background\n\n        var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n        var darkMode = ecModel.get('darkMode'); // In IE8\n\n        if (!env.canvasSupported) {\n          var colorArr = colorTool.parse(backgroundColor);\n          backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n          if (colorArr[3] === 0) {\n            backgroundColor = 'transparent';\n          }\n        } else {\n          zr.setBackgroundColor(backgroundColor); // Force set dark mode.\n\n          if (darkMode != null && darkMode !== 'auto') {\n            zr.setDarkMode(darkMode);\n          }\n        }\n\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateTransform: function (payload) {\n        var _this = this;\n\n        var ecModel = this._model;\n        var api = this._api; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n        var componentDirtyList = [];\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType === 'series') {\n            return;\n          }\n\n          var componentView = _this.getViewOfComponentModel(componentModel);\n\n          if (componentView && componentView.__alive) {\n            if (componentView.updateTransform) {\n              var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n              result && result.update && componentDirtyList.push(componentView);\n            } else {\n              componentDirtyList.push(componentView);\n            }\n          }\n        });\n        var seriesDirtyMap = createHashMap();\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n\n          if (chartView.updateTransform) {\n            var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n            result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n          } else {\n            seriesDirtyMap.set(seriesModel.uid, 1);\n          }\n        });\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true,\n          dirtyMap: seriesDirtyMap\n        }); // Currently, not call render of components. Geo render cost a lot.\n        // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n        renderSeries(this, ecModel, api, payload, {}, seriesDirtyMap);\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateView: function (payload) {\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        ChartView.markUpdateMethod(payload, 'updateView');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true\n        });\n\n        render(this, ecModel, this._api, payload, {});\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateVisual: function (payload) {\n        // updateMethods.update.call(this, payload);\n        var _this = this;\n\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // clear all visual\n\n        ecModel.eachSeries(function (seriesModel) {\n          seriesModel.getData().clearAllVisual();\n        }); // Perform visual\n\n        ChartView.markUpdateMethod(payload, 'updateVisual');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          visualType: 'visual',\n          setDirty: true\n        });\n\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType !== 'series') {\n            var componentView = _this.getViewOfComponentModel(componentModel);\n\n            componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\n          }\n        });\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\n        });\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateLayout: function (payload) {\n        updateMethods.update.call(this, payload);\n      }\n    };\n\n    doConvertPixel = function (ecIns, methodName, finder, value) {\n      if (ecIns._disposed) {\n        disposedWarning(ecIns.id);\n        return;\n      }\n\n      var ecModel = ecIns._model;\n\n      var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\n\n      var result;\n      var parsedFinder = modelUtil.parseFinder(ecModel, finder);\n\n      for (var i = 0; i < coordSysList.length; i++) {\n        var coordSys = coordSysList[i];\n\n        if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value)) != null) {\n          return result;\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\n      }\n    };\n\n    updateStreamModes = function (ecIns, ecModel) {\n      var chartsMap = ecIns._chartsMap;\n      var scheduler = ecIns._scheduler;\n      ecModel.eachSeries(function (seriesModel) {\n        scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n      });\n    };\n\n    doDispatchAction = function (payload, silent) {\n      var _this = this;\n\n      var ecModel = this.getModel();\n      var payloadType = payload.type;\n      var escapeConnect = payload.escapeConnect;\n      var actionWrap = actions[payloadType];\n      var actionInfo = actionWrap.actionInfo;\n      var cptTypeTmp = (actionInfo.update || 'update').split(':');\n      var updateMethod = cptTypeTmp.pop();\n      var cptType = cptTypeTmp[0] != null && parseClassType(cptTypeTmp[0]);\n      this[IN_MAIN_PROCESS_KEY] = true;\n      var payloads = [payload];\n      var batched = false; // Batch action\n\n      if (payload.batch) {\n        batched = true;\n        payloads = map(payload.batch, function (item) {\n          item = defaults(extend({}, item), payload);\n          item.batch = null;\n          return item;\n        });\n      }\n\n      var eventObjBatch = [];\n      var eventObj;\n      var isSelectChange = isSelectChangePayload(payload);\n      var isHighDown = isHighDownPayload(payload);\n      each(payloads, function (batchItem) {\n        // Action can specify the event by return it.\n        eventObj = actionWrap.action(batchItem, _this._model, _this._api); // Emit event outside\n\n        eventObj = eventObj || extend({}, batchItem); // Convert type to eventType\n\n        eventObj.type = actionInfo.event || eventObj.type;\n        eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n        if (isHighDown) {\n          var _a = modelUtil.preParseFinder(payload),\n              queryOptionMap = _a.queryOptionMap,\n              mainTypeSpecified = _a.mainTypeSpecified;\n\n          var componentMainType = mainTypeSpecified ? queryOptionMap.keys()[0] : 'series';\n          updateDirectly(_this, updateMethod, batchItem, componentMainType);\n          markStatusToUpdate(_this);\n        } else if (isSelectChange) {\n          // At present `dispatchAction({ type: 'select', ... })` is not supported on components.\n          // geo still use 'geoselect'.\n          updateDirectly(_this, updateMethod, batchItem, 'series');\n          markStatusToUpdate(_this);\n        } else if (cptType) {\n          updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\n        }\n      });\n\n      if (updateMethod !== 'none' && !isHighDown && !isSelectChange && !cptType) {\n        // Still dirty\n        if (this[PENDING_UPDATE]) {\n          prepare(this);\n          updateMethods.update.call(this, payload);\n          this[PENDING_UPDATE] = null;\n        } else {\n          updateMethods[updateMethod].call(this, payload);\n        }\n      } // Follow the rule of action batch\n\n\n      if (batched) {\n        eventObj = {\n          type: actionInfo.event || payloadType,\n          escapeConnect: escapeConnect,\n          batch: eventObjBatch\n        };\n      } else {\n        eventObj = eventObjBatch[0];\n      }\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n\n      if (!silent) {\n        var messageCenter = this._messageCenter;\n        messageCenter.trigger(eventObj.type, eventObj); // Extra triggered 'selectchanged' event\n\n        if (isSelectChange) {\n          var newObj = {\n            type: 'selectchanged',\n            escapeConnect: escapeConnect,\n            selected: getAllSelectedIndices(ecModel),\n            isFromClick: payload.isFromClick || false,\n            fromAction: payload.type,\n            fromActionPayload: payload\n          };\n          messageCenter.trigger(newObj.type, newObj);\n        }\n      }\n    };\n\n    flushPendingActions = function (silent) {\n      var pendingActions = this._pendingActions;\n\n      while (pendingActions.length) {\n        var payload = pendingActions.shift();\n        doDispatchAction.call(this, payload, silent);\n      }\n    };\n\n    triggerUpdatedEvent = function (silent) {\n      !silent && this.trigger('updated');\n    };\n    /**\n     * Event `rendered` is triggered when zr\n     * rendered. It is useful for realtime\n     * snapshot (reflect animation).\n     *\n     * Event `finished` is triggered when:\n     * (1) zrender rendering finished.\n     * (2) initial animation finished.\n     * (3) progressive rendering finished.\n     * (4) no pending action.\n     * (5) no delayed setOption needs to be processed.\n     */\n\n\n    bindRenderedEvent = function (zr, ecIns) {\n      zr.on('rendered', function (params) {\n        ecIns.trigger('rendered', params); // The `finished` event should not be triggered repeatly,\n        // so it should only be triggered when rendering indeed happend\n        // in zrender. (Consider the case that dipatchAction is keep\n        // triggering when mouse move).\n\n        if ( // Although zr is dirty if initial animation is not finished\n        // and this checking is called on frame, we also check\n        // animation finished for robustness.\n        zr.animation.isFinished() && !ecIns[PENDING_UPDATE] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n          ecIns.trigger('finished');\n        }\n      });\n    };\n\n    bindMouseEvent = function (zr, ecIns) {\n      zr.on('mouseover', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlobalMouseOverForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('mouseout', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlboalMouseOutForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('click', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, function (target) {\n          return getECData(target).dataIndex != null;\n        }, true);\n\n        if (dispatcher) {\n          var actionType = dispatcher.selected ? 'unselect' : 'select';\n          var ecData = getECData(dispatcher);\n\n          ecIns._api.dispatchAction({\n            type: actionType,\n            dataType: ecData.dataType,\n            dataIndexInside: ecData.dataIndex,\n            seriesIndex: ecData.seriesIndex,\n            isFromClick: true\n          });\n        }\n      });\n    };\n\n    clearColorPalette = function (ecModel) {\n      ecModel.clearColorPalette();\n      ecModel.eachSeries(function (seriesModel) {\n        seriesModel.clearColorPalette();\n      });\n    };\n\n    render = function (ecIns, ecModel, api, payload, updateParams) {\n      renderComponents(ecIns, ecModel, api, payload, updateParams);\n      each(ecIns._chartsViews, function (chart) {\n        chart.__alive = false;\n      });\n      renderSeries(ecIns, ecModel, api, payload, updateParams); // Remove groups of unrendered charts\n\n      each(ecIns._chartsViews, function (chart) {\n        if (!chart.__alive) {\n          chart.remove(ecModel, api);\n        }\n      });\n    };\n\n    renderComponents = function (ecIns, ecModel, api, payload, updateParams, dirtyList) {\n      each(dirtyList || ecIns._componentsViews, function (componentView) {\n        var componentModel = componentView.__model;\n        clearStates(componentModel, componentView);\n        componentView.render(componentModel, ecModel, api, payload);\n        updateZ(componentModel, componentView);\n        updateStates(componentModel, componentView);\n      });\n    };\n    /**\n     * Render each chart and component\n     */\n\n\n    renderSeries = function (ecIns, ecModel, api, payload, updateParams, dirtyMap) {\n      // Render all charts\n      var scheduler = ecIns._scheduler;\n      updateParams = extend(updateParams || {}, {\n        updatedSeries: ecModel.getSeries()\n      }); // TODO progressive?\n\n      lifecycle.trigger('series:beforeupdate', ecModel, api, updateParams);\n      var unfinished = false;\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        chartView.__alive = true;\n        var renderTask = chartView.renderTask;\n        scheduler.updatePayload(renderTask, payload); // TODO states on marker.\n\n        clearStates(seriesModel, chartView);\n\n        if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n          renderTask.dirty();\n        }\n\n        if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\n          unfinished = true;\n        }\n\n        chartView.group.silent = !!seriesModel.get('silent'); // Should not call markRedraw on group, because it will disable zrender\n        // increamental render (alway render from the __startIndex each frame)\n        // chartView.group.markRedraw();\n\n        updateBlend(seriesModel, chartView);\n        updateSeriesElementSelection(seriesModel);\n      });\n      scheduler.unfinished = unfinished || scheduler.unfinished;\n      lifecycle.trigger('series:layoutlabels', ecModel, api, updateParams); // transition after label is layouted.\n\n      lifecycle.trigger('series:transition', ecModel, api, updateParams);\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId]; // Update Z after labels updated. Before applying states.\n\n        updateZ(seriesModel, chartView); // NOTE: Update states after label is updated.\n        // label should be in normal status when layouting.\n\n        updateStates(seriesModel, chartView);\n      }); // If use hover layer\n\n      updateHoverLayerStatus(ecIns, ecModel);\n      lifecycle.trigger('series:afterupdate', ecModel, api, updateParams);\n    };\n\n    markStatusToUpdate = function (ecIns) {\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = true; // Wake up zrender if it's sleep. Let it update states in the next frame.\n\n      ecIns.getZr().wakeUp();\n    };\n\n    applyChangedStates = function (ecIns) {\n      if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\n        return;\n      }\n\n      ecIns.getZr().storage.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        applyElementStates(el);\n      });\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\n    };\n\n    function applyElementStates(el) {\n      var newStates = [];\n      var oldStates = el.currentStates; // Keep other states.\n\n      for (var i = 0; i < oldStates.length; i++) {\n        var stateName = oldStates[i];\n\n        if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\n          newStates.push(stateName);\n        }\n      } // Only use states when it's exists.\n\n\n      if (el.selected && el.states.select) {\n        newStates.push('select');\n      }\n\n      if (el.hoverState === HOVER_STATE_EMPHASIS && el.states.emphasis) {\n        newStates.push('emphasis');\n      } else if (el.hoverState === HOVER_STATE_BLUR && el.states.blur) {\n        newStates.push('blur');\n      }\n\n      el.useStates(newStates);\n    }\n\n    function updateHoverLayerStatus(ecIns, ecModel) {\n      var zr = ecIns._zr;\n      var storage = zr.storage;\n      var elCount = 0;\n      storage.traverse(function (el) {\n        if (!el.isGroup) {\n          elCount++;\n        }\n      });\n\n      if (elCount > ecModel.get('hoverLayerThreshold') && !env.node && !env.worker) {\n        ecModel.eachSeries(function (seriesModel) {\n          if (seriesModel.preventUsingHoverLayer) {\n            return;\n          }\n\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n          if (chartView.__alive) {\n            chartView.group.traverse(function (el) {\n              if (el.states.emphasis) {\n                el.states.emphasis.hoverLayer = true;\n              }\n            });\n          }\n        });\n      }\n    }\n\n    ;\n    /**\n     * Update chart and blend.\n     */\n\n    function updateBlend(seriesModel, chartView) {\n      var blendMode = seriesModel.get('blendMode') || null;\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n          console.warn('Only canvas support blendMode');\n        }\n      }\n\n      chartView.group.traverse(function (el) {\n        // FIXME marker and other components\n        if (!el.isGroup) {\n          // DONT mark the element dirty. In case element is incremental and don't wan't to rerender.\n          el.style.blend = blendMode;\n        }\n\n        if (el.eachPendingDisplayable) {\n          el.eachPendingDisplayable(function (displayable) {\n            displayable.style.blend = blendMode;\n          });\n        }\n      });\n    }\n\n    ;\n\n    function updateZ(model, view) {\n      if (model.preventAutoZ) {\n        return;\n      } // Set z and zlevel\n\n\n      _updateZ(view.group, model.get('z') || 0, model.get('zlevel') || 0, -Infinity);\n    }\n\n    ;\n\n    function _updateZ(el, z, zlevel, maxZ2) {\n      // Group may also have textContent\n      var label = el.getTextContent();\n      var labelLine = el.getTextGuideLine();\n      var isGroup = el.isGroup;\n\n      if (isGroup) {\n        // set z & zlevel of children elements of Group\n        // el.traverse((childEl: Element) => _updateZ(childEl, z, zlevel));\n        var children = el.childrenRef();\n\n        for (var i = 0; i < children.length; i++) {\n          maxZ2 = Math.max(_updateZ(children[i], z, zlevel, maxZ2), maxZ2);\n        }\n      } else {\n        // not Group\n        el.z = z;\n        el.zlevel = zlevel;\n        maxZ2 = Math.max(el.z2, maxZ2);\n      } // always set z and zlevel if label/labelLine exists\n\n\n      if (label) {\n        label.z = z;\n        label.zlevel = zlevel; // lift z2 of text content\n        // TODO if el.emphasis.z2 is spcefied, what about textContent.\n\n        isFinite(maxZ2) && (label.z2 = maxZ2 + 2);\n      }\n\n      if (labelLine) {\n        var textGuideLineConfig = el.textGuideLineConfig;\n        labelLine.z = z;\n        labelLine.zlevel = zlevel;\n        isFinite(maxZ2) && (labelLine.z2 = maxZ2 + (textGuideLineConfig && textGuideLineConfig.showAbove ? 1 : -1));\n      }\n\n      return maxZ2;\n    } // Clear states without animation.\n    // TODO States on component.\n\n\n    function clearStates(model, view) {\n      view.group.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        var textContent = el.getTextContent();\n        var textGuide = el.getTextGuideLine();\n\n        if (el.stateTransition) {\n          el.stateTransition = null;\n        }\n\n        if (textContent && textContent.stateTransition) {\n          textContent.stateTransition = null;\n        }\n\n        if (textGuide && textGuide.stateTransition) {\n          textGuide.stateTransition = null;\n        } // TODO If el is incremental.\n\n\n        if (el.hasState()) {\n          el.prevStates = el.currentStates;\n          el.clearStates();\n        } else if (el.prevStates) {\n          el.prevStates = null;\n        }\n      });\n    }\n\n    function updateStates(model, view) {\n      var stateAnimationModel = model.getModel('stateAnimation');\n      var enableAnimation = model.isAnimationEnabled();\n      var duration = stateAnimationModel.get('duration');\n      var stateTransition = duration > 0 ? {\n        duration: duration,\n        delay: stateAnimationModel.get('delay'),\n        easing: stateAnimationModel.get('easing') // additive: stateAnimationModel.get('additive')\n\n      } : null;\n      view.group.traverse(function (el) {\n        if (el.states && el.states.emphasis) {\n          // Not applied on removed elements, it may still in fading.\n          if (graphic.isElementRemoved(el)) {\n            return;\n          }\n\n          if (el instanceof graphic.Path) {\n            savePathStates(el);\n          } // Only updated on changed element. In case element is incremental and don't wan't to rerender.\n          // TODO, a more proper way?\n\n\n          if (el.__dirty) {\n            var prevStates = el.prevStates; // Restore states without animation\n\n            if (prevStates) {\n              el.useStates(prevStates);\n            }\n          } // Update state transition and enable animation again.\n\n\n          if (enableAnimation) {\n            el.stateTransition = stateTransition;\n            var textContent = el.getTextContent();\n            var textGuide = el.getTextGuideLine(); // TODO Is it necessary to animate label?\n\n            if (textContent) {\n              textContent.stateTransition = stateTransition;\n            }\n\n            if (textGuide) {\n              textGuide.stateTransition = stateTransition;\n            }\n          } // The use higlighted and selected flag to toggle states.\n\n\n          if (el.__dirty) {\n            applyElementStates(el);\n          }\n        }\n      });\n    }\n\n    ;\n\n    createExtensionAPI = function (ecIns) {\n      return new (\n      /** @class */\n      function (_super) {\n        __extends(class_1, _super);\n\n        function class_1() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        class_1.prototype.getCoordinateSystems = function () {\n          return ecIns._coordSysMgr.getCoordinateSystems();\n        };\n\n        class_1.prototype.getComponentByElement = function (el) {\n          while (el) {\n            var modelInfo = el.__ecComponentInfo;\n\n            if (modelInfo != null) {\n              return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\n            }\n\n            el = el.parent;\n          }\n        };\n\n        class_1.prototype.enterEmphasis = function (el, highlightDigit) {\n          enterEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\n          leaveEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterBlur = function (el) {\n          enterBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveBlur = function (el) {\n          leaveBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterSelect = function (el) {\n          enterSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveSelect = function (el) {\n          leaveSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.getModel = function () {\n          return ecIns.getModel();\n        };\n\n        class_1.prototype.getViewOfComponentModel = function (componentModel) {\n          return ecIns.getViewOfComponentModel(componentModel);\n        };\n\n        class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\n          return ecIns.getViewOfSeriesModel(seriesModel);\n        };\n\n        return class_1;\n      }(ExtensionAPI))(ecIns);\n    };\n\n    enableConnect = function (chart) {\n      function updateConnectedChartsStatus(charts, status) {\n        for (var i = 0; i < charts.length; i++) {\n          var otherChart = charts[i];\n          otherChart[CONNECT_STATUS_KEY] = status;\n        }\n      }\n\n      each(eventActionMap, function (actionType, eventType) {\n        chart._messageCenter.on(eventType, function (event) {\n          if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\n            if (event && event.escapeConnect) {\n              return;\n            }\n\n            var action_1 = chart.makeActionFromEvent(event);\n            var otherCharts_1 = [];\n            each(instances, function (otherChart) {\n              if (otherChart !== chart && otherChart.group === chart.group) {\n                otherCharts_1.push(otherChart);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\n            each(otherCharts_1, function (otherChart) {\n              if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\n                otherChart.dispatchAction(action_1);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\n          }\n        });\n      });\n    };\n  }();\n\n  return ECharts;\n}(Eventful);\n\nvar echartsProto = ECharts.prototype;\nechartsProto.on = createRegisterEventWithLowercaseECharts('on');\nechartsProto.off = createRegisterEventWithLowercaseECharts('off');\n/**\n * @deprecated\n */\n// @ts-ignore\n\nechartsProto.one = function (eventName, cb, ctx) {\n  var self = this;\n  deprecateLog('ECharts#one is deprecated.');\n\n  function wrapped() {\n    var args2 = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args2[_i] = arguments[_i];\n    }\n\n    cb && cb.apply && cb.apply(this, args2); // @ts-ignore\n\n    self.off(eventName, wrapped);\n  }\n\n  ; // @ts-ignore\n\n  this.on.call(this, eventName, wrapped, ctx);\n}; // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         let isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n\nfunction disposedWarning(id) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('Instance ' + id + ' has been disposed');\n  }\n}\n\nvar actions = {};\n/**\n * Map eventType to actionType\n */\n\nvar eventActionMap = {};\nvar dataProcessorFuncs = [];\nvar optionPreprocessorFuncs = [];\nvar visualFuncs = [];\nvar themeStorage = {};\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = +new Date() - 0;\nvar groupIdBase = +new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n/**\n * @param opts.devicePixelRatio Use window.devicePixelRatio by default\n * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\n * @param opts.width Use clientWidth of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.height Use clientHeight of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.locale Specify the locale.\n * @param opts.useDirtyRect Enable dirty rectangle rendering or not.\n */\n\nexport function init(dom, theme, opts) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!dom) {\n      throw new Error('Initialize failed: invalid dom.');\n    }\n  }\n\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('There is a chart instance already initialized on the dom.');\n    }\n\n    return existInstance;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\n      console.warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\n    }\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  lifecycle.trigger('afterinit', chart);\n  return chart;\n}\n/**\n * @usage\n * (A)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * chart1.group = 'xxx';\n * chart2.group = 'xxx';\n * echarts.connect('xxx');\n * ```\n * (B)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * echarts.connect('xxx', [chart1, chart2]);\n * ```\n */\n\nexport function connect(groupId) {\n  // Is array of charts\n  if (isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @deprecated\n */\n\nexport function disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * Alias and backword compat\n */\n\nexport var disconnect = disConnect;\n/**\n * Dispose a chart instance\n */\n\nexport function dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\nexport function getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\nexport function getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\nexport function registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n */\n\nexport function registerPreprocessor(preprocessorFunc) {\n  if (indexOf(optionPreprocessorFuncs, preprocessorFunc) < 0) {\n    optionPreprocessorFuncs.push(preprocessorFunc);\n  }\n}\nexport function registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\n}\n/**\n * Register postIniter\n * @param {Function} postInitFunc\n */\n\nexport function registerPostInit(postInitFunc) {\n  registerUpdateLifecycle('afterinit', postInitFunc);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\nexport function registerPostUpdate(postUpdateFunc) {\n  registerUpdateLifecycle('afterupdate', postUpdateFunc);\n}\nexport function registerUpdateLifecycle(name, cb) {\n  lifecycle.on(name, cb);\n}\nexport function registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event;\n\n  if (eventActionMap[eventName]) {\n    // Already registered.\n    return;\n  } // Validate action type and event name.\n\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\nexport function registerCoordinateSystem(type, coordSysCreator) {\n  CoordinateSystemManager.register(type, coordSysCreator);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\nexport function getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\nexport { registerLocale } from './locale';\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n\nexport { registerLayout, registerVisual };\nvar registeredTasks = [];\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNaN(priority) || priority == null) {\n      throw new Error('Illegal priority');\n    } // Check duplicate\n\n\n    each(targetList, function (wrap) {\n      assert(wrap.__raw !== fn);\n    });\n  } // Already registered\n\n\n  if (indexOf(registeredTasks, fn) >= 0) {\n    return;\n  }\n\n  registeredTasks.push(fn);\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n}\n\nexport function registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @example\n *     let Canvas = require('canvas');\n *     let echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\nexport function setCanvasCreator(creator) {\n  $override('createCanvas', creator);\n}\n/**\n * The parameters and usage: see `geoSourceManager.registerMap`.\n * Compatible with previous `echarts.registerMap`.\n */\n\nexport function registerMap(mapName, geoJson, specialAreas) {\n  geoSourceManager.registerMap(mapName, geoJson, specialAreas);\n}\nexport function getMap(mapName) {\n  return geoSourceManager.getMapForUser(mapName);\n}\nexport var registerTransform = registerExternalTransform;\n/**\n * Globa dispatchAction to a specified chart instance.\n */\n// export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\n//     if (!payload || !payload.chartId) {\n//         // Must have chartId to find chart\n//         return;\n//     }\n//     const chart = instances[payload.chartId];\n//     if (chart) {\n//         chart.dispatchAction(payload, opt);\n//     }\n// }\n// Buitlin global visual\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataColorPaletteTask);\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesSymbolTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataSymbolTask);\nregisterVisual(PRIORITY_VISUAL_DECAL, decal);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: HIGHLIGHT_ACTION_TYPE,\n  event: HIGHLIGHT_ACTION_TYPE,\n  update: HIGHLIGHT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: DOWNPLAY_ACTION_TYPE,\n  event: DOWNPLAY_ACTION_TYPE,\n  update: DOWNPLAY_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: SELECT_ACTION_TYPE,\n  event: SELECT_ACTION_TYPE,\n  update: SELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: UNSELECT_ACTION_TYPE,\n  event: UNSELECT_ACTION_TYPE,\n  update: UNSELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: TOGGLE_SELECT_ACTION_TYPE,\n  event: TOGGLE_SELECT_ACTION_TYPE,\n  update: TOGGLE_SELECT_ACTION_TYPE\n}, noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nexport var dataTool = {};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { bind, each, isFunction, isString, indexOf } from 'zrender/lib/core/util';\nimport * as eventTool from 'zrender/lib/core/event';\nimport * as graphic from '../../util/graphic';\nimport * as throttle from '../../util/throttle';\nimport DataZoomView from './DataZoomView';\nimport { linearMap, asc, parsePercent } from '../../util/number';\nimport * as layout from '../../util/layout';\nimport sliderMove from '../helper/sliderMove';\nimport { getAxisMainType, collectReferCoordSysModelInfo } from './helper';\nimport { enableHoverEmphasis } from '../../util/states';\nimport { createSymbol, symbolBuildProxies } from '../../util/symbol';\nimport { deprecateLog } from '../../util/log';\nimport { createTextStyle } from '../../label/labelStyle';\nvar Rect = graphic.Rect; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar DEFAULT_MOVE_HANDLE_SIZE = 7;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar REALTIME_ANIMATION_CONFIG = {\n  easing: 'cubicOut',\n  duration: 100,\n  delay: 0\n};\n\nvar SliderZoomView =\n/** @class */\nfunction (_super) {\n  __extends(SliderZoomView, _super);\n\n  function SliderZoomView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = SliderZoomView.type;\n    _this._displayables = {};\n    return _this;\n  }\n\n  SliderZoomView.prototype.init = function (ecModel, api) {\n    this.api = api; // A unique handler for each dataZoom component\n\n    this._onBrush = bind(this._onBrush, this);\n    this._onBrushEnd = bind(this._onBrushEnd, this);\n  };\n\n  SliderZoomView.prototype.render = function (dataZoomModel, ecModel, api, payload) {\n    _super.prototype.render.apply(this, arguments);\n\n    throttle.createOrUpdate(this, '_dispatchZoomAction', dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.getOrient();\n\n    if (dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    if (dataZoomModel.noTarget()) {\n      this._clear();\n\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  };\n\n  SliderZoomView.prototype.dispose = function () {\n    this._clear();\n\n    _super.prototype.dispose.apply(this, arguments);\n  };\n\n  SliderZoomView.prototype._clear = function () {\n    throttle.clear(this, '_dispatchZoomAction');\n    var zr = this.api.getZr();\n    zr.off('mousemove', this._onBrush);\n    zr.off('mouseup', this._onBrushEnd);\n  };\n\n  SliderZoomView.prototype._buildView = function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    this._brushing = false;\n    this._displayables.brushRect = null;\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.sliderGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  };\n\n  SliderZoomView.prototype._resetLocation = function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api;\n    var showMoveHandle = dataZoomModel.get('brushSelect');\n    var moveHandleSize = showMoveHandle ? DEFAULT_MOVE_HANDLE_SIZE : 0; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP - moveHandleSize,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  };\n\n  SliderZoomView.prototype._positionGroup = function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var sliderGroup = this._displayables.sliderGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    sliderGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scaleY: otherAxisInverse ? 1 : -1,\n      scaleX: 1\n    } : orient === HORIZONTAL && inverse ? {\n      scaleY: otherAxisInverse ? 1 : -1,\n      scaleX: -1\n    } : orient === VERTICAL && !inverse ? {\n      scaleY: otherAxisInverse ? -1 : 1,\n      scaleX: 1,\n      rotation: Math.PI / 2\n    } // Dont use Math.PI, considering shadow direction.\n    : {\n      scaleY: otherAxisInverse ? -1 : 1,\n      scaleX: -1,\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([sliderGroup]);\n    thisGroup.x = location.x - rect.x;\n    thisGroup.y = location.y - rect.y;\n    thisGroup.markRedraw();\n  };\n\n  SliderZoomView.prototype._getViewExtent = function () {\n    return [0, this._size[0]];\n  };\n\n  SliderZoomView.prototype._renderBackground = function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.sliderGroup;\n    var brushSelect = dataZoomModel.get('brushSelect');\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    var clickPanel = new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: bind(this._onClickPanel, this)\n    });\n    var zr = this.api.getZr();\n\n    if (brushSelect) {\n      clickPanel.on('mousedown', this._onBrushStart, this);\n      clickPanel.cursor = 'crosshair';\n      zr.on('mousemove', this._onBrush);\n      zr.on('mouseup', this._onBrushEnd);\n    } else {\n      zr.off('mousemove', this._onBrush);\n      zr.off('mouseup', this._onBrushEnd);\n    }\n\n    barGroup.add(clickPanel);\n  };\n\n  SliderZoomView.prototype._renderDataShadow = function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    this._displayables.dataShadowSegs = [];\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel;\n\n    function createDataShadowGroup(isSelectedArea) {\n      var model = dataZoomModel.getModel(isSelectedArea ? 'selectedDataBackground' : 'dataBackground');\n      var group = new graphic.Group();\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaPoints\n        },\n        segmentIgnoreThreshold: 1,\n        style: model.getModel('areaStyle').getAreaStyle(),\n        silent: true,\n        z2: -20\n      });\n      var polyline = new graphic.Polyline({\n        shape: {\n          points: linePoints\n        },\n        segmentIgnoreThreshold: 1,\n        style: model.getModel('lineStyle').getLineStyle(),\n        silent: true,\n        z2: -19\n      });\n      group.add(polygon);\n      group.add(polyline);\n      return group;\n    } // let dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n\n    for (var i = 0; i < 3; i++) {\n      var group = createDataShadowGroup(i === 1);\n\n      this._displayables.sliderGroup.add(group);\n\n      this._displayables.dataShadowSegs.push(group);\n    }\n  };\n\n  SliderZoomView.prototype._prepareDataShadowInfo = function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(axisDim, axisIndex).getTargetSeriesModels();\n      each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(getAxisMainType(axisDim), axisIndex).axis;\n        var otherDim = getOtherDim(axisDim);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: axisDim,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  };\n\n  SliderZoomView.prototype._renderHandle = function () {\n    var thisGroup = this.group;\n    var displayables = this._displayables;\n    var handles = displayables.handles = [null, null];\n    var handleLabels = displayables.handleLabels = [null, null];\n    var sliderGroup = this._displayables.sliderGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api;\n    var borderRadius = dataZoomModel.get('borderRadius') || 0;\n    var brushSelect = dataZoomModel.get('brushSelect');\n    var filler = displayables.filler = new Rect({\n      silent: brushSelect,\n      style: {\n        fill: dataZoomModel.get('fillerColor')\n      },\n      textConfig: {\n        position: 'inside'\n      }\n    });\n    sliderGroup.add(filler); // Frame border.\n\n    sliderGroup.add(new Rect({\n      silent: true,\n      subPixelOptimize: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1],\n        r: borderRadius\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') // deprecated option\n        || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })); // Left and right handle to resize\n\n    each([0, 1], function (handleIndex) {\n      var iconStr = dataZoomModel.get('handleIcon');\n\n      if (!symbolBuildProxies[iconStr] && iconStr.indexOf('path://') < 0 && iconStr.indexOf('image://') < 0) {\n        // Compatitable with the old icon parsers. Which can use a path string without path://\n        iconStr = 'path://' + iconStr;\n\n        if (process.env.NODE_ENV !== 'production') {\n          deprecateLog('handleIcon now needs \\'path://\\' prefix when using a path string');\n        }\n      }\n\n      var path = createSymbol(iconStr, -1, 0, 2, 2, null, true);\n      path.attr({\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false),\n        z2: 5\n      });\n      var bRect = path.getBoundingRect();\n      var handleSize = dataZoomModel.get('handleSize');\n      this._handleHeight = parsePercent(handleSize, this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      path.style.strokeNoScale = true;\n      path.rectHover = true;\n      path.ensureState('emphasis').style = dataZoomModel.getModel(['emphasis', 'handleStyle']).getItemStyle();\n      enableHoverEmphasis(path);\n      var handleColor = dataZoomModel.get('handleColor'); // deprecated option\n      // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      sliderGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.getModel('textStyle');\n      thisGroup.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: createTextStyle(textStyleModel, {\n          x: 0,\n          y: 0,\n          text: '',\n          verticalAlign: 'middle',\n          align: 'center',\n          fill: textStyleModel.getTextColor(),\n          font: textStyleModel.getFont()\n        }),\n        z2: 10\n      }));\n    }, this); // Handle to move. Only visible when brushSelect is set true.\n\n    var actualMoveZone = filler;\n\n    if (brushSelect) {\n      var moveHandleHeight = parsePercent(dataZoomModel.get('moveHandleSize'), size[1]);\n      var moveHandle_1 = displayables.moveHandle = new graphic.Rect({\n        style: dataZoomModel.getModel('moveHandleStyle').getItemStyle(),\n        silent: true,\n        shape: {\n          r: [0, 0, 2, 2],\n          y: size[1] - 0.5,\n          height: moveHandleHeight\n        }\n      });\n      var iconSize = moveHandleHeight * 0.8;\n      var moveHandleIcon = displayables.moveHandleIcon = createSymbol(dataZoomModel.get('moveHandleIcon'), -iconSize / 2, -iconSize / 2, iconSize, iconSize, '#fff', true);\n      moveHandleIcon.silent = true;\n      moveHandleIcon.y = size[1] + moveHandleHeight / 2 - 0.5;\n      moveHandle_1.ensureState('emphasis').style = dataZoomModel.getModel(['emphasis', 'moveHandleStyle']).getItemStyle();\n      var moveZoneExpandSize = Math.min(size[1] / 2, Math.max(moveHandleHeight, 10));\n      actualMoveZone = displayables.moveZone = new graphic.Rect({\n        invisible: true,\n        shape: {\n          y: size[1] - moveZoneExpandSize,\n          height: moveHandleHeight + moveZoneExpandSize\n        }\n      });\n      actualMoveZone.on('mouseover', function () {\n        api.enterEmphasis(moveHandle_1);\n      }).on('mouseout', function () {\n        api.leaveEmphasis(moveHandle_1);\n      });\n      sliderGroup.add(moveHandle_1);\n      sliderGroup.add(moveHandleIcon);\n      sliderGroup.add(actualMoveZone);\n    }\n\n    actualMoveZone.attr({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false)\n    });\n  };\n\n  SliderZoomView.prototype._resetInterval = function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  };\n\n  SliderZoomView.prototype._updateInterval = function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    var lastRange = this._range;\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\n  };\n\n  SliderZoomView.prototype._updateView = function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scaleX: handleHeight / 2,\n        scaleY: handleHeight / 2,\n        // This is a trick, by adding an extra tiny offset to let the default handle's end point align to the drag window.\n        // NOTE: It may affect some custom shapes a bit. But we prefer to have better result by default.\n        x: handleEnds[handleIndex] + (handleIndex ? -1 : 1),\n        y: size[1] / 2 - handleHeight / 2\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n    var viewExtent = {\n      x: handleInterval[0],\n      width: handleInterval[1] - handleInterval[0]\n    }; // Move handle\n\n    if (displaybles.moveHandle) {\n      displaybles.moveHandle.setShape(viewExtent);\n      displaybles.moveZone.setShape(viewExtent); // Force update path on the invisible object\n\n      displaybles.moveZone.getBoundingRect();\n      displaybles.moveHandleIcon && displaybles.moveHandleIcon.attr('x', viewExtent.x + viewExtent.width / 2);\n    } // update clip path of shadow.\n\n\n    var dataShadowSegs = displaybles.dataShadowSegs;\n    var segIntervals = [0, handleInterval[0], handleInterval[1], size[0]];\n\n    for (var i = 0; i < dataShadowSegs.length; i++) {\n      var segGroup = dataShadowSegs[i];\n      var clipPath = segGroup.getClipPath();\n\n      if (!clipPath) {\n        clipPath = new graphic.Rect();\n        segGroup.setClipPath(clipPath);\n      }\n\n      clipPath.setShape({\n        x: segIntervals[i],\n        y: 0,\n        width: segIntervals[i + 1] - segIntervals[i],\n        height: size[1]\n      });\n    }\n\n    this._updateDataInfo(nonRealtime);\n  };\n\n  SliderZoomView.prototype._updateDataInfo = function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        verticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        align: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  };\n\n  SliderZoomView.prototype._formatLabel = function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel({\n      value: Math.round(value)\n    }) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return isFunction(labelFormatter) ? labelFormatter(value, valueStr) : isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  };\n  /**\n   * @param showOrHide true: show, false: hide\n   */\n\n\n  SliderZoomView.prototype._showDataInfo = function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var displayables = this._displayables;\n    var handleLabels = displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide); // Highlight move handle\n\n    displayables.moveHandle && this.api[showOrHide ? 'enterEmphasis' : 'leaveEmphasis'](displayables.moveHandle, 1);\n  };\n\n  SliderZoomView.prototype._onDragMove = function (handleIndex, dx, dy, event) {\n    this._dragging = true; // For mobile device, prevent screen slider on the button.\n\n    eventTool.stop(event.event); // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.sliderGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    var changed = this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\n    // which cause bad visual effect when progressive enabled.\n\n\n    changed && realtime && this._dispatchZoomAction(true);\n  };\n\n  SliderZoomView.prototype._onDragEnd = function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction(false);\n  };\n\n  SliderZoomView.prototype._onClickPanel = function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.sliderGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    var changed = this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    changed && this._dispatchZoomAction(false);\n  };\n\n  SliderZoomView.prototype._onBrushStart = function (e) {\n    var x = e.offsetX;\n    var y = e.offsetY;\n    this._brushStart = new graphic.Point(x, y);\n    this._brushing = true;\n    this._brushStartTime = +new Date(); // this._updateBrushRect(x, y);\n  };\n\n  SliderZoomView.prototype._onBrushEnd = function (e) {\n    if (!this._brushing) {\n      return;\n    }\n\n    var brushRect = this._displayables.brushRect;\n    this._brushing = false;\n\n    if (!brushRect) {\n      return;\n    }\n\n    brushRect.attr('ignore', true);\n    var brushShape = brushRect.shape;\n    var brushEndTime = +new Date(); // console.log(brushEndTime - this._brushStartTime);\n\n    if (brushEndTime - this._brushStartTime < 200 && Math.abs(brushShape.width) < 5) {\n      // Will treat it as a click\n      return;\n    }\n\n    var viewExtend = this._getViewExtent();\n\n    var percentExtent = [0, 100];\n    this._range = asc([linearMap(brushShape.x, viewExtend, percentExtent, true), linearMap(brushShape.x + brushShape.width, viewExtend, percentExtent, true)]);\n    this._handleEnds = [brushShape.x, brushShape.x + brushShape.width];\n\n    this._updateView();\n\n    this._dispatchZoomAction(false);\n  };\n\n  SliderZoomView.prototype._onBrush = function (e) {\n    if (this._brushing) {\n      // For mobile device, prevent screen slider on the button.\n      eventTool.stop(e.event);\n\n      this._updateBrushRect(e.offsetX, e.offsetY);\n    }\n  };\n\n  SliderZoomView.prototype._updateBrushRect = function (mouseX, mouseY) {\n    var displayables = this._displayables;\n    var dataZoomModel = this.dataZoomModel;\n    var brushRect = displayables.brushRect;\n\n    if (!brushRect) {\n      brushRect = displayables.brushRect = new Rect({\n        silent: true,\n        style: dataZoomModel.getModel('brushStyle').getItemStyle()\n      });\n      displayables.sliderGroup.add(brushRect);\n    }\n\n    brushRect.attr('ignore', false);\n    var brushStart = this._brushStart;\n    var sliderGroup = this._displayables.sliderGroup;\n    var endPoint = sliderGroup.transformCoordToLocal(mouseX, mouseY);\n    var startPoint = sliderGroup.transformCoordToLocal(brushStart.x, brushStart.y);\n    var size = this._size;\n    endPoint[0] = Math.max(Math.min(size[0], endPoint[0]), 0);\n    brushRect.setShape({\n      x: startPoint[0],\n      y: 0,\n      width: endPoint[0] - startPoint[0],\n      height: size[1]\n    });\n  };\n  /**\n   * This action will be throttled.\n   */\n\n\n  SliderZoomView.prototype._dispatchZoomAction = function (realtime) {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      animation: realtime ? REALTIME_ANIMATION_CONFIG : null,\n      start: range[0],\n      end: range[1]\n    });\n  };\n\n  SliderZoomView.prototype._findCoordRect = function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    var coordSysInfoList = collectReferCoordSysModelInfo(this.dataZoomModel).infoList;\n\n    if (!rect && coordSysInfoList.length) {\n      var coordSys = coordSysInfoList[0].model.coordinateSystem;\n      rect = coordSys.getRect && coordSys.getRect();\n    }\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  };\n\n  SliderZoomView.type = 'dataZoom.slider';\n  return SliderZoomView;\n}(DataZoomView);\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nexport default SliderZoomView;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/component/dataZoom/SliderZoomView.js"],"names":["__extends","bind","each","isFunction","isString","indexOf","eventTool","graphic","throttle","DataZoomView","linearMap","asc","parsePercent","layout","sliderMove","getAxisMainType","collectReferCoordSysModelInfo","enableHoverEmphasis","createSymbol","symbolBuildProxies","deprecateLog","createTextStyle","Rect","DEFAULT_LOCATION_EDGE_GAP","DEFAULT_FRAME_BORDER_WIDTH","DEFAULT_FILLER_SIZE","DEFAULT_MOVE_HANDLE_SIZE","HORIZONTAL","VERTICAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","REALTIME_ANIMATION_CONFIG","easing","duration","delay","SliderZoomView","_super","_this","apply","arguments","type","_displayables","prototype","init","ecModel","api","_onBrush","_onBrushEnd","render","dataZoomModel","payload","createOrUpdate","get","_orient","getOrient","group","removeAll","noTarget","_clear","from","uid","_buildView","_updateView","dispose","clear","zr","getZr","off","thisGroup","_brushing","brushRect","_resetLocation","_resetInterval","barGroup","sliderGroup","Group","_renderBackground","_renderHandle","_renderDataShadow","add","_positionGroup","showMoveHandle","moveHandleSize","coordRect","_findCoordRect","ecSize","width","getWidth","height","getHeight","positionInfo","right","x","top","y","layoutParams","getLayoutParams","option","name","layoutRect","getLayoutRect","_location","_size","reverse","location","orient","targetAxisModel","getFirstTargetAxisModel","inverse","otherAxisInverse","_dataShadowInfo","attr","scaleY","scaleX","rotation","Math","PI","rect","getBoundingRect","markRedraw","_getViewExtent","size","brushSelect","silent","shape","style","fill","z2","clickPanel","onclick","_onClickPanel","on","_onBrushStart","cursor","info","_prepareDataShadowInfo","dataShadowSegs","seriesModel","series","data","getRawData","otherDim","getShadowDim","otherDataExtent","getDataExtent","otherOffset","otherShadowExtent","thisShadowExtent","areaPoints","linePoints","step","count","thisCoord","stride","round","lastIsEmpty","value","index","isEmpty","isNaN","otherCoord","push","length","createDataShadowGroup","isSelectedArea","model","getModel","polygon","Polygon","points","segmentIgnoreThreshold","getAreaStyle","polyline","Polyline","getLineStyle","i","showDataShadow","result","eachTargetAxis","axisDim","axisIndex","seriesModels","getAxisProxy","getTargetSeriesModels","thisAxis","getComponent","axis","getOtherDim","coordSys","coordinateSystem","getOtherAxis","getData","mapDimension","thisDim","displayables","handles","handleLabels","borderRadius","filler","textConfig","position","subPixelOptimize","r","stroke","lineWidth","handleIndex","iconStr","process","env","NODE_ENV","path","getCursor","draggable","drift","_onDragMove","ondragend","_onDragEnd","onmouseover","_showDataInfo","onmouseout","bRect","handleSize","_handleHeight","_handleWidth","setStyle","getItemStyle","strokeNoScale","rectHover","ensureState","handleColor","textStyleModel","Text","invisible","text","verticalAlign","align","getTextColor","font","getFont","actualMoveZone","moveHandleHeight","moveHandle_1","moveHandle","iconSize","moveHandleIcon","moveZoneExpandSize","min","max","moveZone","enterEmphasis","leaveEmphasis","ondragstart","range","_range","getPercentRange","viewExtent","_handleEnds","_updateInterval","delta","handleEnds","viewExtend","minMaxSpan","findRepresentativeAxisProxy","getMinMaxSpan","percentExtent","minSpan","maxSpan","lastRange","nonRealtime","displaybles","handleInterval","slice","handle","handleHeight","setShape","segIntervals","segGroup","clipPath","getClipPath","setClipPath","_updateDataInfo","labelTexts","axisProxy","getAxisModel","dataInterval","calculateDataWindow","start","end","valueWindow","getDataValueWindow","_formatLabel","orderedHandleEnds","setLabel","call","barTransform","getTransform","parent","direction","transformDirection","offset","textPoint","applyTransform","labelFormatter","labelPrecision","getPixelPrecision","valueStr","scale","getLabel","toFixed","replace","showOrHide","_dragging","dx","dy","event","stop","getLocalTransform","vertex","changed","realtime","_dispatchZoomAction","e","localPoint","transformCoordToLocal","offsetX","offsetY","center","_brushStart","Point","_brushStartTime","Date","brushShape","brushEndTime","abs","_updateBrushRect","mouseX","mouseY","brushStart","endPoint","startPoint","dispatchAction","dataZoomId","id","animation","coordSysInfoList","infoList","getRect","map","radius","angle"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { bind, each, isFunction, isString, indexOf } from 'zrender/lib/core/util';\nimport * as eventTool from 'zrender/lib/core/event';\nimport * as graphic from '../../util/graphic';\nimport * as throttle from '../../util/throttle';\nimport DataZoomView from './DataZoomView';\nimport { linearMap, asc, parsePercent } from '../../util/number';\nimport * as layout from '../../util/layout';\nimport sliderMove from '../helper/sliderMove';\nimport { getAxisMainType, collectReferCoordSysModelInfo } from './helper';\nimport { enableHoverEmphasis } from '../../util/states';\nimport { createSymbol, symbolBuildProxies } from '../../util/symbol';\nimport { deprecateLog } from '../../util/log';\nimport { createTextStyle } from '../../label/labelStyle';\nvar Rect = graphic.Rect; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar DEFAULT_MOVE_HANDLE_SIZE = 7;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar REALTIME_ANIMATION_CONFIG = {\n  easing: 'cubicOut',\n  duration: 100,\n  delay: 0\n};\n\nvar SliderZoomView =\n/** @class */\nfunction (_super) {\n  __extends(SliderZoomView, _super);\n\n  function SliderZoomView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = SliderZoomView.type;\n    _this._displayables = {};\n    return _this;\n  }\n\n  SliderZoomView.prototype.init = function (ecModel, api) {\n    this.api = api; // A unique handler for each dataZoom component\n\n    this._onBrush = bind(this._onBrush, this);\n    this._onBrushEnd = bind(this._onBrushEnd, this);\n  };\n\n  SliderZoomView.prototype.render = function (dataZoomModel, ecModel, api, payload) {\n    _super.prototype.render.apply(this, arguments);\n\n    throttle.createOrUpdate(this, '_dispatchZoomAction', dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.getOrient();\n\n    if (dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    if (dataZoomModel.noTarget()) {\n      this._clear();\n\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  };\n\n  SliderZoomView.prototype.dispose = function () {\n    this._clear();\n\n    _super.prototype.dispose.apply(this, arguments);\n  };\n\n  SliderZoomView.prototype._clear = function () {\n    throttle.clear(this, '_dispatchZoomAction');\n    var zr = this.api.getZr();\n    zr.off('mousemove', this._onBrush);\n    zr.off('mouseup', this._onBrushEnd);\n  };\n\n  SliderZoomView.prototype._buildView = function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    this._brushing = false;\n    this._displayables.brushRect = null;\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.sliderGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  };\n\n  SliderZoomView.prototype._resetLocation = function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api;\n    var showMoveHandle = dataZoomModel.get('brushSelect');\n    var moveHandleSize = showMoveHandle ? DEFAULT_MOVE_HANDLE_SIZE : 0; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP - moveHandleSize,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  };\n\n  SliderZoomView.prototype._positionGroup = function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var sliderGroup = this._displayables.sliderGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    sliderGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scaleY: otherAxisInverse ? 1 : -1,\n      scaleX: 1\n    } : orient === HORIZONTAL && inverse ? {\n      scaleY: otherAxisInverse ? 1 : -1,\n      scaleX: -1\n    } : orient === VERTICAL && !inverse ? {\n      scaleY: otherAxisInverse ? -1 : 1,\n      scaleX: 1,\n      rotation: Math.PI / 2\n    } // Dont use Math.PI, considering shadow direction.\n    : {\n      scaleY: otherAxisInverse ? -1 : 1,\n      scaleX: -1,\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([sliderGroup]);\n    thisGroup.x = location.x - rect.x;\n    thisGroup.y = location.y - rect.y;\n    thisGroup.markRedraw();\n  };\n\n  SliderZoomView.prototype._getViewExtent = function () {\n    return [0, this._size[0]];\n  };\n\n  SliderZoomView.prototype._renderBackground = function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.sliderGroup;\n    var brushSelect = dataZoomModel.get('brushSelect');\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    var clickPanel = new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: bind(this._onClickPanel, this)\n    });\n    var zr = this.api.getZr();\n\n    if (brushSelect) {\n      clickPanel.on('mousedown', this._onBrushStart, this);\n      clickPanel.cursor = 'crosshair';\n      zr.on('mousemove', this._onBrush);\n      zr.on('mouseup', this._onBrushEnd);\n    } else {\n      zr.off('mousemove', this._onBrush);\n      zr.off('mouseup', this._onBrushEnd);\n    }\n\n    barGroup.add(clickPanel);\n  };\n\n  SliderZoomView.prototype._renderDataShadow = function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    this._displayables.dataShadowSegs = [];\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel;\n\n    function createDataShadowGroup(isSelectedArea) {\n      var model = dataZoomModel.getModel(isSelectedArea ? 'selectedDataBackground' : 'dataBackground');\n      var group = new graphic.Group();\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaPoints\n        },\n        segmentIgnoreThreshold: 1,\n        style: model.getModel('areaStyle').getAreaStyle(),\n        silent: true,\n        z2: -20\n      });\n      var polyline = new graphic.Polyline({\n        shape: {\n          points: linePoints\n        },\n        segmentIgnoreThreshold: 1,\n        style: model.getModel('lineStyle').getLineStyle(),\n        silent: true,\n        z2: -19\n      });\n      group.add(polygon);\n      group.add(polyline);\n      return group;\n    } // let dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n\n    for (var i = 0; i < 3; i++) {\n      var group = createDataShadowGroup(i === 1);\n\n      this._displayables.sliderGroup.add(group);\n\n      this._displayables.dataShadowSegs.push(group);\n    }\n  };\n\n  SliderZoomView.prototype._prepareDataShadowInfo = function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(axisDim, axisIndex).getTargetSeriesModels();\n      each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(getAxisMainType(axisDim), axisIndex).axis;\n        var otherDim = getOtherDim(axisDim);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: axisDim,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  };\n\n  SliderZoomView.prototype._renderHandle = function () {\n    var thisGroup = this.group;\n    var displayables = this._displayables;\n    var handles = displayables.handles = [null, null];\n    var handleLabels = displayables.handleLabels = [null, null];\n    var sliderGroup = this._displayables.sliderGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api;\n    var borderRadius = dataZoomModel.get('borderRadius') || 0;\n    var brushSelect = dataZoomModel.get('brushSelect');\n    var filler = displayables.filler = new Rect({\n      silent: brushSelect,\n      style: {\n        fill: dataZoomModel.get('fillerColor')\n      },\n      textConfig: {\n        position: 'inside'\n      }\n    });\n    sliderGroup.add(filler); // Frame border.\n\n    sliderGroup.add(new Rect({\n      silent: true,\n      subPixelOptimize: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1],\n        r: borderRadius\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') // deprecated option\n        || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })); // Left and right handle to resize\n\n    each([0, 1], function (handleIndex) {\n      var iconStr = dataZoomModel.get('handleIcon');\n\n      if (!symbolBuildProxies[iconStr] && iconStr.indexOf('path://') < 0 && iconStr.indexOf('image://') < 0) {\n        // Compatitable with the old icon parsers. Which can use a path string without path://\n        iconStr = 'path://' + iconStr;\n\n        if (process.env.NODE_ENV !== 'production') {\n          deprecateLog('handleIcon now needs \\'path://\\' prefix when using a path string');\n        }\n      }\n\n      var path = createSymbol(iconStr, -1, 0, 2, 2, null, true);\n      path.attr({\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false),\n        z2: 5\n      });\n      var bRect = path.getBoundingRect();\n      var handleSize = dataZoomModel.get('handleSize');\n      this._handleHeight = parsePercent(handleSize, this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      path.style.strokeNoScale = true;\n      path.rectHover = true;\n      path.ensureState('emphasis').style = dataZoomModel.getModel(['emphasis', 'handleStyle']).getItemStyle();\n      enableHoverEmphasis(path);\n      var handleColor = dataZoomModel.get('handleColor'); // deprecated option\n      // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      sliderGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.getModel('textStyle');\n      thisGroup.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: createTextStyle(textStyleModel, {\n          x: 0,\n          y: 0,\n          text: '',\n          verticalAlign: 'middle',\n          align: 'center',\n          fill: textStyleModel.getTextColor(),\n          font: textStyleModel.getFont()\n        }),\n        z2: 10\n      }));\n    }, this); // Handle to move. Only visible when brushSelect is set true.\n\n    var actualMoveZone = filler;\n\n    if (brushSelect) {\n      var moveHandleHeight = parsePercent(dataZoomModel.get('moveHandleSize'), size[1]);\n      var moveHandle_1 = displayables.moveHandle = new graphic.Rect({\n        style: dataZoomModel.getModel('moveHandleStyle').getItemStyle(),\n        silent: true,\n        shape: {\n          r: [0, 0, 2, 2],\n          y: size[1] - 0.5,\n          height: moveHandleHeight\n        }\n      });\n      var iconSize = moveHandleHeight * 0.8;\n      var moveHandleIcon = displayables.moveHandleIcon = createSymbol(dataZoomModel.get('moveHandleIcon'), -iconSize / 2, -iconSize / 2, iconSize, iconSize, '#fff', true);\n      moveHandleIcon.silent = true;\n      moveHandleIcon.y = size[1] + moveHandleHeight / 2 - 0.5;\n      moveHandle_1.ensureState('emphasis').style = dataZoomModel.getModel(['emphasis', 'moveHandleStyle']).getItemStyle();\n      var moveZoneExpandSize = Math.min(size[1] / 2, Math.max(moveHandleHeight, 10));\n      actualMoveZone = displayables.moveZone = new graphic.Rect({\n        invisible: true,\n        shape: {\n          y: size[1] - moveZoneExpandSize,\n          height: moveHandleHeight + moveZoneExpandSize\n        }\n      });\n      actualMoveZone.on('mouseover', function () {\n        api.enterEmphasis(moveHandle_1);\n      }).on('mouseout', function () {\n        api.leaveEmphasis(moveHandle_1);\n      });\n      sliderGroup.add(moveHandle_1);\n      sliderGroup.add(moveHandleIcon);\n      sliderGroup.add(actualMoveZone);\n    }\n\n    actualMoveZone.attr({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false)\n    });\n  };\n\n  SliderZoomView.prototype._resetInterval = function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  };\n\n  SliderZoomView.prototype._updateInterval = function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    var lastRange = this._range;\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\n  };\n\n  SliderZoomView.prototype._updateView = function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scaleX: handleHeight / 2,\n        scaleY: handleHeight / 2,\n        // This is a trick, by adding an extra tiny offset to let the default handle's end point align to the drag window.\n        // NOTE: It may affect some custom shapes a bit. But we prefer to have better result by default.\n        x: handleEnds[handleIndex] + (handleIndex ? -1 : 1),\n        y: size[1] / 2 - handleHeight / 2\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n    var viewExtent = {\n      x: handleInterval[0],\n      width: handleInterval[1] - handleInterval[0]\n    }; // Move handle\n\n    if (displaybles.moveHandle) {\n      displaybles.moveHandle.setShape(viewExtent);\n      displaybles.moveZone.setShape(viewExtent); // Force update path on the invisible object\n\n      displaybles.moveZone.getBoundingRect();\n      displaybles.moveHandleIcon && displaybles.moveHandleIcon.attr('x', viewExtent.x + viewExtent.width / 2);\n    } // update clip path of shadow.\n\n\n    var dataShadowSegs = displaybles.dataShadowSegs;\n    var segIntervals = [0, handleInterval[0], handleInterval[1], size[0]];\n\n    for (var i = 0; i < dataShadowSegs.length; i++) {\n      var segGroup = dataShadowSegs[i];\n      var clipPath = segGroup.getClipPath();\n\n      if (!clipPath) {\n        clipPath = new graphic.Rect();\n        segGroup.setClipPath(clipPath);\n      }\n\n      clipPath.setShape({\n        x: segIntervals[i],\n        y: 0,\n        width: segIntervals[i + 1] - segIntervals[i],\n        height: size[1]\n      });\n    }\n\n    this._updateDataInfo(nonRealtime);\n  };\n\n  SliderZoomView.prototype._updateDataInfo = function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        verticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        align: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  };\n\n  SliderZoomView.prototype._formatLabel = function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel({\n      value: Math.round(value)\n    }) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return isFunction(labelFormatter) ? labelFormatter(value, valueStr) : isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  };\n  /**\n   * @param showOrHide true: show, false: hide\n   */\n\n\n  SliderZoomView.prototype._showDataInfo = function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var displayables = this._displayables;\n    var handleLabels = displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide); // Highlight move handle\n\n    displayables.moveHandle && this.api[showOrHide ? 'enterEmphasis' : 'leaveEmphasis'](displayables.moveHandle, 1);\n  };\n\n  SliderZoomView.prototype._onDragMove = function (handleIndex, dx, dy, event) {\n    this._dragging = true; // For mobile device, prevent screen slider on the button.\n\n    eventTool.stop(event.event); // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.sliderGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    var changed = this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\n    // which cause bad visual effect when progressive enabled.\n\n\n    changed && realtime && this._dispatchZoomAction(true);\n  };\n\n  SliderZoomView.prototype._onDragEnd = function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction(false);\n  };\n\n  SliderZoomView.prototype._onClickPanel = function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.sliderGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    var changed = this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    changed && this._dispatchZoomAction(false);\n  };\n\n  SliderZoomView.prototype._onBrushStart = function (e) {\n    var x = e.offsetX;\n    var y = e.offsetY;\n    this._brushStart = new graphic.Point(x, y);\n    this._brushing = true;\n    this._brushStartTime = +new Date(); // this._updateBrushRect(x, y);\n  };\n\n  SliderZoomView.prototype._onBrushEnd = function (e) {\n    if (!this._brushing) {\n      return;\n    }\n\n    var brushRect = this._displayables.brushRect;\n    this._brushing = false;\n\n    if (!brushRect) {\n      return;\n    }\n\n    brushRect.attr('ignore', true);\n    var brushShape = brushRect.shape;\n    var brushEndTime = +new Date(); // console.log(brushEndTime - this._brushStartTime);\n\n    if (brushEndTime - this._brushStartTime < 200 && Math.abs(brushShape.width) < 5) {\n      // Will treat it as a click\n      return;\n    }\n\n    var viewExtend = this._getViewExtent();\n\n    var percentExtent = [0, 100];\n    this._range = asc([linearMap(brushShape.x, viewExtend, percentExtent, true), linearMap(brushShape.x + brushShape.width, viewExtend, percentExtent, true)]);\n    this._handleEnds = [brushShape.x, brushShape.x + brushShape.width];\n\n    this._updateView();\n\n    this._dispatchZoomAction(false);\n  };\n\n  SliderZoomView.prototype._onBrush = function (e) {\n    if (this._brushing) {\n      // For mobile device, prevent screen slider on the button.\n      eventTool.stop(e.event);\n\n      this._updateBrushRect(e.offsetX, e.offsetY);\n    }\n  };\n\n  SliderZoomView.prototype._updateBrushRect = function (mouseX, mouseY) {\n    var displayables = this._displayables;\n    var dataZoomModel = this.dataZoomModel;\n    var brushRect = displayables.brushRect;\n\n    if (!brushRect) {\n      brushRect = displayables.brushRect = new Rect({\n        silent: true,\n        style: dataZoomModel.getModel('brushStyle').getItemStyle()\n      });\n      displayables.sliderGroup.add(brushRect);\n    }\n\n    brushRect.attr('ignore', false);\n    var brushStart = this._brushStart;\n    var sliderGroup = this._displayables.sliderGroup;\n    var endPoint = sliderGroup.transformCoordToLocal(mouseX, mouseY);\n    var startPoint = sliderGroup.transformCoordToLocal(brushStart.x, brushStart.y);\n    var size = this._size;\n    endPoint[0] = Math.max(Math.min(size[0], endPoint[0]), 0);\n    brushRect.setShape({\n      x: startPoint[0],\n      y: 0,\n      width: endPoint[0] - startPoint[0],\n      height: size[1]\n    });\n  };\n  /**\n   * This action will be throttled.\n   */\n\n\n  SliderZoomView.prototype._dispatchZoomAction = function (realtime) {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      animation: realtime ? REALTIME_ANIMATION_CONFIG : null,\n      start: range[0],\n      end: range[1]\n    });\n  };\n\n  SliderZoomView.prototype._findCoordRect = function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    var coordSysInfoList = collectReferCoordSysModelInfo(this.dataZoomModel).infoList;\n\n    if (!rect && coordSysInfoList.length) {\n      var coordSys = coordSysInfoList[0].model.coordinateSystem;\n      rect = coordSys.getRect && coordSys.getRect();\n    }\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  };\n\n  SliderZoomView.type = 'dataZoom.slider';\n  return SliderZoomView;\n}(DataZoomView);\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nexport default SliderZoomView;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createElement, normalizeColor } from './core';\nimport * as util from '../core/util';\nimport Path from '../graphic/Path';\nimport ZRImage from '../graphic/Image';\nimport TSpan from '../graphic/TSpan';\nimport arrayDiff from '../core/arrayDiff';\nimport GradientManager from './helper/GradientManager';\nimport PatternManager from './helper/PatternManager';\nimport ClippathManager, { hasClipPath } from './helper/ClippathManager';\nimport ShadowManager from './helper/ShadowManager';\nimport { path as svgPath, image as svgImage, text as svgText } from './graphic';\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZRImage) {\n    return svgImage;\n  } else if (el instanceof TSpan) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction removeFromMyParent(child) {\n  if (child && child.parentNode) {\n    child.parentNode.removeChild(child);\n  }\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n\nvar SVGPainter = function () {\n  function SVGPainter(root, storage, opts, zrId) {\n    this.type = 'svg';\n    this.refreshHover = createMethodNotSupport('refreshHover');\n    this.pathToImage = createMethodNotSupport('pathToImage');\n    this.configLayer = createMethodNotSupport('configLayer');\n    this.root = root;\n    this.storage = storage;\n    this._opts = opts = util.extend({}, opts || {});\n    var svgDom = createElement('svg');\n    svgDom.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns', 'http://www.w3.org/2000/svg');\n    svgDom.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', 'http://www.w3.org/1999/xlink');\n    svgDom.setAttribute('version', '1.1');\n    svgDom.setAttribute('baseProfile', 'full');\n    svgDom.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n    var bgRoot = createElement('g');\n    svgDom.appendChild(bgRoot);\n    var svgRoot = createElement('g');\n    svgDom.appendChild(svgRoot);\n    this._gradientManager = new GradientManager(zrId, svgRoot);\n    this._patternManager = new PatternManager(zrId, svgRoot);\n    this._clipPathManager = new ClippathManager(zrId, svgRoot);\n    this._shadowManager = new ShadowManager(zrId, svgRoot);\n    var viewport = document.createElement('div');\n    viewport.style.cssText = 'overflow:hidden;position:relative';\n    this._svgDom = svgDom;\n    this._svgRoot = svgRoot;\n    this._backgroundRoot = bgRoot;\n    this._viewport = viewport;\n    root.appendChild(viewport);\n    viewport.appendChild(svgDom);\n    this.resize(opts.width, opts.height);\n    this._visibleList = [];\n  }\n\n  SVGPainter.prototype.getType = function () {\n    return 'svg';\n  };\n\n  SVGPainter.prototype.getViewportRoot = function () {\n    return this._viewport;\n  };\n\n  SVGPainter.prototype.getSvgDom = function () {\n    return this._svgDom;\n  };\n\n  SVGPainter.prototype.getSvgRoot = function () {\n    return this._svgRoot;\n  };\n\n  SVGPainter.prototype.getViewportRootOffset = function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  };\n\n  SVGPainter.prototype.refresh = function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  };\n\n  SVGPainter.prototype.setBackgroundColor = function (backgroundColor) {\n    if (this._backgroundRoot && this._backgroundNode) {\n      this._backgroundRoot.removeChild(this._backgroundNode);\n    }\n\n    var bgNode = createElement('rect');\n    bgNode.setAttribute('width', this.getWidth());\n    bgNode.setAttribute('height', this.getHeight());\n    bgNode.setAttribute('x', 0);\n    bgNode.setAttribute('y', 0);\n    bgNode.setAttribute('id', 0);\n\n    var _a = normalizeColor(backgroundColor),\n        color = _a.color,\n        opacity = _a.opacity;\n\n    bgNode.setAttribute('fill', color);\n    bgNode.setAttribute('fill-opacity', opacity);\n\n    this._backgroundRoot.appendChild(bgNode);\n\n    this._backgroundNode = bgNode;\n  };\n\n  SVGPainter.prototype.createSVGElement = function (tag) {\n    return createElement(tag);\n  };\n\n  SVGPainter.prototype.paintOne = function (el) {\n    var svgProxy = getSvgProxy(el);\n    svgProxy && svgProxy.brush(el);\n    return getSvgElement(el);\n  };\n\n  SVGPainter.prototype._paintList = function (list) {\n    var gradientManager = this._gradientManager;\n    var patternManager = this._patternManager;\n    var clipPathManager = this._clipPathManager;\n    var shadowManager = this._shadowManager;\n    gradientManager.markAllUnused();\n    patternManager.markAllUnused();\n    clipPathManager.markAllUnused();\n    shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n\n    for (var i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty || !svgElement) {\n          svgProxy && svgProxy.brush(displayable);\n          svgElement = getSvgElement(displayable);\n\n          if (svgElement && displayable.style) {\n            gradientManager.update(displayable.style.fill);\n            gradientManager.update(displayable.style.stroke);\n            patternManager.update(displayable.style.fill);\n            patternManager.update(displayable.style.stroke);\n            shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = 0;\n        }\n\n        if (svgElement) {\n          newVisibleList.push(displayable);\n        }\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement;\n    var topPrevSvgElement;\n\n    for (var i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          hasClipPath(displayable) ? removeFromMyParent(svgElement) : remove(svgRoot, svgElement);\n        }\n      }\n    }\n\n    var prevDisplayable;\n    var currentClipGroup;\n\n    for (var i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        continue;\n      }\n\n      for (var k = 0; k < item.count; k++) {\n        var displayable = newVisibleList[item.indices[k]];\n        var clipGroup = clipPathManager.update(displayable, prevDisplayable);\n\n        if (clipGroup !== currentClipGroup) {\n          prevSvgElement = topPrevSvgElement;\n\n          if (clipGroup) {\n            prevSvgElement ? insertAfter(svgRoot, clipGroup, prevSvgElement) : prepend(svgRoot, clipGroup);\n            topPrevSvgElement = clipGroup;\n            prevSvgElement = null;\n          }\n\n          currentClipGroup = clipGroup;\n        }\n\n        var svgElement = getSvgElement(displayable);\n        prevSvgElement ? insertAfter(currentClipGroup || svgRoot, svgElement, prevSvgElement) : prepend(currentClipGroup || svgRoot, svgElement);\n        prevSvgElement = svgElement || prevSvgElement;\n\n        if (!currentClipGroup) {\n          topPrevSvgElement = prevSvgElement;\n        }\n\n        gradientManager.markUsed(displayable);\n        gradientManager.addWithoutUpdate(svgElement, displayable);\n        patternManager.markUsed(displayable);\n        patternManager.addWithoutUpdate(svgElement, displayable);\n        clipPathManager.markUsed(displayable);\n        prevDisplayable = displayable;\n      }\n    }\n\n    gradientManager.removeUnused();\n    patternManager.removeUnused();\n    clipPathManager.removeUnused();\n    shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  };\n\n  SVGPainter.prototype.resize = function (width, height) {\n    var viewport = this._viewport;\n    viewport.style.display = 'none';\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgDom;\n      svgRoot.setAttribute('width', width + '');\n      svgRoot.setAttribute('height', height + '');\n    }\n\n    if (this._backgroundNode) {\n      this._backgroundNode.setAttribute('width', width);\n\n      this._backgroundNode.setAttribute('height', height);\n    }\n  };\n\n  SVGPainter.prototype.getWidth = function () {\n    return this._width;\n  };\n\n  SVGPainter.prototype.getHeight = function () {\n    return this._height;\n  };\n\n  SVGPainter.prototype._getSize = function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root;\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  };\n\n  SVGPainter.prototype.dispose = function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._backgroundRoot = this._svgDom = this._backgroundNode = this._viewport = this.storage = null;\n  };\n\n  SVGPainter.prototype.clear = function () {\n    var viewportNode = this._viewport;\n\n    if (viewportNode && viewportNode.parentNode) {\n      viewportNode.parentNode.removeChild(viewportNode);\n    }\n  };\n\n  SVGPainter.prototype.toDataURL = function () {\n    this.refresh();\n    var svgDom = this._svgDom;\n    var outerHTML = svgDom.outerHTML || (svgDom.parentNode && svgDom.parentNode).innerHTML;\n    var html = encodeURIComponent(outerHTML.replace(/></g, '>\\n\\r<'));\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  };\n\n  return SVGPainter;\n}();\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    util.logError('In SVG mode painter not support method \"' + method + '\"');\n  };\n}\n\nexport default SVGPainter;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/zrender/lib/svg/Painter.js"],"names":["createElement","normalizeColor","util","Path","ZRImage","TSpan","arrayDiff","GradientManager","PatternManager","ClippathManager","hasClipPath","ShadowManager","path","svgPath","image","svgImage","text","svgText","parseInt10","val","parseInt","getSvgProxy","el","checkParentAvailable","parent","child","parentNode","insertAfter","prevSibling","nextSibling","insertBefore","appendChild","prepend","firstChild","remove","removeChild","removeFromMyParent","getSvgElement","displayable","__svgEl","SVGPainter","root","storage","opts","zrId","type","refreshHover","createMethodNotSupport","pathToImage","configLayer","_opts","extend","svgDom","setAttributeNS","setAttribute","style","cssText","bgRoot","svgRoot","_gradientManager","_patternManager","_clipPathManager","_shadowManager","viewport","document","_svgDom","_svgRoot","_backgroundRoot","_viewport","resize","width","height","_visibleList","prototype","getType","getViewportRoot","getSvgDom","getSvgRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","refresh","list","getDisplayList","_paintList","setBackgroundColor","backgroundColor","_backgroundNode","bgNode","getWidth","getHeight","_a","color","opacity","createSVGElement","tag","paintOne","svgProxy","brush","gradientManager","patternManager","clipPathManager","shadowManager","markAllUnused","visibleList","listLen","length","newVisibleList","i","svgElement","invisible","__dirty","update","fill","stroke","push","diff","prevSvgElement","topPrevSvgElement","item","removed","k","count","indices","prevDisplayable","currentClipGroup","clipGroup","markUsed","addWithoutUpdate","removeUnused","display","_getSize","_width","_height","viewportStyle","whIdx","wh","cwh","plt","prb","parseFloat","stl","defaultView","getComputedStyle","dispose","innerHTML","clear","viewportNode","toDataURL","outerHTML","html","encodeURIComponent","replace","method","logError"],"mappings":"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","sourcesContent":["import { createElement, normalizeColor } from './core';\nimport * as util from '../core/util';\nimport Path from '../graphic/Path';\nimport ZRImage from '../graphic/Image';\nimport TSpan from '../graphic/TSpan';\nimport arrayDiff from '../core/arrayDiff';\nimport GradientManager from './helper/GradientManager';\nimport PatternManager from './helper/PatternManager';\nimport ClippathManager, { hasClipPath } from './helper/ClippathManager';\nimport ShadowManager from './helper/ShadowManager';\nimport { path as svgPath, image as svgImage, text as svgText } from './graphic';\nfunction parseInt10(val) {\n    return parseInt(val, 10);\n}\nfunction getSvgProxy(el) {\n    if (el instanceof Path) {\n        return svgPath;\n    }\n    else if (el instanceof ZRImage) {\n        return svgImage;\n    }\n    else if (el instanceof TSpan) {\n        return svgText;\n    }\n    else {\n        return svgPath;\n    }\n}\nfunction checkParentAvailable(parent, child) {\n    return child && parent && child.parentNode !== parent;\n}\nfunction insertAfter(parent, child, prevSibling) {\n    if (checkParentAvailable(parent, child) && prevSibling) {\n        var nextSibling = prevSibling.nextSibling;\n        nextSibling ? parent.insertBefore(child, nextSibling)\n            : parent.appendChild(child);\n    }\n}\nfunction prepend(parent, child) {\n    if (checkParentAvailable(parent, child)) {\n        var firstChild = parent.firstChild;\n        firstChild ? parent.insertBefore(child, firstChild)\n            : parent.appendChild(child);\n    }\n}\nfunction remove(parent, child) {\n    if (child && parent && child.parentNode === parent) {\n        parent.removeChild(child);\n    }\n}\nfunction removeFromMyParent(child) {\n    if (child && child.parentNode) {\n        child.parentNode.removeChild(child);\n    }\n}\nfunction getSvgElement(displayable) {\n    return displayable.__svgEl;\n}\nvar SVGPainter = (function () {\n    function SVGPainter(root, storage, opts, zrId) {\n        this.type = 'svg';\n        this.refreshHover = createMethodNotSupport('refreshHover');\n        this.pathToImage = createMethodNotSupport('pathToImage');\n        this.configLayer = createMethodNotSupport('configLayer');\n        this.root = root;\n        this.storage = storage;\n        this._opts = opts = util.extend({}, opts || {});\n        var svgDom = createElement('svg');\n        svgDom.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns', 'http://www.w3.org/2000/svg');\n        svgDom.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svgDom.setAttribute('version', '1.1');\n        svgDom.setAttribute('baseProfile', 'full');\n        svgDom.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n        var bgRoot = createElement('g');\n        svgDom.appendChild(bgRoot);\n        var svgRoot = createElement('g');\n        svgDom.appendChild(svgRoot);\n        this._gradientManager = new GradientManager(zrId, svgRoot);\n        this._patternManager = new PatternManager(zrId, svgRoot);\n        this._clipPathManager = new ClippathManager(zrId, svgRoot);\n        this._shadowManager = new ShadowManager(zrId, svgRoot);\n        var viewport = document.createElement('div');\n        viewport.style.cssText = 'overflow:hidden;position:relative';\n        this._svgDom = svgDom;\n        this._svgRoot = svgRoot;\n        this._backgroundRoot = bgRoot;\n        this._viewport = viewport;\n        root.appendChild(viewport);\n        viewport.appendChild(svgDom);\n        this.resize(opts.width, opts.height);\n        this._visibleList = [];\n    }\n    SVGPainter.prototype.getType = function () {\n        return 'svg';\n    };\n    SVGPainter.prototype.getViewportRoot = function () {\n        return this._viewport;\n    };\n    SVGPainter.prototype.getSvgDom = function () {\n        return this._svgDom;\n    };\n    SVGPainter.prototype.getSvgRoot = function () {\n        return this._svgRoot;\n    };\n    SVGPainter.prototype.getViewportRootOffset = function () {\n        var viewportRoot = this.getViewportRoot();\n        if (viewportRoot) {\n            return {\n                offsetLeft: viewportRoot.offsetLeft || 0,\n                offsetTop: viewportRoot.offsetTop || 0\n            };\n        }\n    };\n    SVGPainter.prototype.refresh = function () {\n        var list = this.storage.getDisplayList(true);\n        this._paintList(list);\n    };\n    SVGPainter.prototype.setBackgroundColor = function (backgroundColor) {\n        if (this._backgroundRoot && this._backgroundNode) {\n            this._backgroundRoot.removeChild(this._backgroundNode);\n        }\n        var bgNode = createElement('rect');\n        bgNode.setAttribute('width', this.getWidth());\n        bgNode.setAttribute('height', this.getHeight());\n        bgNode.setAttribute('x', 0);\n        bgNode.setAttribute('y', 0);\n        bgNode.setAttribute('id', 0);\n        var _a = normalizeColor(backgroundColor), color = _a.color, opacity = _a.opacity;\n        bgNode.setAttribute('fill', color);\n        bgNode.setAttribute('fill-opacity', opacity);\n        this._backgroundRoot.appendChild(bgNode);\n        this._backgroundNode = bgNode;\n    };\n    SVGPainter.prototype.createSVGElement = function (tag) {\n        return createElement(tag);\n    };\n    SVGPainter.prototype.paintOne = function (el) {\n        var svgProxy = getSvgProxy(el);\n        svgProxy && svgProxy.brush(el);\n        return getSvgElement(el);\n    };\n    SVGPainter.prototype._paintList = function (list) {\n        var gradientManager = this._gradientManager;\n        var patternManager = this._patternManager;\n        var clipPathManager = this._clipPathManager;\n        var shadowManager = this._shadowManager;\n        gradientManager.markAllUnused();\n        patternManager.markAllUnused();\n        clipPathManager.markAllUnused();\n        shadowManager.markAllUnused();\n        var svgRoot = this._svgRoot;\n        var visibleList = this._visibleList;\n        var listLen = list.length;\n        var newVisibleList = [];\n        for (var i = 0; i < listLen; i++) {\n            var displayable = list[i];\n            var svgProxy = getSvgProxy(displayable);\n            var svgElement = getSvgElement(displayable);\n            if (!displayable.invisible) {\n                if (displayable.__dirty || !svgElement) {\n                    svgProxy && svgProxy.brush(displayable);\n                    svgElement = getSvgElement(displayable);\n                    if (svgElement && displayable.style) {\n                        gradientManager.update(displayable.style.fill);\n                        gradientManager.update(displayable.style.stroke);\n                        patternManager.update(displayable.style.fill);\n                        patternManager.update(displayable.style.stroke);\n                        shadowManager.update(svgElement, displayable);\n                    }\n                    displayable.__dirty = 0;\n                }\n                if (svgElement) {\n                    newVisibleList.push(displayable);\n                }\n            }\n        }\n        var diff = arrayDiff(visibleList, newVisibleList);\n        var prevSvgElement;\n        var topPrevSvgElement;\n        for (var i = 0; i < diff.length; i++) {\n            var item = diff[i];\n            if (item.removed) {\n                for (var k = 0; k < item.count; k++) {\n                    var displayable = visibleList[item.indices[k]];\n                    var svgElement = getSvgElement(displayable);\n                    hasClipPath(displayable) ? removeFromMyParent(svgElement)\n                        : remove(svgRoot, svgElement);\n                }\n            }\n        }\n        var prevDisplayable;\n        var currentClipGroup;\n        for (var i = 0; i < diff.length; i++) {\n            var item = diff[i];\n            if (item.removed) {\n                continue;\n            }\n            for (var k = 0; k < item.count; k++) {\n                var displayable = newVisibleList[item.indices[k]];\n                var clipGroup = clipPathManager.update(displayable, prevDisplayable);\n                if (clipGroup !== currentClipGroup) {\n                    prevSvgElement = topPrevSvgElement;\n                    if (clipGroup) {\n                        prevSvgElement ? insertAfter(svgRoot, clipGroup, prevSvgElement)\n                            : prepend(svgRoot, clipGroup);\n                        topPrevSvgElement = clipGroup;\n                        prevSvgElement = null;\n                    }\n                    currentClipGroup = clipGroup;\n                }\n                var svgElement = getSvgElement(displayable);\n                prevSvgElement\n                    ? insertAfter(currentClipGroup || svgRoot, svgElement, prevSvgElement)\n                    : prepend(currentClipGroup || svgRoot, svgElement);\n                prevSvgElement = svgElement || prevSvgElement;\n                if (!currentClipGroup) {\n                    topPrevSvgElement = prevSvgElement;\n                }\n                gradientManager.markUsed(displayable);\n                gradientManager.addWithoutUpdate(svgElement, displayable);\n                patternManager.markUsed(displayable);\n                patternManager.addWithoutUpdate(svgElement, displayable);\n                clipPathManager.markUsed(displayable);\n                prevDisplayable = displayable;\n            }\n        }\n        gradientManager.removeUnused();\n        patternManager.removeUnused();\n        clipPathManager.removeUnused();\n        shadowManager.removeUnused();\n        this._visibleList = newVisibleList;\n    };\n    SVGPainter.prototype.resize = function (width, height) {\n        var viewport = this._viewport;\n        viewport.style.display = 'none';\n        var opts = this._opts;\n        width != null && (opts.width = width);\n        height != null && (opts.height = height);\n        width = this._getSize(0);\n        height = this._getSize(1);\n        viewport.style.display = '';\n        if (this._width !== width || this._height !== height) {\n            this._width = width;\n            this._height = height;\n            var viewportStyle = viewport.style;\n            viewportStyle.width = width + 'px';\n            viewportStyle.height = height + 'px';\n            var svgRoot = this._svgDom;\n            svgRoot.setAttribute('width', width + '');\n            svgRoot.setAttribute('height', height + '');\n        }\n        if (this._backgroundNode) {\n            this._backgroundNode.setAttribute('width', width);\n            this._backgroundNode.setAttribute('height', height);\n        }\n    };\n    SVGPainter.prototype.getWidth = function () {\n        return this._width;\n    };\n    SVGPainter.prototype.getHeight = function () {\n        return this._height;\n    };\n    SVGPainter.prototype._getSize = function (whIdx) {\n        var opts = this._opts;\n        var wh = ['width', 'height'][whIdx];\n        var cwh = ['clientWidth', 'clientHeight'][whIdx];\n        var plt = ['paddingLeft', 'paddingTop'][whIdx];\n        var prb = ['paddingRight', 'paddingBottom'][whIdx];\n        if (opts[wh] != null && opts[wh] !== 'auto') {\n            return parseFloat(opts[wh]);\n        }\n        var root = this.root;\n        var stl = document.defaultView.getComputedStyle(root);\n        return ((root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n            - (parseInt10(stl[plt]) || 0)\n            - (parseInt10(stl[prb]) || 0)) | 0;\n    };\n    SVGPainter.prototype.dispose = function () {\n        this.root.innerHTML = '';\n        this._svgRoot =\n            this._backgroundRoot =\n                this._svgDom =\n                    this._backgroundNode =\n                        this._viewport = this.storage = null;\n    };\n    SVGPainter.prototype.clear = function () {\n        var viewportNode = this._viewport;\n        if (viewportNode && viewportNode.parentNode) {\n            viewportNode.parentNode.removeChild(viewportNode);\n        }\n    };\n    SVGPainter.prototype.toDataURL = function () {\n        this.refresh();\n        var svgDom = this._svgDom;\n        var outerHTML = svgDom.outerHTML\n            || (svgDom.parentNode && svgDom.parentNode).innerHTML;\n        var html = encodeURIComponent(outerHTML.replace(/></g, '>\\n\\r<'));\n        return 'data:image/svg+xml;charset=UTF-8,' + html;\n    };\n    return SVGPainter;\n}());\nfunction createMethodNotSupport(method) {\n    return function () {\n        util.logError('In SVG mode painter not support method \"' + method + '\"');\n    };\n}\nexport default SVGPainter;\n"]},"metadata":{},"sourceType":"module"}
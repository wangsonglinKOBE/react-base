{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { hasOwn, assert, isString, retrieve2, retrieve3, defaults, each, keys, bind, eqNaN, indexOf } from 'zrender/lib/core/util';\nimport * as graphicUtil from '../../util/graphic';\nimport { setDefaultStateProxy, enableHoverEmphasis } from '../../util/states';\nimport * as labelStyleHelper from '../../label/labelStyle';\nimport { getDefaultLabel } from '../helper/labelHelper';\nimport { getLayoutOnAxis } from '../../layout/barGrid';\nimport DataDiffer from '../../data/DataDiffer';\nimport ChartView from '../../view/Chart';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys';\nimport prepareCartesian2d from '../../coord/cartesian/prepareCustom';\nimport prepareGeo from '../../coord/geo/prepareCustom';\nimport prepareSingleAxis from '../../coord/single/prepareCustom';\nimport preparePolar from '../../coord/polar/prepareCustom';\nimport prepareCalendar from '../../coord/calendar/prepareCustom';\nimport Displayable from 'zrender/lib/graphic/Displayable';\nimport { convertToEC4StyleForCustomSerise, isEC4CompatibleStyle, convertFromEC4CompatibleStyle, warnDeprecated } from '../../util/styleCompat';\nimport { warn, throwError } from '../../util/log';\nimport { createOrUpdatePatternFromDecal } from '../../util/decal';\nimport { TRANSFORM_PROPS, STYLE_VISUAL_TYPE, NON_STYLE_VISUAL_PROPS, customInnerStore } from './CustomSeries';\nimport { prepareShapeOrExtraAllPropsFinal, prepareShapeOrExtraTransitionFrom, prepareStyleTransitionFrom, prepareTransformAllPropsFinal, prepareTransformTransitionFrom } from './prepare';\nvar transformPropNamesStr = keys(TRANSFORM_PROPS).join(', ');\nvar EMPHASIS = 'emphasis';\nvar NORMAL = 'normal';\nvar BLUR = 'blur';\nvar SELECT = 'select';\nvar STATES = [NORMAL, EMPHASIS, BLUR, SELECT];\nvar PATH_ITEM_STYLE = {\n  normal: ['itemStyle'],\n  emphasis: [EMPHASIS, 'itemStyle'],\n  blur: [BLUR, 'itemStyle'],\n  select: [SELECT, 'itemStyle']\n};\nvar PATH_LABEL = {\n  normal: ['label'],\n  emphasis: [EMPHASIS, 'label'],\n  blur: [BLUR, 'label'],\n  select: [SELECT, 'label']\n}; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird update animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\nvar attachedTxInfoTmp = {\n  normal: {},\n  emphasis: {},\n  blur: {},\n  select: {}\n};\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n};\n\nfunction isPath(el) {\n  return el instanceof graphicUtil.Path;\n}\n\nfunction isDisplayable(el) {\n  return el instanceof Displayable;\n}\n\nfunction copyElement(sourceEl, targetEl) {\n  targetEl.copyTransform(sourceEl);\n\n  if (isDisplayable(targetEl) && isDisplayable(sourceEl)) {\n    targetEl.setStyle(sourceEl.style);\n    targetEl.z = sourceEl.z;\n    targetEl.z2 = sourceEl.z2;\n    targetEl.zlevel = sourceEl.zlevel;\n    targetEl.invisible = sourceEl.invisible;\n    targetEl.ignore = sourceEl.ignore;\n\n    if (isPath(targetEl) && isPath(sourceEl)) {\n      targetEl.setShape(sourceEl.shape);\n    }\n  }\n}\n\nvar CustomChartView =\n/** @class */\nfunction (_super) {\n  __extends(CustomChartView, _super);\n\n  function CustomChartView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = CustomChartView.type;\n    return _this;\n  }\n\n  CustomChartView.prototype.render = function (customSeries, ecModel, api, payload) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    if (!oldData) {\n      // Previous render is incremental render or first render.\n      // Needs remove the incremental rendered elements.\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdateItem(api, null, newIdx, renderItem(newIdx, payload), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      doRemoveEl(oldData.getItemGraphicEl(oldIdx), customSeries, group);\n    }).update(function (newIdx, oldIdx) {\n      var oldEl = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdateItem(api, oldEl, newIdx, renderItem(newIdx, payload), customSeries, group, data);\n    }).execute(); // Do clipping\n\n    var clipPath = customSeries.get('clip', true) ? createClipPath(customSeries.coordinateSystem, false, customSeries) : null;\n\n    if (clipPath) {\n      group.setClipPath(clipPath);\n    } else {\n      group.removeClipPath();\n    }\n\n    this._data = data;\n  };\n\n  CustomChartView.prototype.incrementalPrepareRender = function (customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  };\n\n  CustomChartView.prototype.incrementalRender = function (params, customSeries, ecModel, api, payload) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.ensureState('emphasis').hoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdateItem(null, null, idx, renderItem(idx, payload), customSeries, this.group, data);\n      el && el.traverse(setIncrementalAndHoverLayer);\n    }\n  };\n\n  CustomChartView.prototype.filterForExposedEvent = function (eventType, query, targetEl, packedEvent) {\n    var elementName = query.element;\n\n    if (elementName == null || targetEl.name === elementName) {\n      return true;\n    } // Enable to give a name on a group made by `renderItem`, and listen\n    // events that triggerd by its descendents.\n\n\n    while ((targetEl = targetEl.__hostTarget || targetEl.parent) && targetEl !== this.group) {\n      if (targetEl.name === elementName) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  CustomChartView.type = 'custom';\n  return CustomChartView;\n}(ChartView);\n\nexport default CustomChartView;\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el; // Those graphic elements are not shapes. They should not be\n  // overwritten by users, so do them first.\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape; // Using pathRect brings convenience to users sacle svg path.\n\n    var pathRect = shape.width != null && shape.height != null ? {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width,\n      height: shape.height\n    } : null;\n    var pathData = getPathData(shape); // Path is also used for icon, so layout 'center' by default.\n\n    el = graphicUtil.makePath(pathData, null, pathRect, shape.layout || 'center');\n    customInnerStore(el).customPathData = pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    customInnerStore(el).customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({}); // customInnerStore(el).customText = (elOption.style as TextStyleProps).text;\n  } else if (graphicType === 'group') {\n    el = new graphicUtil.Group();\n  } else if (graphicType === 'compoundPath') {\n    throw new Error('\"compoundPath\" is not supported yet.');\n  } else {\n    var Clz = graphicUtil.getShapeClass(graphicType);\n\n    if (!Clz) {\n      var errMsg = '';\n\n      if (process.env.NODE_ENV !== 'production') {\n        errMsg = 'graphic type \"' + graphicType + '\" can not be found.';\n      }\n\n      throwError(errMsg);\n    }\n\n    el = new Clz();\n  }\n\n  customInnerStore(el).customGraphicType = graphicType;\n  el.name = elOption.name; // Compat ec4: the default z2 lift is 1. If changing the number,\n  // some cases probably be broken: hierarchy layout along z, like circle packing,\n  // where emphasis only intending to modify color/border rather than lift z2.\n\n  el.z2EmphasisLift = 1;\n  el.z2SelectLift = 1;\n  return el;\n}\n\nfunction updateElNormal( // Can be null/undefined\napi, el, dataIndex, elOption, attachedTxInfo, seriesModel, isInit, isTextContent) {\n  var txCfgOpt = attachedTxInfo && attachedTxInfo.normal.cfg;\n\n  if (txCfgOpt) {\n    // PENDING: whether use user object directly rather than clone?\n    // TODO:5.0 textConfig transition animation?\n    el.setTextConfig(txCfgOpt);\n  } // Do some normalization on style.\n\n\n  var styleOpt = elOption && elOption.style;\n\n  if (styleOpt) {\n    if (el.type === 'text') {\n      var textOptionStyle = styleOpt; // Compatible with ec4: if `textFill` or `textStroke` exists use them.\n\n      hasOwn(textOptionStyle, 'textFill') && (textOptionStyle.fill = textOptionStyle.textFill);\n      hasOwn(textOptionStyle, 'textStroke') && (textOptionStyle.stroke = textOptionStyle.textStroke);\n    }\n\n    var decalPattern = void 0;\n    var decalObj = isPath(el) ? styleOpt.decal : null;\n\n    if (api && decalObj) {\n      decalObj.dirty = true;\n      decalPattern = createOrUpdatePatternFromDecal(decalObj, api);\n    } // Always overwrite in case user specify this prop.\n\n\n    styleOpt.__decalPattern = decalPattern;\n  } // Save the meta info for further morphing. Like apply on the sub morphing elements.\n\n\n  var store = customInnerStore(el);\n  store.userDuring = elOption.during;\n  var transFromProps = {};\n  var propsToSet = {};\n  prepareShapeOrExtraTransitionFrom('shape', el, elOption, transFromProps, isInit);\n  prepareShapeOrExtraAllPropsFinal('shape', elOption, propsToSet);\n  prepareTransformTransitionFrom(el, elOption, transFromProps, isInit);\n  prepareTransformAllPropsFinal(el, elOption, propsToSet);\n  prepareShapeOrExtraTransitionFrom('extra', el, elOption, transFromProps, isInit);\n  prepareShapeOrExtraAllPropsFinal('extra', elOption, propsToSet);\n  prepareStyleTransitionFrom(el, elOption, styleOpt, transFromProps, isInit);\n  propsToSet.style = styleOpt;\n  applyPropsDirectly(el, propsToSet);\n  applyPropsTransition(el, dataIndex, seriesModel, transFromProps, isInit);\n  applyMiscProps(el, elOption, isTextContent);\n  styleOpt ? el.dirty() : el.markRedraw();\n}\n\nfunction applyMiscProps(el, elOption, isTextContent) {\n  // Merge by default.\n  hasOwn(elOption, 'silent') && (el.silent = elOption.silent);\n  hasOwn(elOption, 'ignore') && (el.ignore = elOption.ignore);\n\n  if (isDisplayable(el)) {\n    hasOwn(elOption, 'invisible') && (el.invisible = elOption.invisible);\n  }\n\n  if (isPath(el)) {\n    hasOwn(elOption, 'autoBatch') && (el.autoBatch = elOption.autoBatch);\n  }\n\n  if (!isTextContent) {\n    // `elOption.info` enables user to mount some info on\n    // elements and use them in event handlers.\n    // Update them only when user specified, otherwise, remain.\n    hasOwn(elOption, 'info') && (customInnerStore(el).info = elOption.info);\n  }\n}\n\nfunction applyPropsDirectly(el, // Can be null/undefined\nallPropsFinal) {\n  var elDisplayable = el.isGroup ? null : el;\n  var styleOpt = allPropsFinal.style;\n\n  if (elDisplayable && styleOpt) {\n    // PENDING: here the input style object is used directly.\n    // Good for performance but bad for compatibility control.\n    elDisplayable.useStyle(styleOpt);\n    var decalPattern = styleOpt.__decalPattern;\n\n    if (decalPattern) {\n      elDisplayable.style.decal = decalPattern;\n    } // When style object changed, how to trade the existing animation?\n    // It is probably complicated and not needed to cover all the cases.\n    // But still need consider the case:\n    // (1) When using init animation on `style.opacity`, and before the animation\n    //     ended users triggers an update by mousewhel. At that time the init\n    //     animation should better be continued rather than terminated.\n    //     So after `useStyle` called, we should change the animation target manually\n    //     to continue the effect of the init animation.\n    // (2) PENDING: If the previous animation targeted at a `val1`, and currently we need\n    //     to update the value to `val2` and no animation declared, should be terminate\n    //     the previous animation or just modify the target of the animation?\n    //     Therotically That will happen not only on `style` but also on `shape` and\n    //     `transfrom` props. But we haven't handle this case at present yet.\n    // (3) PENDING: Is it proper to visit `animators` and `targetName`?\n\n\n    var animators = elDisplayable.animators;\n\n    for (var i = 0; i < animators.length; i++) {\n      var animator = animators[i]; // targetName is the \"topKey\".\n\n      if (animator.targetName === 'style') {\n        animator.changeTarget(elDisplayable.style);\n      }\n    }\n  }\n\n  if (allPropsFinal) {\n    // Not set style here.\n    allPropsFinal.style = null; // Set el to the final state firstly.\n\n    allPropsFinal && el.attr(allPropsFinal);\n    allPropsFinal.style = styleOpt;\n  }\n}\n\nfunction applyPropsTransition(el, dataIndex, seriesModel, // Can be null/undefined\ntransFromProps, isInit) {\n  if (transFromProps) {\n    // NOTE: Do not use `el.updateDuringAnimation` here becuase `el.updateDuringAnimation` will\n    // be called mutiple time in each animation frame. For example, if both \"transform\" props\n    // and shape props and style props changed, it will generate three animator and called\n    // one-by-one in each animation frame.\n    // We use the during in `animateTo/From` params.\n    var userDuring = customInnerStore(el).userDuring; // For simplicity, if during not specified, the previous during will not work any more.\n\n    var cfgDuringCall = userDuring ? bind(duringCall, {\n      el: el,\n      userDuring: userDuring\n    }) : null;\n    var cfg = {\n      dataIndex: dataIndex,\n      isFrom: true,\n      during: cfgDuringCall\n    };\n    isInit ? graphicUtil.initProps(el, transFromProps, seriesModel, cfg) : graphicUtil.updateProps(el, transFromProps, seriesModel, cfg);\n  }\n} // Use it to avoid it be exposed to user.\n\n\nvar tmpDuringScope = {};\nvar customDuringAPI = {\n  // Usually other props do not need to be changed in animation during.\n  setTransform: function (key, val) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(hasOwn(TRANSFORM_PROPS, key), 'Only ' + transformPropNamesStr + ' available in `setTransform`.');\n    }\n\n    tmpDuringScope.el[key] = val;\n    return this;\n  },\n  getTransform: function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(hasOwn(TRANSFORM_PROPS, key), 'Only ' + transformPropNamesStr + ' available in `getTransform`.');\n    }\n\n    return tmpDuringScope.el[key];\n  },\n  setShape: function (key, val) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n\n    var shape = tmpDuringScope.el.shape || (tmpDuringScope.el.shape = {});\n    shape[key] = val;\n    tmpDuringScope.isShapeDirty = true;\n    return this;\n  },\n  getShape: function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n\n    var shape = tmpDuringScope.el.shape;\n\n    if (shape) {\n      return shape[key];\n    }\n  },\n  setStyle: function (key, val) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n\n    var style = tmpDuringScope.el.style;\n\n    if (style) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (eqNaN(val)) {\n          warn('style.' + key + ' must not be assigned with NaN.');\n        }\n      }\n\n      style[key] = val;\n      tmpDuringScope.isStyleDirty = true;\n    }\n\n    return this;\n  },\n  getStyle: function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n\n    var style = tmpDuringScope.el.style;\n\n    if (style) {\n      return style[key];\n    }\n  },\n  setExtra: function (key, val) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n\n    var extra = tmpDuringScope.el.extra || (tmpDuringScope.el.extra = {});\n    extra[key] = val;\n    return this;\n  },\n  getExtra: function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n\n    var extra = tmpDuringScope.el.extra;\n\n    if (extra) {\n      return extra[key];\n    }\n  }\n};\n\nfunction assertNotReserved(key) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (key === 'transition' || key === 'enterFrom' || key === 'leaveTo') {\n      throw new Error('key must not be \"' + key + '\"');\n    }\n  }\n}\n\nfunction duringCall() {\n  // Do not provide \"percent\" until some requirements come.\n  // Because consider thies case:\n  // enterFrom: {x: 100, y: 30}, transition: 'x'.\n  // And enter duration is different from update duration.\n  // Thus it might be confused about the meaning of \"percent\" in during callback.\n  var scope = this;\n  var el = scope.el;\n\n  if (!el) {\n    return;\n  } // If el is remove from zr by reason like legend, during still need to called,\n  // becuase el will be added back to zr and the prop value should not be incorrect.\n\n\n  var latestUserDuring = customInnerStore(el).userDuring;\n  var scopeUserDuring = scope.userDuring; // Ensured a during is only called once in each animation frame.\n  // If a during is called multiple times in one frame, maybe some users' calulation logic\n  // might be wrong (not sure whether this usage exists).\n  // The case of a during might be called twice can be: by default there is a animator for\n  // 'x', 'y' when init. Before the init animation finished, call `setOption` to start\n  // another animators for 'style'/'shape'/'extra'.\n\n  if (latestUserDuring !== scopeUserDuring) {\n    // release\n    scope.el = scope.userDuring = null;\n    return;\n  }\n\n  tmpDuringScope.el = el;\n  tmpDuringScope.isShapeDirty = false;\n  tmpDuringScope.isStyleDirty = false; // Give no `this` to user in \"during\" calling.\n\n  scopeUserDuring(customDuringAPI);\n\n  if (tmpDuringScope.isShapeDirty && el.dirtyShape) {\n    el.dirtyShape();\n  }\n\n  if (tmpDuringScope.isStyleDirty && el.dirtyStyle) {\n    el.dirtyStyle();\n  } // markRedraw() will be called by default in during.\n  // FIXME `this.markRedraw();` directly ?\n  // FIXME: if in future meet the case that some prop will be both modified in `during` and `state`,\n  // consider the issue that the prop might be incorrect when return to \"normal\" state.\n\n}\n\nfunction updateElOnState(state, el, elStateOpt, styleOpt, attachedTxInfo, isRoot, isTextContent) {\n  var elDisplayable = el.isGroup ? null : el;\n  var txCfgOpt = attachedTxInfo && attachedTxInfo[state].cfg; // PENDING:5.0 support customize scale change and transition animation?\n\n  if (elDisplayable) {\n    // By default support auto lift color when hover whether `emphasis` specified.\n    var stateObj = elDisplayable.ensureState(state);\n\n    if (styleOpt === false) {\n      var existingEmphasisState = elDisplayable.getState(state);\n\n      if (existingEmphasisState) {\n        existingEmphasisState.style = null;\n      }\n    } else {\n      // style is needed to enable defaut emphasis.\n      stateObj.style = styleOpt || null;\n    } // If `elOption.styleEmphasis` or `elOption.emphasis.style` is `false`,\n    // remove hover style.\n    // If `elOption.textConfig` or `elOption.emphasis.textConfig` is null/undefined, it does not\n    // make sense. So for simplicity, we do not ditinguish `hasOwnProperty` and null/undefined.\n\n\n    if (txCfgOpt) {\n      stateObj.textConfig = txCfgOpt;\n    }\n\n    setDefaultStateProxy(elDisplayable);\n  }\n}\n\nfunction updateZ(el, elOption, seriesModel) {\n  // Group not support textContent and not support z yet.\n  if (el.isGroup) {\n    return;\n  }\n\n  var elDisplayable = el;\n  var currentZ = seriesModel.currentZ;\n  var currentZLevel = seriesModel.currentZLevel; // Always erase.\n\n  elDisplayable.z = currentZ;\n  elDisplayable.zlevel = currentZLevel; // z2 must not be null/undefined, otherwise sort error may occur.\n\n  var optZ2 = elOption.z2;\n  optZ2 != null && (elDisplayable.z2 = optZ2 || 0);\n\n  for (var i = 0; i < STATES.length; i++) {\n    updateZForEachState(elDisplayable, elOption, STATES[i]);\n  }\n}\n\nfunction updateZForEachState(elDisplayable, elOption, state) {\n  var isNormal = state === NORMAL;\n  var elStateOpt = isNormal ? elOption : retrieveStateOption(elOption, state);\n  var optZ2 = elStateOpt ? elStateOpt.z2 : null;\n  var stateObj;\n\n  if (optZ2 != null) {\n    // Do not `ensureState` until required.\n    stateObj = isNormal ? elDisplayable : elDisplayable.ensureState(state);\n    stateObj.z2 = optZ2 || 0;\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(renderItem, 'series.render is required.');\n      assert(coordSys.prepareCustoms || prepareCustoms[coordSys.type], 'This coordSys does not support custom series.');\n    } // `coordSys.prepareCustoms` is used for external coord sys like bmap.\n\n\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms(coordSys) : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    ordinalRawValue: ordinalRawValue,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    // The life cycle of context: current round of rendering.\n    // The global life cycle is probably not necessary, because\n    // user can store global status by themselves.\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // If someday intending to refactor them to a class, should consider do not\n  // break change: currently these attribute member are encapsulated in a closure\n  // so that do not need to force user to call these method with a scope.\n  // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currItemModel;\n  var currItemStyleModels = {};\n  var currLabelModels = {};\n  var seriesItemStyleModels = {};\n  var seriesLabelModels = {};\n\n  for (var i = 0; i < STATES.length; i++) {\n    var stateName = STATES[i];\n    seriesItemStyleModels[stateName] = customSeries.getModel(PATH_ITEM_STYLE[stateName]);\n    seriesLabelModels[stateName] = customSeries.getModel(PATH_LABEL[stateName]);\n  }\n\n  function getItemModel(dataIndexInside) {\n    return dataIndexInside === currDataIndexInside ? currItemModel || (currItemModel = data.getItemModel(dataIndexInside)) : data.getItemModel(dataIndexInside);\n  }\n\n  function getItemStyleModel(dataIndexInside, state) {\n    return !data.hasItemOption ? seriesItemStyleModels[state] : dataIndexInside === currDataIndexInside ? currItemStyleModels[state] || (currItemStyleModels[state] = getItemModel(dataIndexInside).getModel(PATH_ITEM_STYLE[state])) : getItemModel(dataIndexInside).getModel(PATH_ITEM_STYLE[state]);\n  }\n\n  function getLabelModel(dataIndexInside, state) {\n    return !data.hasItemOption ? seriesLabelModels[state] : dataIndexInside === currDataIndexInside ? currLabelModels[state] || (currLabelModels[state] = getItemModel(dataIndexInside).getModel(PATH_LABEL[state])) : getItemModel(dataIndexInside).getModel(PATH_LABEL[state]);\n  }\n\n  return function (dataIndexInside, payload) {\n    currDataIndexInside = dataIndexInside;\n    currItemModel = null;\n    currItemStyleModels = {};\n    currLabelModels = {};\n    return renderItem && renderItem(defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside),\n      // Can be used for optimization when zoom or roam.\n      actionType: payload ? payload.type : null\n    }, userParams), userAPI);\n  };\n  /**\n   * @public\n   * @param dim by default 0.\n   * @param dataIndexInside by default `currDataIndexInside`.\n   */\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getStore().get(data.getDimensionIndex(dim || 0), dataIndexInside);\n  }\n  /**\n   * @public\n   * @param dim by default 0.\n   * @param dataIndexInside by default `currDataIndexInside`.\n   */\n\n\n  function ordinalRawValue(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    dim = dim || 0;\n    var dimInfo = data.getDimensionInfo(dim);\n\n    if (!dimInfo) {\n      var dimIndex = data.getDimensionIndex(dim);\n      return dimIndex >= 0 ? data.getStore().get(dimIndex, dataIndexInside) : undefined;\n    }\n\n    var val = data.get(dimInfo.name, dataIndexInside);\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.categories[val] : val;\n  }\n  /**\n   * @deprecated The orgininal intention of `api.style` is enable to set itemStyle\n   * like other series. But it not necessary and not easy to give a strict definition\n   * of what it return. And since echarts5 it needs to be make compat work. So\n   * deprecates it since echarts5.\n   *\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   *\n   * [Compat]: since ec5, RectText has been separated from its hosts el.\n   * so `api.style()` will only return the style from `itemStyle` but not handle `label`\n   * any more. But `series.label` config is never published in doc.\n   * We still compat it in `api.style()`. But not encourage to use it and will still not\n   * to pulish it to doc.\n   * @public\n   * @param dataIndexInside by default `currDataIndexInside`.\n   */\n\n\n  function style(userProps, dataIndexInside) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecated('api.style', 'Please write literal style directly instead.');\n    }\n\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    var style = data.getItemVisual(dataIndexInside, 'style');\n    var visualColor = style && style.fill;\n    var opacity = style && style.opacity;\n    var itemStyle = getItemStyleModel(dataIndexInside, NORMAL).getItemStyle();\n    visualColor != null && (itemStyle.fill = visualColor);\n    opacity != null && (itemStyle.opacity = opacity);\n    var opt = {\n      inheritColor: isString(visualColor) ? visualColor : '#000'\n    };\n    var labelModel = getLabelModel(dataIndexInside, NORMAL); // Now that the feture of \"auto adjust text fill/stroke\" has been migrated to zrender\n    // since ec5, we should set `isAttached` as `false` here and make compat in\n    // `convertToEC4StyleForCustomSerise`.\n\n    var textStyle = labelStyleHelper.createTextStyle(labelModel, null, opt, false, true);\n    textStyle.text = labelModel.getShallow('show') ? retrieve2(customSeries.getFormattedLabel(dataIndexInside, NORMAL), getDefaultLabel(data, dataIndexInside)) : null;\n    var textConfig = labelStyleHelper.createTextConfig(labelModel, opt, false);\n    preFetchFromExtra(userProps, itemStyle);\n    itemStyle = convertToEC4StyleForCustomSerise(itemStyle, textStyle, textConfig);\n    userProps && applyUserPropsAfter(itemStyle, userProps);\n    itemStyle.legacy = true;\n    return itemStyle;\n  }\n  /**\n   * @deprecated The reason see `api.style()`\n   * @public\n   * @param dataIndexInside by default `currDataIndexInside`.\n   */\n\n\n  function styleEmphasis(userProps, dataIndexInside) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecated('api.styleEmphasis', 'Please write literal style directly instead.');\n    }\n\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    var itemStyle = getItemStyleModel(dataIndexInside, EMPHASIS).getItemStyle();\n    var labelModel = getLabelModel(dataIndexInside, EMPHASIS);\n    var textStyle = labelStyleHelper.createTextStyle(labelModel, null, null, true, true);\n    textStyle.text = labelModel.getShallow('show') ? retrieve3(customSeries.getFormattedLabel(dataIndexInside, EMPHASIS), customSeries.getFormattedLabel(dataIndexInside, NORMAL), getDefaultLabel(data, dataIndexInside)) : null;\n    var textConfig = labelStyleHelper.createTextConfig(labelModel, null, true);\n    preFetchFromExtra(userProps, itemStyle);\n    itemStyle = convertToEC4StyleForCustomSerise(itemStyle, textStyle, textConfig);\n    userProps && applyUserPropsAfter(itemStyle, userProps);\n    itemStyle.legacy = true;\n    return itemStyle;\n  }\n\n  function applyUserPropsAfter(itemStyle, extra) {\n    for (var key in extra) {\n      if (hasOwn(extra, key)) {\n        itemStyle[key] = extra[key];\n      }\n    }\n  }\n\n  function preFetchFromExtra(extra, itemStyle) {\n    // A trick to retrieve those props firstly, which are used to\n    // apply auto inside fill/stroke in `convertToEC4StyleForCustomSerise`.\n    // (It's not reasonable but only for a degree of compat)\n    if (extra) {\n      extra.textFill && (itemStyle.textFill = extra.textFill);\n      extra.textPosition && (itemStyle.textPosition = extra.textPosition);\n    }\n  }\n  /**\n   * @public\n   * @param dataIndexInside by default `currDataIndexInside`.\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (hasOwn(STYLE_VISUAL_TYPE, visualType)) {\n      var style_1 = data.getItemVisual(dataIndexInside, 'style');\n      return style_1 ? style_1[STYLE_VISUAL_TYPE[visualType]] : null;\n    } // Only support these visuals. Other visual might be inner tricky\n    // for performance (like `style`), do not expose to users.\n\n\n    if (hasOwn(NON_STYLE_VISUAL_PROPS, visualType)) {\n      return data.getItemVisual(dataIndexInside, visualType);\n    }\n  }\n  /**\n   * @public\n   * @return If not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.type === 'cartesian2d') {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(defaults({\n        axis: baseAxis\n      }, opt));\n    }\n  }\n  /**\n   * @public\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @return font string\n   */\n\n\n  function font(opt) {\n    return labelStyleHelper.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  each(data.dimensions, function (dimName) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = data.getDimensionIndex(dimName);\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdateItem(api, existsEl, dataIndex, elOption, seriesModel, group, data) {\n  // [Rule]\n  // If `renderItem` returns `null`/`undefined`/`false`, remove the previous el if existing.\n  //     (It seems that violate the \"merge\" principle, but most of users probably intuitively\n  //     regard \"return;\" as \"show nothing element whatever\", so make a exception to meet the\n  //     most cases.)\n  // The rule or \"merge\" see [STRATEGY_MERGE].\n  // If `elOption` is `null`/`undefined`/`false` (when `renderItem` returns nothing).\n  if (!elOption) {\n    group.remove(existsEl);\n    return;\n  }\n\n  var el = doCreateOrUpdateEl(api, existsEl, dataIndex, elOption, seriesModel, group, true);\n  el && data.setItemGraphicEl(dataIndex, el);\n  el && enableHoverEmphasis(el, elOption.focus, elOption.blurScope);\n  return el;\n}\n\nfunction doCreateOrUpdateEl(api, existsEl, dataIndex, elOption, seriesModel, group, isRoot) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(elOption, 'should not have an null/undefined element setting');\n  }\n\n  var toBeReplacedIdx = -1;\n  var oldEl = existsEl;\n\n  if (existsEl && doesElNeedRecreate(existsEl, elOption, seriesModel) // || (\n  //     // PENDING: even in one-to-one mapping case, if el is marked as morph,\n  //     // do not sure whether the el will be mapped to another el with different\n  //     // hierarchy in Group tree. So always recreate el rather than reuse the el.\n  //     morphHelper && morphHelper.isOneToOneFrom(el)\n  // )\n  ) {\n    // Should keep at the original index, otherwise \"merge by index\" will be incorrect.\n    toBeReplacedIdx = indexOf(group.childrenRef(), existsEl);\n    existsEl = null;\n  }\n\n  var isInit = !existsEl;\n  var el = existsEl;\n\n  if (!el) {\n    el = createEl(elOption);\n\n    if (oldEl) {\n      copyElement(oldEl, el);\n    }\n  } else {\n    // FIMXE:NEXT unified clearState?\n    // If in some case the performance issue arised, consider\n    // do not clearState but update cached normal state directly.\n    el.clearStates();\n  } // Need to set morph: false explictly to disable automatically morphing.\n\n\n  if (elOption.morph === false) {\n    el.disableMorphing = true;\n  } else if (el.disableMorphing) {\n    el.disableMorphing = false;\n  }\n\n  attachedTxInfoTmp.normal.cfg = attachedTxInfoTmp.normal.conOpt = attachedTxInfoTmp.emphasis.cfg = attachedTxInfoTmp.emphasis.conOpt = attachedTxInfoTmp.blur.cfg = attachedTxInfoTmp.blur.conOpt = attachedTxInfoTmp.select.cfg = attachedTxInfoTmp.select.conOpt = null;\n  attachedTxInfoTmp.isLegacy = false;\n  doCreateOrUpdateAttachedTx(el, dataIndex, elOption, seriesModel, isInit, attachedTxInfoTmp);\n  doCreateOrUpdateClipPath(el, dataIndex, elOption, seriesModel, isInit);\n  updateElNormal(api, el, dataIndex, elOption, attachedTxInfoTmp, seriesModel, isInit, false);\n\n  for (var i = 0; i < STATES.length; i++) {\n    var stateName = STATES[i];\n\n    if (stateName !== NORMAL) {\n      var otherStateOpt = retrieveStateOption(elOption, stateName);\n      var otherStyleOpt = retrieveStyleOptionOnState(elOption, otherStateOpt, stateName);\n      updateElOnState(stateName, el, otherStateOpt, otherStyleOpt, attachedTxInfoTmp, isRoot, false);\n    }\n  }\n\n  updateZ(el, elOption, seriesModel);\n\n  if (elOption.type === 'group') {\n    mergeChildren(api, el, dataIndex, elOption, seriesModel);\n  }\n\n  if (toBeReplacedIdx >= 0) {\n    group.replaceAt(el, toBeReplacedIdx);\n  } else {\n    group.add(el);\n  }\n\n  return el;\n} // `el` must not be null/undefined.\n\n\nfunction doesElNeedRecreate(el, elOption, seriesModel) {\n  var elInner = customInnerStore(el);\n  var elOptionType = elOption.type;\n  var elOptionShape = elOption.shape;\n  var elOptionStyle = elOption.style;\n  return (// Always create new if universal transition is enabled.\n    // Because we do transition after render. It needs to know what old element is. Replacement will loose it.\n    seriesModel.isUniversalTransitionEnabled() // If `elOptionType` is `null`, follow the merge principle.\n    || elOptionType != null && elOptionType !== elInner.customGraphicType || elOptionType === 'path' && hasOwnPathData(elOptionShape) && getPathData(elOptionShape) !== elInner.customPathData || elOptionType === 'image' && hasOwn(elOptionStyle, 'image') && elOptionStyle.image !== elInner.customImagePath // // FIXME test and remove this restriction?\n    // || (elOptionType === 'text'\n    //     && hasOwn(elOptionStyle, 'text')\n    //     && (elOptionStyle as TextStyleProps).text !== elInner.customText\n    // )\n\n  );\n}\n\nfunction doCreateOrUpdateClipPath(el, dataIndex, elOption, seriesModel, isInit) {\n  // Based on the \"merge\" principle, if no clipPath provided,\n  // do nothing. The exists clip will be totally removed only if\n  // `el.clipPath` is `false`. Otherwise it will be merged/replaced.\n  var clipPathOpt = elOption.clipPath;\n\n  if (clipPathOpt === false) {\n    if (el && el.getClipPath()) {\n      el.removeClipPath();\n    }\n  } else if (clipPathOpt) {\n    var clipPath = el.getClipPath();\n\n    if (clipPath && doesElNeedRecreate(clipPath, clipPathOpt, seriesModel)) {\n      clipPath = null;\n    }\n\n    if (!clipPath) {\n      clipPath = createEl(clipPathOpt);\n\n      if (process.env.NODE_ENV !== 'production') {\n        assert(isPath(clipPath), 'Only any type of `path` can be used in `clipPath`, rather than ' + clipPath.type + '.');\n      }\n\n      el.setClipPath(clipPath);\n    }\n\n    updateElNormal(null, clipPath, dataIndex, clipPathOpt, null, seriesModel, isInit, false);\n  } // If not define `clipPath` in option, do nothing unnecessary.\n\n}\n\nfunction doCreateOrUpdateAttachedTx(el, dataIndex, elOption, seriesModel, isInit, attachedTxInfo) {\n  // group do not support textContent temporarily untill necessary.\n  if (el.isGroup) {\n    return;\n  } // Normal must be called before emphasis, for `isLegacy` detection.\n\n\n  processTxInfo(elOption, null, attachedTxInfo);\n  processTxInfo(elOption, EMPHASIS, attachedTxInfo); // If `elOption.textConfig` or `elOption.textContent` is null/undefined, it does not make sence.\n  // So for simplicity, if \"elOption hasOwnProperty of them but be null/undefined\", we do not\n  // trade them as set to null to el.\n  // Especially:\n  // `elOption.textContent: false` means remove textContent.\n  // `elOption.textContent.emphasis.style: false` means remove the style from emphasis state.\n\n  var txConOptNormal = attachedTxInfo.normal.conOpt;\n  var txConOptEmphasis = attachedTxInfo.emphasis.conOpt;\n  var txConOptBlur = attachedTxInfo.blur.conOpt;\n  var txConOptSelect = attachedTxInfo.select.conOpt;\n\n  if (txConOptNormal != null || txConOptEmphasis != null || txConOptSelect != null || txConOptBlur != null) {\n    var textContent = el.getTextContent();\n\n    if (txConOptNormal === false) {\n      textContent && el.removeTextContent();\n    } else {\n      txConOptNormal = attachedTxInfo.normal.conOpt = txConOptNormal || {\n        type: 'text'\n      };\n\n      if (!textContent) {\n        textContent = createEl(txConOptNormal);\n        el.setTextContent(textContent);\n      } else {\n        // If in some case the performance issue arised, consider\n        // do not clearState but update cached normal state directly.\n        textContent.clearStates();\n      }\n\n      updateElNormal(null, textContent, dataIndex, txConOptNormal, null, seriesModel, isInit, true);\n      var txConStlOptNormal = txConOptNormal && txConOptNormal.style;\n\n      for (var i = 0; i < STATES.length; i++) {\n        var stateName = STATES[i];\n\n        if (stateName !== NORMAL) {\n          var txConOptOtherState = attachedTxInfo[stateName].conOpt;\n          updateElOnState(stateName, textContent, txConOptOtherState, retrieveStyleOptionOnState(txConOptNormal, txConOptOtherState, stateName), null, false, true);\n        }\n      }\n\n      txConStlOptNormal ? textContent.dirty() : textContent.markRedraw();\n    }\n  }\n}\n\nfunction processTxInfo(elOption, state, attachedTxInfo) {\n  var stateOpt = !state ? elOption : retrieveStateOption(elOption, state);\n  var styleOpt = !state ? elOption.style : retrieveStyleOptionOnState(elOption, stateOpt, EMPHASIS);\n  var elType = elOption.type;\n  var txCfg = stateOpt ? stateOpt.textConfig : null;\n  var txConOptNormal = elOption.textContent;\n  var txConOpt = !txConOptNormal ? null : !state ? txConOptNormal : retrieveStateOption(txConOptNormal, state);\n\n  if (styleOpt && ( // Because emphasis style has little info to detect legacy,\n  // if normal is legacy, emphasis is trade as legacy.\n  attachedTxInfo.isLegacy || isEC4CompatibleStyle(styleOpt, elType, !!txCfg, !!txConOpt))) {\n    attachedTxInfo.isLegacy = true;\n    var convertResult = convertFromEC4CompatibleStyle(styleOpt, elType, !state); // Explicitly specified `textConfig` and `textContent` has higher priority than\n    // the ones generated by legacy style. Otherwise if users use them and `api.style`\n    // at the same time, they not both work and hardly to known why.\n\n    if (!txCfg && convertResult.textConfig) {\n      txCfg = convertResult.textConfig;\n    }\n\n    if (!txConOpt && convertResult.textContent) {\n      txConOpt = convertResult.textContent;\n    }\n  }\n\n  if (!state && txConOpt) {\n    var txConOptNormal_1 = txConOpt; // `textContent: {type: 'text'}`, the \"type\" is easy to be missing. So we tolerate it.\n\n    !txConOptNormal_1.type && (txConOptNormal_1.type = 'text');\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Do not tolerate incorret type for forward compat.\n      assert(txConOptNormal_1.type === 'text', 'textContent.type must be \"text\"');\n    }\n  }\n\n  var info = !state ? attachedTxInfo.normal : attachedTxInfo[state];\n  info.cfg = txCfg;\n  info.conOpt = txConOpt;\n}\n\nfunction retrieveStateOption(elOption, state) {\n  return !state ? elOption : elOption ? elOption[state] : null;\n}\n\nfunction retrieveStyleOptionOnState(stateOptionNormal, stateOption, state) {\n  var style = stateOption && stateOption.style;\n\n  if (style == null && state === EMPHASIS && stateOptionNormal) {\n    style = stateOptionNormal.styleEmphasis;\n  }\n\n  return style;\n} // Usage:\n// (1) By default, `elOption.$mergeChildren` is `'byIndex'`, which indicates that\n//     the existing children will not be removed, and enables the feature that\n//     update some of the props of some of the children simply by construct\n//     the returned children of `renderItem` like:\n//     `var children = group.children = []; children[3] = {opacity: 0.5};`\n// (2) If `elOption.$mergeChildren` is `'byName'`, add/update/remove children\n//     by child.name. But that might be lower performance.\n// (3) If `elOption.$mergeChildren` is `false`, the existing children will be\n//     replaced totally.\n// (4) If `!elOption.children`, following the \"merge\" principle, nothing will happen.\n//\n// For implementation simpleness, do not provide a direct way to remove sinlge\n// child (otherwise the total indicies of the children array have to be modified).\n// User can remove a single child by set its `ignore` as `true`.\n\n\nfunction mergeChildren(api, el, dataIndex, elOption, seriesModel) {\n  var newChildren = elOption.children;\n  var newLen = newChildren ? newChildren.length : 0;\n  var mergeChildren = elOption.$mergeChildren; // `diffChildrenByName` has been deprecated.\n\n  var byName = mergeChildren === 'byName' || elOption.diffChildrenByName;\n  var notMerge = mergeChildren === false; // For better performance on roam update, only enter if necessary.\n\n  if (!newLen && !byName && !notMerge) {\n    return;\n  }\n\n  if (byName) {\n    diffGroupChildren({\n      api: api,\n      oldChildren: el.children() || [],\n      newChildren: newChildren || [],\n      dataIndex: dataIndex,\n      seriesModel: seriesModel,\n      group: el\n    });\n    return;\n  }\n\n  notMerge && el.removeAll(); // Mapping children of a group simply by index, which\n  // might be better performance.\n\n  var index = 0;\n\n  for (; index < newLen; index++) {\n    newChildren[index] && doCreateOrUpdateEl(api, el.childAt(index), dataIndex, newChildren[index], seriesModel, el, false);\n  }\n\n  for (var i = el.childCount() - 1; i >= index; i--) {\n    // Do not supprot leave elements that are not mentioned in the latest\n    // `renderItem` return. Otherwise users may not have a clear and simple\n    // concept that how to contorl all of the elements.\n    doRemoveEl(el.childAt(i), seriesModel, el);\n  }\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdateEl(context.api, child, context.dataIndex, childOption, context.seriesModel, context.group, false);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  doRemoveEl(child, context.seriesModel, context.group);\n}\n\nfunction doRemoveEl(el, seriesModel, group) {\n  if (el) {\n    var leaveToProps = customInnerStore(el).leaveToProps;\n    leaveToProps ? graphicUtil.updateProps(el, leaveToProps, seriesModel, {\n      cb: function () {\n        group.remove(el);\n      }\n    }) : group.remove(el);\n  }\n}\n/**\n * @return SVG Path data.\n */\n\n\nfunction getPathData(shape) {\n  // \"d\" follows the SVG convention.\n  return shape && (shape.pathData || shape.d);\n}\n\nfunction hasOwnPathData(shape) {\n  return shape && (hasOwn(shape, 'pathData') || hasOwn(shape, 'd'));\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/chart/custom/CustomView.js"],"names":["__extends","hasOwn","assert","isString","retrieve2","retrieve3","defaults","each","keys","bind","eqNaN","indexOf","graphicUtil","setDefaultStateProxy","enableHoverEmphasis","labelStyleHelper","getDefaultLabel","getLayoutOnAxis","DataDiffer","ChartView","createClipPath","prepareCartesian2d","prepareGeo","prepareSingleAxis","preparePolar","prepareCalendar","Displayable","convertToEC4StyleForCustomSerise","isEC4CompatibleStyle","convertFromEC4CompatibleStyle","warnDeprecated","warn","throwError","createOrUpdatePatternFromDecal","TRANSFORM_PROPS","STYLE_VISUAL_TYPE","NON_STYLE_VISUAL_PROPS","customInnerStore","prepareShapeOrExtraAllPropsFinal","prepareShapeOrExtraTransitionFrom","prepareStyleTransitionFrom","prepareTransformAllPropsFinal","prepareTransformTransitionFrom","transformPropNamesStr","join","EMPHASIS","NORMAL","BLUR","SELECT","STATES","PATH_ITEM_STYLE","normal","emphasis","blur","select","PATH_LABEL","GROUP_DIFF_PREFIX","attachedTxInfoTmp","prepareCustoms","cartesian2d","geo","singleAxis","polar","calendar","isPath","el","Path","isDisplayable","copyElement","sourceEl","targetEl","copyTransform","setStyle","style","z","z2","zlevel","invisible","ignore","setShape","shape","CustomChartView","_super","_this","apply","arguments","type","prototype","render","customSeries","ecModel","api","payload","oldData","_data","data","getData","group","renderItem","makeRenderItem","removeAll","diff","add","newIdx","createOrUpdateItem","remove","oldIdx","doRemoveEl","getItemGraphicEl","update","oldEl","execute","clipPath","get","coordinateSystem","setClipPath","removeClipPath","incrementalPrepareRender","incrementalRender","params","setIncrementalAndHoverLayer","isGroup","incremental","ensureState","hoverLayer","idx","start","end","traverse","filterForExposedEvent","eventType","query","packedEvent","elementName","element","name","__hostTarget","parent","createEl","elOption","graphicType","pathRect","width","height","x","y","pathData","getPathData","makePath","layout","customPathData","Image","customImagePath","image","Text","Group","Error","Clz","getShapeClass","errMsg","process","env","NODE_ENV","customGraphicType","z2EmphasisLift","z2SelectLift","updateElNormal","dataIndex","attachedTxInfo","seriesModel","isInit","isTextContent","txCfgOpt","cfg","setTextConfig","styleOpt","textOptionStyle","fill","textFill","stroke","textStroke","decalPattern","decalObj","decal","dirty","__decalPattern","store","userDuring","during","transFromProps","propsToSet","applyPropsDirectly","applyPropsTransition","applyMiscProps","markRedraw","silent","autoBatch","info","allPropsFinal","elDisplayable","useStyle","animators","i","length","animator","targetName","changeTarget","attr","cfgDuringCall","duringCall","isFrom","initProps","updateProps","tmpDuringScope","customDuringAPI","setTransform","key","val","getTransform","assertNotReserved","isShapeDirty","getShape","isStyleDirty","getStyle","setExtra","extra","getExtra","scope","latestUserDuring","scopeUserDuring","dirtyShape","dirtyStyle","updateElOnState","state","elStateOpt","isRoot","stateObj","existingEmphasisState","getState","textConfig","updateZ","currentZ","currentZLevel","optZ2","updateZForEachState","isNormal","retrieveStateOption","coordSys","prepareResult","userAPI","getWidth","getHeight","getZr","getDevicePixelRatio","value","ordinalRawValue","styleEmphasis","visual","barLayout","currentSeriesIndices","font","userParams","context","seriesId","id","seriesName","seriesIndex","dataInsideLength","count","encode","wrapEncodeDef","currDataIndexInside","currItemModel","currItemStyleModels","currLabelModels","seriesItemStyleModels","seriesLabelModels","stateName","getModel","getItemModel","dataIndexInside","getItemStyleModel","hasItemOption","getLabelModel","getRawIndex","actionType","dim","getStore","getDimensionIndex","dimInfo","getDimensionInfo","dimIndex","undefined","ordinalMeta","categories","userProps","getItemVisual","visualColor","opacity","itemStyle","getItemStyle","opt","inheritColor","labelModel","textStyle","createTextStyle","text","getShallow","getFormattedLabel","createTextConfig","preFetchFromExtra","applyUserPropsAfter","legacy","textPosition","visualType","style_1","baseAxis","getBaseAxis","axis","getCurrentSeriesIndices","getFont","encodeDef","dimensions","dimName","isExtraCoord","coordDim","dataDims","coordDimIndex","existsEl","doCreateOrUpdateEl","setItemGraphicEl","focus","blurScope","toBeReplacedIdx","doesElNeedRecreate","childrenRef","clearStates","morph","disableMorphing","conOpt","isLegacy","doCreateOrUpdateAttachedTx","doCreateOrUpdateClipPath","otherStateOpt","otherStyleOpt","retrieveStyleOptionOnState","mergeChildren","replaceAt","elInner","elOptionType","elOptionShape","elOptionStyle","isUniversalTransitionEnabled","hasOwnPathData","clipPathOpt","getClipPath","processTxInfo","txConOptNormal","txConOptEmphasis","txConOptBlur","txConOptSelect","textContent","getTextContent","removeTextContent","setTextContent","txConStlOptNormal","txConOptOtherState","stateOpt","elType","txCfg","txConOpt","convertResult","txConOptNormal_1","stateOptionNormal","stateOption","newChildren","children","newLen","$mergeChildren","byName","diffChildrenByName","notMerge","diffGroupChildren","oldChildren","index","childAt","childCount","getKey","processAddUpdate","processRemove","item","newIndex","oldIndex","childOption","child","leaveToProps","cb","d"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { hasOwn, assert, isString, retrieve2, retrieve3, defaults, each, keys, bind, eqNaN, indexOf } from 'zrender/lib/core/util';\nimport * as graphicUtil from '../../util/graphic';\nimport { setDefaultStateProxy, enableHoverEmphasis } from '../../util/states';\nimport * as labelStyleHelper from '../../label/labelStyle';\nimport { getDefaultLabel } from '../helper/labelHelper';\nimport { getLayoutOnAxis } from '../../layout/barGrid';\nimport DataDiffer from '../../data/DataDiffer';\nimport ChartView from '../../view/Chart';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys';\nimport prepareCartesian2d from '../../coord/cartesian/prepareCustom';\nimport prepareGeo from '../../coord/geo/prepareCustom';\nimport prepareSingleAxis from '../../coord/single/prepareCustom';\nimport preparePolar from '../../coord/polar/prepareCustom';\nimport prepareCalendar from '../../coord/calendar/prepareCustom';\nimport Displayable from 'zrender/lib/graphic/Displayable';\nimport { convertToEC4StyleForCustomSerise, isEC4CompatibleStyle, convertFromEC4CompatibleStyle, warnDeprecated } from '../../util/styleCompat';\nimport { warn, throwError } from '../../util/log';\nimport { createOrUpdatePatternFromDecal } from '../../util/decal';\nimport { TRANSFORM_PROPS, STYLE_VISUAL_TYPE, NON_STYLE_VISUAL_PROPS, customInnerStore } from './CustomSeries';\nimport { prepareShapeOrExtraAllPropsFinal, prepareShapeOrExtraTransitionFrom, prepareStyleTransitionFrom, prepareTransformAllPropsFinal, prepareTransformTransitionFrom } from './prepare';\nvar transformPropNamesStr = keys(TRANSFORM_PROPS).join(', ');\nvar EMPHASIS = 'emphasis';\nvar NORMAL = 'normal';\nvar BLUR = 'blur';\nvar SELECT = 'select';\nvar STATES = [NORMAL, EMPHASIS, BLUR, SELECT];\nvar PATH_ITEM_STYLE = {\n  normal: ['itemStyle'],\n  emphasis: [EMPHASIS, 'itemStyle'],\n  blur: [BLUR, 'itemStyle'],\n  select: [SELECT, 'itemStyle']\n};\nvar PATH_LABEL = {\n  normal: ['label'],\n  emphasis: [EMPHASIS, 'label'],\n  blur: [BLUR, 'label'],\n  select: [SELECT, 'label']\n}; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird update animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\nvar attachedTxInfoTmp = {\n  normal: {},\n  emphasis: {},\n  blur: {},\n  select: {}\n};\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n};\n\nfunction isPath(el) {\n  return el instanceof graphicUtil.Path;\n}\n\nfunction isDisplayable(el) {\n  return el instanceof Displayable;\n}\n\nfunction copyElement(sourceEl, targetEl) {\n  targetEl.copyTransform(sourceEl);\n\n  if (isDisplayable(targetEl) && isDisplayable(sourceEl)) {\n    targetEl.setStyle(sourceEl.style);\n    targetEl.z = sourceEl.z;\n    targetEl.z2 = sourceEl.z2;\n    targetEl.zlevel = sourceEl.zlevel;\n    targetEl.invisible = sourceEl.invisible;\n    targetEl.ignore = sourceEl.ignore;\n\n    if (isPath(targetEl) && isPath(sourceEl)) {\n      targetEl.setShape(sourceEl.shape);\n    }\n  }\n}\n\nvar CustomChartView =\n/** @class */\nfunction (_super) {\n  __extends(CustomChartView, _super);\n\n  function CustomChartView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = CustomChartView.type;\n    return _this;\n  }\n\n  CustomChartView.prototype.render = function (customSeries, ecModel, api, payload) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    if (!oldData) {\n      // Previous render is incremental render or first render.\n      // Needs remove the incremental rendered elements.\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdateItem(api, null, newIdx, renderItem(newIdx, payload), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      doRemoveEl(oldData.getItemGraphicEl(oldIdx), customSeries, group);\n    }).update(function (newIdx, oldIdx) {\n      var oldEl = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdateItem(api, oldEl, newIdx, renderItem(newIdx, payload), customSeries, group, data);\n    }).execute(); // Do clipping\n\n    var clipPath = customSeries.get('clip', true) ? createClipPath(customSeries.coordinateSystem, false, customSeries) : null;\n\n    if (clipPath) {\n      group.setClipPath(clipPath);\n    } else {\n      group.removeClipPath();\n    }\n\n    this._data = data;\n  };\n\n  CustomChartView.prototype.incrementalPrepareRender = function (customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  };\n\n  CustomChartView.prototype.incrementalRender = function (params, customSeries, ecModel, api, payload) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.ensureState('emphasis').hoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdateItem(null, null, idx, renderItem(idx, payload), customSeries, this.group, data);\n      el && el.traverse(setIncrementalAndHoverLayer);\n    }\n  };\n\n  CustomChartView.prototype.filterForExposedEvent = function (eventType, query, targetEl, packedEvent) {\n    var elementName = query.element;\n\n    if (elementName == null || targetEl.name === elementName) {\n      return true;\n    } // Enable to give a name on a group made by `renderItem`, and listen\n    // events that triggerd by its descendents.\n\n\n    while ((targetEl = targetEl.__hostTarget || targetEl.parent) && targetEl !== this.group) {\n      if (targetEl.name === elementName) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  CustomChartView.type = 'custom';\n  return CustomChartView;\n}(ChartView);\n\nexport default CustomChartView;\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el; // Those graphic elements are not shapes. They should not be\n  // overwritten by users, so do them first.\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape; // Using pathRect brings convenience to users sacle svg path.\n\n    var pathRect = shape.width != null && shape.height != null ? {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width,\n      height: shape.height\n    } : null;\n    var pathData = getPathData(shape); // Path is also used for icon, so layout 'center' by default.\n\n    el = graphicUtil.makePath(pathData, null, pathRect, shape.layout || 'center');\n    customInnerStore(el).customPathData = pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    customInnerStore(el).customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({}); // customInnerStore(el).customText = (elOption.style as TextStyleProps).text;\n  } else if (graphicType === 'group') {\n    el = new graphicUtil.Group();\n  } else if (graphicType === 'compoundPath') {\n    throw new Error('\"compoundPath\" is not supported yet.');\n  } else {\n    var Clz = graphicUtil.getShapeClass(graphicType);\n\n    if (!Clz) {\n      var errMsg = '';\n\n      if (process.env.NODE_ENV !== 'production') {\n        errMsg = 'graphic type \"' + graphicType + '\" can not be found.';\n      }\n\n      throwError(errMsg);\n    }\n\n    el = new Clz();\n  }\n\n  customInnerStore(el).customGraphicType = graphicType;\n  el.name = elOption.name; // Compat ec4: the default z2 lift is 1. If changing the number,\n  // some cases probably be broken: hierarchy layout along z, like circle packing,\n  // where emphasis only intending to modify color/border rather than lift z2.\n\n  el.z2EmphasisLift = 1;\n  el.z2SelectLift = 1;\n  return el;\n}\n\nfunction updateElNormal( // Can be null/undefined\napi, el, dataIndex, elOption, attachedTxInfo, seriesModel, isInit, isTextContent) {\n  var txCfgOpt = attachedTxInfo && attachedTxInfo.normal.cfg;\n\n  if (txCfgOpt) {\n    // PENDING: whether use user object directly rather than clone?\n    // TODO:5.0 textConfig transition animation?\n    el.setTextConfig(txCfgOpt);\n  } // Do some normalization on style.\n\n\n  var styleOpt = elOption && elOption.style;\n\n  if (styleOpt) {\n    if (el.type === 'text') {\n      var textOptionStyle = styleOpt; // Compatible with ec4: if `textFill` or `textStroke` exists use them.\n\n      hasOwn(textOptionStyle, 'textFill') && (textOptionStyle.fill = textOptionStyle.textFill);\n      hasOwn(textOptionStyle, 'textStroke') && (textOptionStyle.stroke = textOptionStyle.textStroke);\n    }\n\n    var decalPattern = void 0;\n    var decalObj = isPath(el) ? styleOpt.decal : null;\n\n    if (api && decalObj) {\n      decalObj.dirty = true;\n      decalPattern = createOrUpdatePatternFromDecal(decalObj, api);\n    } // Always overwrite in case user specify this prop.\n\n\n    styleOpt.__decalPattern = decalPattern;\n  } // Save the meta info for further morphing. Like apply on the sub morphing elements.\n\n\n  var store = customInnerStore(el);\n  store.userDuring = elOption.during;\n  var transFromProps = {};\n  var propsToSet = {};\n  prepareShapeOrExtraTransitionFrom('shape', el, elOption, transFromProps, isInit);\n  prepareShapeOrExtraAllPropsFinal('shape', elOption, propsToSet);\n  prepareTransformTransitionFrom(el, elOption, transFromProps, isInit);\n  prepareTransformAllPropsFinal(el, elOption, propsToSet);\n  prepareShapeOrExtraTransitionFrom('extra', el, elOption, transFromProps, isInit);\n  prepareShapeOrExtraAllPropsFinal('extra', elOption, propsToSet);\n  prepareStyleTransitionFrom(el, elOption, styleOpt, transFromProps, isInit);\n  propsToSet.style = styleOpt;\n  applyPropsDirectly(el, propsToSet);\n  applyPropsTransition(el, dataIndex, seriesModel, transFromProps, isInit);\n  applyMiscProps(el, elOption, isTextContent);\n  styleOpt ? el.dirty() : el.markRedraw();\n}\n\nfunction applyMiscProps(el, elOption, isTextContent) {\n  // Merge by default.\n  hasOwn(elOption, 'silent') && (el.silent = elOption.silent);\n  hasOwn(elOption, 'ignore') && (el.ignore = elOption.ignore);\n\n  if (isDisplayable(el)) {\n    hasOwn(elOption, 'invisible') && (el.invisible = elOption.invisible);\n  }\n\n  if (isPath(el)) {\n    hasOwn(elOption, 'autoBatch') && (el.autoBatch = elOption.autoBatch);\n  }\n\n  if (!isTextContent) {\n    // `elOption.info` enables user to mount some info on\n    // elements and use them in event handlers.\n    // Update them only when user specified, otherwise, remain.\n    hasOwn(elOption, 'info') && (customInnerStore(el).info = elOption.info);\n  }\n}\n\nfunction applyPropsDirectly(el, // Can be null/undefined\nallPropsFinal) {\n  var elDisplayable = el.isGroup ? null : el;\n  var styleOpt = allPropsFinal.style;\n\n  if (elDisplayable && styleOpt) {\n    // PENDING: here the input style object is used directly.\n    // Good for performance but bad for compatibility control.\n    elDisplayable.useStyle(styleOpt);\n    var decalPattern = styleOpt.__decalPattern;\n\n    if (decalPattern) {\n      elDisplayable.style.decal = decalPattern;\n    } // When style object changed, how to trade the existing animation?\n    // It is probably complicated and not needed to cover all the cases.\n    // But still need consider the case:\n    // (1) When using init animation on `style.opacity`, and before the animation\n    //     ended users triggers an update by mousewhel. At that time the init\n    //     animation should better be continued rather than terminated.\n    //     So after `useStyle` called, we should change the animation target manually\n    //     to continue the effect of the init animation.\n    // (2) PENDING: If the previous animation targeted at a `val1`, and currently we need\n    //     to update the value to `val2` and no animation declared, should be terminate\n    //     the previous animation or just modify the target of the animation?\n    //     Therotically That will happen not only on `style` but also on `shape` and\n    //     `transfrom` props. But we haven't handle this case at present yet.\n    // (3) PENDING: Is it proper to visit `animators` and `targetName`?\n\n\n    var animators = elDisplayable.animators;\n\n    for (var i = 0; i < animators.length; i++) {\n      var animator = animators[i]; // targetName is the \"topKey\".\n\n      if (animator.targetName === 'style') {\n        animator.changeTarget(elDisplayable.style);\n      }\n    }\n  }\n\n  if (allPropsFinal) {\n    // Not set style here.\n    allPropsFinal.style = null; // Set el to the final state firstly.\n\n    allPropsFinal && el.attr(allPropsFinal);\n    allPropsFinal.style = styleOpt;\n  }\n}\n\nfunction applyPropsTransition(el, dataIndex, seriesModel, // Can be null/undefined\ntransFromProps, isInit) {\n  if (transFromProps) {\n    // NOTE: Do not use `el.updateDuringAnimation` here becuase `el.updateDuringAnimation` will\n    // be called mutiple time in each animation frame. For example, if both \"transform\" props\n    // and shape props and style props changed, it will generate three animator and called\n    // one-by-one in each animation frame.\n    // We use the during in `animateTo/From` params.\n    var userDuring = customInnerStore(el).userDuring; // For simplicity, if during not specified, the previous during will not work any more.\n\n    var cfgDuringCall = userDuring ? bind(duringCall, {\n      el: el,\n      userDuring: userDuring\n    }) : null;\n    var cfg = {\n      dataIndex: dataIndex,\n      isFrom: true,\n      during: cfgDuringCall\n    };\n    isInit ? graphicUtil.initProps(el, transFromProps, seriesModel, cfg) : graphicUtil.updateProps(el, transFromProps, seriesModel, cfg);\n  }\n} // Use it to avoid it be exposed to user.\n\n\nvar tmpDuringScope = {};\nvar customDuringAPI = {\n  // Usually other props do not need to be changed in animation during.\n  setTransform: function (key, val) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(hasOwn(TRANSFORM_PROPS, key), 'Only ' + transformPropNamesStr + ' available in `setTransform`.');\n    }\n\n    tmpDuringScope.el[key] = val;\n    return this;\n  },\n  getTransform: function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(hasOwn(TRANSFORM_PROPS, key), 'Only ' + transformPropNamesStr + ' available in `getTransform`.');\n    }\n\n    return tmpDuringScope.el[key];\n  },\n  setShape: function (key, val) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n\n    var shape = tmpDuringScope.el.shape || (tmpDuringScope.el.shape = {});\n    shape[key] = val;\n    tmpDuringScope.isShapeDirty = true;\n    return this;\n  },\n  getShape: function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n\n    var shape = tmpDuringScope.el.shape;\n\n    if (shape) {\n      return shape[key];\n    }\n  },\n  setStyle: function (key, val) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n\n    var style = tmpDuringScope.el.style;\n\n    if (style) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (eqNaN(val)) {\n          warn('style.' + key + ' must not be assigned with NaN.');\n        }\n      }\n\n      style[key] = val;\n      tmpDuringScope.isStyleDirty = true;\n    }\n\n    return this;\n  },\n  getStyle: function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n\n    var style = tmpDuringScope.el.style;\n\n    if (style) {\n      return style[key];\n    }\n  },\n  setExtra: function (key, val) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n\n    var extra = tmpDuringScope.el.extra || (tmpDuringScope.el.extra = {});\n    extra[key] = val;\n    return this;\n  },\n  getExtra: function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n\n    var extra = tmpDuringScope.el.extra;\n\n    if (extra) {\n      return extra[key];\n    }\n  }\n};\n\nfunction assertNotReserved(key) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (key === 'transition' || key === 'enterFrom' || key === 'leaveTo') {\n      throw new Error('key must not be \"' + key + '\"');\n    }\n  }\n}\n\nfunction duringCall() {\n  // Do not provide \"percent\" until some requirements come.\n  // Because consider thies case:\n  // enterFrom: {x: 100, y: 30}, transition: 'x'.\n  // And enter duration is different from update duration.\n  // Thus it might be confused about the meaning of \"percent\" in during callback.\n  var scope = this;\n  var el = scope.el;\n\n  if (!el) {\n    return;\n  } // If el is remove from zr by reason like legend, during still need to called,\n  // becuase el will be added back to zr and the prop value should not be incorrect.\n\n\n  var latestUserDuring = customInnerStore(el).userDuring;\n  var scopeUserDuring = scope.userDuring; // Ensured a during is only called once in each animation frame.\n  // If a during is called multiple times in one frame, maybe some users' calulation logic\n  // might be wrong (not sure whether this usage exists).\n  // The case of a during might be called twice can be: by default there is a animator for\n  // 'x', 'y' when init. Before the init animation finished, call `setOption` to start\n  // another animators for 'style'/'shape'/'extra'.\n\n  if (latestUserDuring !== scopeUserDuring) {\n    // release\n    scope.el = scope.userDuring = null;\n    return;\n  }\n\n  tmpDuringScope.el = el;\n  tmpDuringScope.isShapeDirty = false;\n  tmpDuringScope.isStyleDirty = false; // Give no `this` to user in \"during\" calling.\n\n  scopeUserDuring(customDuringAPI);\n\n  if (tmpDuringScope.isShapeDirty && el.dirtyShape) {\n    el.dirtyShape();\n  }\n\n  if (tmpDuringScope.isStyleDirty && el.dirtyStyle) {\n    el.dirtyStyle();\n  } // markRedraw() will be called by default in during.\n  // FIXME `this.markRedraw();` directly ?\n  // FIXME: if in future meet the case that some prop will be both modified in `during` and `state`,\n  // consider the issue that the prop might be incorrect when return to \"normal\" state.\n\n}\n\nfunction updateElOnState(state, el, elStateOpt, styleOpt, attachedTxInfo, isRoot, isTextContent) {\n  var elDisplayable = el.isGroup ? null : el;\n  var txCfgOpt = attachedTxInfo && attachedTxInfo[state].cfg; // PENDING:5.0 support customize scale change and transition animation?\n\n  if (elDisplayable) {\n    // By default support auto lift color when hover whether `emphasis` specified.\n    var stateObj = elDisplayable.ensureState(state);\n\n    if (styleOpt === false) {\n      var existingEmphasisState = elDisplayable.getState(state);\n\n      if (existingEmphasisState) {\n        existingEmphasisState.style = null;\n      }\n    } else {\n      // style is needed to enable defaut emphasis.\n      stateObj.style = styleOpt || null;\n    } // If `elOption.styleEmphasis` or `elOption.emphasis.style` is `false`,\n    // remove hover style.\n    // If `elOption.textConfig` or `elOption.emphasis.textConfig` is null/undefined, it does not\n    // make sense. So for simplicity, we do not ditinguish `hasOwnProperty` and null/undefined.\n\n\n    if (txCfgOpt) {\n      stateObj.textConfig = txCfgOpt;\n    }\n\n    setDefaultStateProxy(elDisplayable);\n  }\n}\n\nfunction updateZ(el, elOption, seriesModel) {\n  // Group not support textContent and not support z yet.\n  if (el.isGroup) {\n    return;\n  }\n\n  var elDisplayable = el;\n  var currentZ = seriesModel.currentZ;\n  var currentZLevel = seriesModel.currentZLevel; // Always erase.\n\n  elDisplayable.z = currentZ;\n  elDisplayable.zlevel = currentZLevel; // z2 must not be null/undefined, otherwise sort error may occur.\n\n  var optZ2 = elOption.z2;\n  optZ2 != null && (elDisplayable.z2 = optZ2 || 0);\n\n  for (var i = 0; i < STATES.length; i++) {\n    updateZForEachState(elDisplayable, elOption, STATES[i]);\n  }\n}\n\nfunction updateZForEachState(elDisplayable, elOption, state) {\n  var isNormal = state === NORMAL;\n  var elStateOpt = isNormal ? elOption : retrieveStateOption(elOption, state);\n  var optZ2 = elStateOpt ? elStateOpt.z2 : null;\n  var stateObj;\n\n  if (optZ2 != null) {\n    // Do not `ensureState` until required.\n    stateObj = isNormal ? elDisplayable : elDisplayable.ensureState(state);\n    stateObj.z2 = optZ2 || 0;\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(renderItem, 'series.render is required.');\n      assert(coordSys.prepareCustoms || prepareCustoms[coordSys.type], 'This coordSys does not support custom series.');\n    } // `coordSys.prepareCustoms` is used for external coord sys like bmap.\n\n\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms(coordSys) : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    ordinalRawValue: ordinalRawValue,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    // The life cycle of context: current round of rendering.\n    // The global life cycle is probably not necessary, because\n    // user can store global status by themselves.\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // If someday intending to refactor them to a class, should consider do not\n  // break change: currently these attribute member are encapsulated in a closure\n  // so that do not need to force user to call these method with a scope.\n  // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currItemModel;\n  var currItemStyleModels = {};\n  var currLabelModels = {};\n  var seriesItemStyleModels = {};\n  var seriesLabelModels = {};\n\n  for (var i = 0; i < STATES.length; i++) {\n    var stateName = STATES[i];\n    seriesItemStyleModels[stateName] = customSeries.getModel(PATH_ITEM_STYLE[stateName]);\n    seriesLabelModels[stateName] = customSeries.getModel(PATH_LABEL[stateName]);\n  }\n\n  function getItemModel(dataIndexInside) {\n    return dataIndexInside === currDataIndexInside ? currItemModel || (currItemModel = data.getItemModel(dataIndexInside)) : data.getItemModel(dataIndexInside);\n  }\n\n  function getItemStyleModel(dataIndexInside, state) {\n    return !data.hasItemOption ? seriesItemStyleModels[state] : dataIndexInside === currDataIndexInside ? currItemStyleModels[state] || (currItemStyleModels[state] = getItemModel(dataIndexInside).getModel(PATH_ITEM_STYLE[state])) : getItemModel(dataIndexInside).getModel(PATH_ITEM_STYLE[state]);\n  }\n\n  function getLabelModel(dataIndexInside, state) {\n    return !data.hasItemOption ? seriesLabelModels[state] : dataIndexInside === currDataIndexInside ? currLabelModels[state] || (currLabelModels[state] = getItemModel(dataIndexInside).getModel(PATH_LABEL[state])) : getItemModel(dataIndexInside).getModel(PATH_LABEL[state]);\n  }\n\n  return function (dataIndexInside, payload) {\n    currDataIndexInside = dataIndexInside;\n    currItemModel = null;\n    currItemStyleModels = {};\n    currLabelModels = {};\n    return renderItem && renderItem(defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside),\n      // Can be used for optimization when zoom or roam.\n      actionType: payload ? payload.type : null\n    }, userParams), userAPI);\n  };\n  /**\n   * @public\n   * @param dim by default 0.\n   * @param dataIndexInside by default `currDataIndexInside`.\n   */\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getStore().get(data.getDimensionIndex(dim || 0), dataIndexInside);\n  }\n  /**\n   * @public\n   * @param dim by default 0.\n   * @param dataIndexInside by default `currDataIndexInside`.\n   */\n\n\n  function ordinalRawValue(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    dim = dim || 0;\n    var dimInfo = data.getDimensionInfo(dim);\n\n    if (!dimInfo) {\n      var dimIndex = data.getDimensionIndex(dim);\n      return dimIndex >= 0 ? data.getStore().get(dimIndex, dataIndexInside) : undefined;\n    }\n\n    var val = data.get(dimInfo.name, dataIndexInside);\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.categories[val] : val;\n  }\n  /**\n   * @deprecated The orgininal intention of `api.style` is enable to set itemStyle\n   * like other series. But it not necessary and not easy to give a strict definition\n   * of what it return. And since echarts5 it needs to be make compat work. So\n   * deprecates it since echarts5.\n   *\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   *\n   * [Compat]: since ec5, RectText has been separated from its hosts el.\n   * so `api.style()` will only return the style from `itemStyle` but not handle `label`\n   * any more. But `series.label` config is never published in doc.\n   * We still compat it in `api.style()`. But not encourage to use it and will still not\n   * to pulish it to doc.\n   * @public\n   * @param dataIndexInside by default `currDataIndexInside`.\n   */\n\n\n  function style(userProps, dataIndexInside) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecated('api.style', 'Please write literal style directly instead.');\n    }\n\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    var style = data.getItemVisual(dataIndexInside, 'style');\n    var visualColor = style && style.fill;\n    var opacity = style && style.opacity;\n    var itemStyle = getItemStyleModel(dataIndexInside, NORMAL).getItemStyle();\n    visualColor != null && (itemStyle.fill = visualColor);\n    opacity != null && (itemStyle.opacity = opacity);\n    var opt = {\n      inheritColor: isString(visualColor) ? visualColor : '#000'\n    };\n    var labelModel = getLabelModel(dataIndexInside, NORMAL); // Now that the feture of \"auto adjust text fill/stroke\" has been migrated to zrender\n    // since ec5, we should set `isAttached` as `false` here and make compat in\n    // `convertToEC4StyleForCustomSerise`.\n\n    var textStyle = labelStyleHelper.createTextStyle(labelModel, null, opt, false, true);\n    textStyle.text = labelModel.getShallow('show') ? retrieve2(customSeries.getFormattedLabel(dataIndexInside, NORMAL), getDefaultLabel(data, dataIndexInside)) : null;\n    var textConfig = labelStyleHelper.createTextConfig(labelModel, opt, false);\n    preFetchFromExtra(userProps, itemStyle);\n    itemStyle = convertToEC4StyleForCustomSerise(itemStyle, textStyle, textConfig);\n    userProps && applyUserPropsAfter(itemStyle, userProps);\n    itemStyle.legacy = true;\n    return itemStyle;\n  }\n  /**\n   * @deprecated The reason see `api.style()`\n   * @public\n   * @param dataIndexInside by default `currDataIndexInside`.\n   */\n\n\n  function styleEmphasis(userProps, dataIndexInside) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecated('api.styleEmphasis', 'Please write literal style directly instead.');\n    }\n\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    var itemStyle = getItemStyleModel(dataIndexInside, EMPHASIS).getItemStyle();\n    var labelModel = getLabelModel(dataIndexInside, EMPHASIS);\n    var textStyle = labelStyleHelper.createTextStyle(labelModel, null, null, true, true);\n    textStyle.text = labelModel.getShallow('show') ? retrieve3(customSeries.getFormattedLabel(dataIndexInside, EMPHASIS), customSeries.getFormattedLabel(dataIndexInside, NORMAL), getDefaultLabel(data, dataIndexInside)) : null;\n    var textConfig = labelStyleHelper.createTextConfig(labelModel, null, true);\n    preFetchFromExtra(userProps, itemStyle);\n    itemStyle = convertToEC4StyleForCustomSerise(itemStyle, textStyle, textConfig);\n    userProps && applyUserPropsAfter(itemStyle, userProps);\n    itemStyle.legacy = true;\n    return itemStyle;\n  }\n\n  function applyUserPropsAfter(itemStyle, extra) {\n    for (var key in extra) {\n      if (hasOwn(extra, key)) {\n        itemStyle[key] = extra[key];\n      }\n    }\n  }\n\n  function preFetchFromExtra(extra, itemStyle) {\n    // A trick to retrieve those props firstly, which are used to\n    // apply auto inside fill/stroke in `convertToEC4StyleForCustomSerise`.\n    // (It's not reasonable but only for a degree of compat)\n    if (extra) {\n      extra.textFill && (itemStyle.textFill = extra.textFill);\n      extra.textPosition && (itemStyle.textPosition = extra.textPosition);\n    }\n  }\n  /**\n   * @public\n   * @param dataIndexInside by default `currDataIndexInside`.\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (hasOwn(STYLE_VISUAL_TYPE, visualType)) {\n      var style_1 = data.getItemVisual(dataIndexInside, 'style');\n      return style_1 ? style_1[STYLE_VISUAL_TYPE[visualType]] : null;\n    } // Only support these visuals. Other visual might be inner tricky\n    // for performance (like `style`), do not expose to users.\n\n\n    if (hasOwn(NON_STYLE_VISUAL_PROPS, visualType)) {\n      return data.getItemVisual(dataIndexInside, visualType);\n    }\n  }\n  /**\n   * @public\n   * @return If not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.type === 'cartesian2d') {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(defaults({\n        axis: baseAxis\n      }, opt));\n    }\n  }\n  /**\n   * @public\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @return font string\n   */\n\n\n  function font(opt) {\n    return labelStyleHelper.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  each(data.dimensions, function (dimName) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = data.getDimensionIndex(dimName);\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdateItem(api, existsEl, dataIndex, elOption, seriesModel, group, data) {\n  // [Rule]\n  // If `renderItem` returns `null`/`undefined`/`false`, remove the previous el if existing.\n  //     (It seems that violate the \"merge\" principle, but most of users probably intuitively\n  //     regard \"return;\" as \"show nothing element whatever\", so make a exception to meet the\n  //     most cases.)\n  // The rule or \"merge\" see [STRATEGY_MERGE].\n  // If `elOption` is `null`/`undefined`/`false` (when `renderItem` returns nothing).\n  if (!elOption) {\n    group.remove(existsEl);\n    return;\n  }\n\n  var el = doCreateOrUpdateEl(api, existsEl, dataIndex, elOption, seriesModel, group, true);\n  el && data.setItemGraphicEl(dataIndex, el);\n  el && enableHoverEmphasis(el, elOption.focus, elOption.blurScope);\n  return el;\n}\n\nfunction doCreateOrUpdateEl(api, existsEl, dataIndex, elOption, seriesModel, group, isRoot) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(elOption, 'should not have an null/undefined element setting');\n  }\n\n  var toBeReplacedIdx = -1;\n  var oldEl = existsEl;\n\n  if (existsEl && doesElNeedRecreate(existsEl, elOption, seriesModel) // || (\n  //     // PENDING: even in one-to-one mapping case, if el is marked as morph,\n  //     // do not sure whether the el will be mapped to another el with different\n  //     // hierarchy in Group tree. So always recreate el rather than reuse the el.\n  //     morphHelper && morphHelper.isOneToOneFrom(el)\n  // )\n  ) {\n    // Should keep at the original index, otherwise \"merge by index\" will be incorrect.\n    toBeReplacedIdx = indexOf(group.childrenRef(), existsEl);\n    existsEl = null;\n  }\n\n  var isInit = !existsEl;\n  var el = existsEl;\n\n  if (!el) {\n    el = createEl(elOption);\n\n    if (oldEl) {\n      copyElement(oldEl, el);\n    }\n  } else {\n    // FIMXE:NEXT unified clearState?\n    // If in some case the performance issue arised, consider\n    // do not clearState but update cached normal state directly.\n    el.clearStates();\n  } // Need to set morph: false explictly to disable automatically morphing.\n\n\n  if (elOption.morph === false) {\n    el.disableMorphing = true;\n  } else if (el.disableMorphing) {\n    el.disableMorphing = false;\n  }\n\n  attachedTxInfoTmp.normal.cfg = attachedTxInfoTmp.normal.conOpt = attachedTxInfoTmp.emphasis.cfg = attachedTxInfoTmp.emphasis.conOpt = attachedTxInfoTmp.blur.cfg = attachedTxInfoTmp.blur.conOpt = attachedTxInfoTmp.select.cfg = attachedTxInfoTmp.select.conOpt = null;\n  attachedTxInfoTmp.isLegacy = false;\n  doCreateOrUpdateAttachedTx(el, dataIndex, elOption, seriesModel, isInit, attachedTxInfoTmp);\n  doCreateOrUpdateClipPath(el, dataIndex, elOption, seriesModel, isInit);\n  updateElNormal(api, el, dataIndex, elOption, attachedTxInfoTmp, seriesModel, isInit, false);\n\n  for (var i = 0; i < STATES.length; i++) {\n    var stateName = STATES[i];\n\n    if (stateName !== NORMAL) {\n      var otherStateOpt = retrieveStateOption(elOption, stateName);\n      var otherStyleOpt = retrieveStyleOptionOnState(elOption, otherStateOpt, stateName);\n      updateElOnState(stateName, el, otherStateOpt, otherStyleOpt, attachedTxInfoTmp, isRoot, false);\n    }\n  }\n\n  updateZ(el, elOption, seriesModel);\n\n  if (elOption.type === 'group') {\n    mergeChildren(api, el, dataIndex, elOption, seriesModel);\n  }\n\n  if (toBeReplacedIdx >= 0) {\n    group.replaceAt(el, toBeReplacedIdx);\n  } else {\n    group.add(el);\n  }\n\n  return el;\n} // `el` must not be null/undefined.\n\n\nfunction doesElNeedRecreate(el, elOption, seriesModel) {\n  var elInner = customInnerStore(el);\n  var elOptionType = elOption.type;\n  var elOptionShape = elOption.shape;\n  var elOptionStyle = elOption.style;\n  return (// Always create new if universal transition is enabled.\n    // Because we do transition after render. It needs to know what old element is. Replacement will loose it.\n    seriesModel.isUniversalTransitionEnabled() // If `elOptionType` is `null`, follow the merge principle.\n    || elOptionType != null && elOptionType !== elInner.customGraphicType || elOptionType === 'path' && hasOwnPathData(elOptionShape) && getPathData(elOptionShape) !== elInner.customPathData || elOptionType === 'image' && hasOwn(elOptionStyle, 'image') && elOptionStyle.image !== elInner.customImagePath // // FIXME test and remove this restriction?\n    // || (elOptionType === 'text'\n    //     && hasOwn(elOptionStyle, 'text')\n    //     && (elOptionStyle as TextStyleProps).text !== elInner.customText\n    // )\n\n  );\n}\n\nfunction doCreateOrUpdateClipPath(el, dataIndex, elOption, seriesModel, isInit) {\n  // Based on the \"merge\" principle, if no clipPath provided,\n  // do nothing. The exists clip will be totally removed only if\n  // `el.clipPath` is `false`. Otherwise it will be merged/replaced.\n  var clipPathOpt = elOption.clipPath;\n\n  if (clipPathOpt === false) {\n    if (el && el.getClipPath()) {\n      el.removeClipPath();\n    }\n  } else if (clipPathOpt) {\n    var clipPath = el.getClipPath();\n\n    if (clipPath && doesElNeedRecreate(clipPath, clipPathOpt, seriesModel)) {\n      clipPath = null;\n    }\n\n    if (!clipPath) {\n      clipPath = createEl(clipPathOpt);\n\n      if (process.env.NODE_ENV !== 'production') {\n        assert(isPath(clipPath), 'Only any type of `path` can be used in `clipPath`, rather than ' + clipPath.type + '.');\n      }\n\n      el.setClipPath(clipPath);\n    }\n\n    updateElNormal(null, clipPath, dataIndex, clipPathOpt, null, seriesModel, isInit, false);\n  } // If not define `clipPath` in option, do nothing unnecessary.\n\n}\n\nfunction doCreateOrUpdateAttachedTx(el, dataIndex, elOption, seriesModel, isInit, attachedTxInfo) {\n  // group do not support textContent temporarily untill necessary.\n  if (el.isGroup) {\n    return;\n  } // Normal must be called before emphasis, for `isLegacy` detection.\n\n\n  processTxInfo(elOption, null, attachedTxInfo);\n  processTxInfo(elOption, EMPHASIS, attachedTxInfo); // If `elOption.textConfig` or `elOption.textContent` is null/undefined, it does not make sence.\n  // So for simplicity, if \"elOption hasOwnProperty of them but be null/undefined\", we do not\n  // trade them as set to null to el.\n  // Especially:\n  // `elOption.textContent: false` means remove textContent.\n  // `elOption.textContent.emphasis.style: false` means remove the style from emphasis state.\n\n  var txConOptNormal = attachedTxInfo.normal.conOpt;\n  var txConOptEmphasis = attachedTxInfo.emphasis.conOpt;\n  var txConOptBlur = attachedTxInfo.blur.conOpt;\n  var txConOptSelect = attachedTxInfo.select.conOpt;\n\n  if (txConOptNormal != null || txConOptEmphasis != null || txConOptSelect != null || txConOptBlur != null) {\n    var textContent = el.getTextContent();\n\n    if (txConOptNormal === false) {\n      textContent && el.removeTextContent();\n    } else {\n      txConOptNormal = attachedTxInfo.normal.conOpt = txConOptNormal || {\n        type: 'text'\n      };\n\n      if (!textContent) {\n        textContent = createEl(txConOptNormal);\n        el.setTextContent(textContent);\n      } else {\n        // If in some case the performance issue arised, consider\n        // do not clearState but update cached normal state directly.\n        textContent.clearStates();\n      }\n\n      updateElNormal(null, textContent, dataIndex, txConOptNormal, null, seriesModel, isInit, true);\n      var txConStlOptNormal = txConOptNormal && txConOptNormal.style;\n\n      for (var i = 0; i < STATES.length; i++) {\n        var stateName = STATES[i];\n\n        if (stateName !== NORMAL) {\n          var txConOptOtherState = attachedTxInfo[stateName].conOpt;\n          updateElOnState(stateName, textContent, txConOptOtherState, retrieveStyleOptionOnState(txConOptNormal, txConOptOtherState, stateName), null, false, true);\n        }\n      }\n\n      txConStlOptNormal ? textContent.dirty() : textContent.markRedraw();\n    }\n  }\n}\n\nfunction processTxInfo(elOption, state, attachedTxInfo) {\n  var stateOpt = !state ? elOption : retrieveStateOption(elOption, state);\n  var styleOpt = !state ? elOption.style : retrieveStyleOptionOnState(elOption, stateOpt, EMPHASIS);\n  var elType = elOption.type;\n  var txCfg = stateOpt ? stateOpt.textConfig : null;\n  var txConOptNormal = elOption.textContent;\n  var txConOpt = !txConOptNormal ? null : !state ? txConOptNormal : retrieveStateOption(txConOptNormal, state);\n\n  if (styleOpt && ( // Because emphasis style has little info to detect legacy,\n  // if normal is legacy, emphasis is trade as legacy.\n  attachedTxInfo.isLegacy || isEC4CompatibleStyle(styleOpt, elType, !!txCfg, !!txConOpt))) {\n    attachedTxInfo.isLegacy = true;\n    var convertResult = convertFromEC4CompatibleStyle(styleOpt, elType, !state); // Explicitly specified `textConfig` and `textContent` has higher priority than\n    // the ones generated by legacy style. Otherwise if users use them and `api.style`\n    // at the same time, they not both work and hardly to known why.\n\n    if (!txCfg && convertResult.textConfig) {\n      txCfg = convertResult.textConfig;\n    }\n\n    if (!txConOpt && convertResult.textContent) {\n      txConOpt = convertResult.textContent;\n    }\n  }\n\n  if (!state && txConOpt) {\n    var txConOptNormal_1 = txConOpt; // `textContent: {type: 'text'}`, the \"type\" is easy to be missing. So we tolerate it.\n\n    !txConOptNormal_1.type && (txConOptNormal_1.type = 'text');\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Do not tolerate incorret type for forward compat.\n      assert(txConOptNormal_1.type === 'text', 'textContent.type must be \"text\"');\n    }\n  }\n\n  var info = !state ? attachedTxInfo.normal : attachedTxInfo[state];\n  info.cfg = txCfg;\n  info.conOpt = txConOpt;\n}\n\nfunction retrieveStateOption(elOption, state) {\n  return !state ? elOption : elOption ? elOption[state] : null;\n}\n\nfunction retrieveStyleOptionOnState(stateOptionNormal, stateOption, state) {\n  var style = stateOption && stateOption.style;\n\n  if (style == null && state === EMPHASIS && stateOptionNormal) {\n    style = stateOptionNormal.styleEmphasis;\n  }\n\n  return style;\n} // Usage:\n// (1) By default, `elOption.$mergeChildren` is `'byIndex'`, which indicates that\n//     the existing children will not be removed, and enables the feature that\n//     update some of the props of some of the children simply by construct\n//     the returned children of `renderItem` like:\n//     `var children = group.children = []; children[3] = {opacity: 0.5};`\n// (2) If `elOption.$mergeChildren` is `'byName'`, add/update/remove children\n//     by child.name. But that might be lower performance.\n// (3) If `elOption.$mergeChildren` is `false`, the existing children will be\n//     replaced totally.\n// (4) If `!elOption.children`, following the \"merge\" principle, nothing will happen.\n//\n// For implementation simpleness, do not provide a direct way to remove sinlge\n// child (otherwise the total indicies of the children array have to be modified).\n// User can remove a single child by set its `ignore` as `true`.\n\n\nfunction mergeChildren(api, el, dataIndex, elOption, seriesModel) {\n  var newChildren = elOption.children;\n  var newLen = newChildren ? newChildren.length : 0;\n  var mergeChildren = elOption.$mergeChildren; // `diffChildrenByName` has been deprecated.\n\n  var byName = mergeChildren === 'byName' || elOption.diffChildrenByName;\n  var notMerge = mergeChildren === false; // For better performance on roam update, only enter if necessary.\n\n  if (!newLen && !byName && !notMerge) {\n    return;\n  }\n\n  if (byName) {\n    diffGroupChildren({\n      api: api,\n      oldChildren: el.children() || [],\n      newChildren: newChildren || [],\n      dataIndex: dataIndex,\n      seriesModel: seriesModel,\n      group: el\n    });\n    return;\n  }\n\n  notMerge && el.removeAll(); // Mapping children of a group simply by index, which\n  // might be better performance.\n\n  var index = 0;\n\n  for (; index < newLen; index++) {\n    newChildren[index] && doCreateOrUpdateEl(api, el.childAt(index), dataIndex, newChildren[index], seriesModel, el, false);\n  }\n\n  for (var i = el.childCount() - 1; i >= index; i--) {\n    // Do not supprot leave elements that are not mentioned in the latest\n    // `renderItem` return. Otherwise users may not have a clear and simple\n    // concept that how to contorl all of the elements.\n    doRemoveEl(el.childAt(i), seriesModel, el);\n  }\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdateEl(context.api, child, context.dataIndex, childOption, context.seriesModel, context.group, false);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  doRemoveEl(child, context.seriesModel, context.group);\n}\n\nfunction doRemoveEl(el, seriesModel, group) {\n  if (el) {\n    var leaveToProps = customInnerStore(el).leaveToProps;\n    leaveToProps ? graphicUtil.updateProps(el, leaveToProps, seriesModel, {\n      cb: function () {\n        group.remove(el);\n      }\n    }) : group.remove(el);\n  }\n}\n/**\n * @return SVG Path data.\n */\n\n\nfunction getPathData(shape) {\n  // \"d\" follows the SVG convention.\n  return shape && (shape.pathData || shape.d);\n}\n\nfunction hasOwnPathData(shape) {\n  return shape && (hasOwn(shape, 'pathData') || hasOwn(shape, 'd'));\n}"]},"metadata":{},"sourceType":"module"}
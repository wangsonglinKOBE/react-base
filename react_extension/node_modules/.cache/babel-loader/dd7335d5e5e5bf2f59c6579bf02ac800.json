{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport Path from 'zrender/lib/graphic/Path';\n\nvar PointerShape =\n/** @class */\nfunction () {\n  function PointerShape() {\n    this.angle = 0;\n    this.width = 10;\n    this.r = 10;\n    this.x = 0;\n    this.y = 0;\n  }\n\n  return PointerShape;\n}();\n\nvar PointerPath =\n/** @class */\nfunction (_super) {\n  __extends(PointerPath, _super);\n\n  function PointerPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'pointer';\n    return _this;\n  }\n\n  PointerPath.prototype.getDefaultShape = function () {\n    return new PointerShape();\n  };\n\n  PointerPath.prototype.buildPath = function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n  };\n\n  return PointerPath;\n}(Path);\n\nexport default PointerPath;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/chart/gauge/PointerPath.js"],"names":["__extends","Path","PointerShape","angle","width","r","x","y","PointerPath","_super","opts","_this","call","type","prototype","getDefaultShape","buildPath","ctx","shape","mathCos","Math","cos","mathSin","sin","PI","moveTo","lineTo"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport Path from 'zrender/lib/graphic/Path';\n\nvar PointerShape =\n/** @class */\nfunction () {\n  function PointerShape() {\n    this.angle = 0;\n    this.width = 10;\n    this.r = 10;\n    this.x = 0;\n    this.y = 0;\n  }\n\n  return PointerShape;\n}();\n\nvar PointerPath =\n/** @class */\nfunction (_super) {\n  __extends(PointerPath, _super);\n\n  function PointerPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'pointer';\n    return _this;\n  }\n\n  PointerPath.prototype.getDefaultShape = function () {\n    return new PointerShape();\n  };\n\n  PointerPath.prototype.buildPath = function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n  };\n\n  return PointerPath;\n}(Path);\n\nexport default PointerPath;"]},"metadata":{},"sourceType":"module"}
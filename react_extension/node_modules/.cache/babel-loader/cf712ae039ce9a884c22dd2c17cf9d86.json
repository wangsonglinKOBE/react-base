{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport env from 'zrender/lib/core/env';\nimport { DataFormatMixin } from '../../model/mixin/dataFormat';\nimport ComponentModel from '../../model/Component';\nimport { makeInner, defaultEmphasis } from '../../util/model';\nimport { createTooltipMarkup } from '../tooltip/tooltipMarkup';\n\nfunction fillLabel(opt) {\n  defaultEmphasis(opt, 'label', ['show']);\n} // { [componentType]: MarkerModel }\n\n\nvar inner = makeInner();\n\nvar MarkerModel =\n/** @class */\nfunction (_super) {\n  __extends(MarkerModel, _super);\n\n  function MarkerModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = MarkerModel.type;\n    /**\n     * If marker model is created by self from series\n     */\n\n    _this.createdBySelf = false;\n    return _this;\n  }\n  /**\n   * @overrite\n   */\n\n\n  MarkerModel.prototype.init = function (option, parentModel, ecModel) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.type === 'marker') {\n        throw new Error('Marker component is abstract component. Use markLine, markPoint, markArea instead.');\n      }\n    }\n\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._mergeOption(option, ecModel, false, true);\n  };\n\n  MarkerModel.prototype.isAnimationEnabled = function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  };\n  /**\n   * @overrite\n   */\n\n\n  MarkerModel.prototype.mergeOption = function (newOpt, ecModel) {\n    this._mergeOption(newOpt, ecModel, false, false);\n  };\n\n  MarkerModel.prototype._mergeOption = function (newOpt, ecModel, createdBySelf, isInit) {\n    var componentType = this.mainType;\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        // mainType can be markPoint, markLine, markArea\n        var markerOpt = seriesModel.get(this.mainType, true);\n        var markerModel = inner(seriesModel)[componentType];\n\n        if (!markerOpt || !markerOpt.data) {\n          inner(seriesModel)[componentType] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = this.createMarkerModelFromSeries(markerOpt, this, ecModel); // markerModel = new ImplementedMarkerModel(\n          //     markerOpt, this, ecModel\n          // );\n\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel._mergeOption(markerOpt, ecModel, true);\n        }\n\n        inner(seriesModel)[componentType] = markerModel;\n      }, this);\n    }\n  };\n\n  MarkerModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var itemName = data.getName(dataIndex);\n    return createTooltipMarkup('section', {\n      header: this.name,\n      blocks: [createTooltipMarkup('nameValue', {\n        name: itemName,\n        value: value,\n        noName: !itemName,\n        noValue: value == null\n      })]\n    });\n  };\n\n  MarkerModel.prototype.getData = function () {\n    return this._data;\n  };\n\n  MarkerModel.prototype.setData = function (data) {\n    this._data = data;\n  };\n\n  MarkerModel.getMarkerModelFromSeries = function (seriesModel, // Support three types of markers. Strict check.\n  componentType) {\n    return inner(seriesModel)[componentType];\n  };\n\n  MarkerModel.type = 'marker';\n  MarkerModel.dependencies = ['series', 'grid', 'polar', 'geo'];\n  return MarkerModel;\n}(ComponentModel);\n\nzrUtil.mixin(MarkerModel, DataFormatMixin.prototype);\nexport default MarkerModel;","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/echarts/lib/component/marker/MarkerModel.js"],"names":["__extends","zrUtil","env","DataFormatMixin","ComponentModel","makeInner","defaultEmphasis","createTooltipMarkup","fillLabel","opt","inner","MarkerModel","_super","_this","apply","arguments","type","createdBySelf","prototype","init","option","parentModel","ecModel","process","NODE_ENV","Error","mergeDefaultAndTheme","_mergeOption","isAnimationEnabled","node","hostSeries","__hostSeries","getShallow","mergeOption","newOpt","isInit","componentType","mainType","eachSeries","seriesModel","markerOpt","get","markerModel","data","each","item","Array","createMarkerModelFromSeries","extend","seriesIndex","name","formatTooltip","dataIndex","multipleSeries","dataType","getData","value","getRawValue","itemName","getName","header","blocks","noName","noValue","_data","setData","getMarkerModelFromSeries","dependencies","mixin"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport env from 'zrender/lib/core/env';\nimport { DataFormatMixin } from '../../model/mixin/dataFormat';\nimport ComponentModel from '../../model/Component';\nimport { makeInner, defaultEmphasis } from '../../util/model';\nimport { createTooltipMarkup } from '../tooltip/tooltipMarkup';\n\nfunction fillLabel(opt) {\n  defaultEmphasis(opt, 'label', ['show']);\n} // { [componentType]: MarkerModel }\n\n\nvar inner = makeInner();\n\nvar MarkerModel =\n/** @class */\nfunction (_super) {\n  __extends(MarkerModel, _super);\n\n  function MarkerModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = MarkerModel.type;\n    /**\n     * If marker model is created by self from series\n     */\n\n    _this.createdBySelf = false;\n    return _this;\n  }\n  /**\n   * @overrite\n   */\n\n\n  MarkerModel.prototype.init = function (option, parentModel, ecModel) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.type === 'marker') {\n        throw new Error('Marker component is abstract component. Use markLine, markPoint, markArea instead.');\n      }\n    }\n\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._mergeOption(option, ecModel, false, true);\n  };\n\n  MarkerModel.prototype.isAnimationEnabled = function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  };\n  /**\n   * @overrite\n   */\n\n\n  MarkerModel.prototype.mergeOption = function (newOpt, ecModel) {\n    this._mergeOption(newOpt, ecModel, false, false);\n  };\n\n  MarkerModel.prototype._mergeOption = function (newOpt, ecModel, createdBySelf, isInit) {\n    var componentType = this.mainType;\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        // mainType can be markPoint, markLine, markArea\n        var markerOpt = seriesModel.get(this.mainType, true);\n        var markerModel = inner(seriesModel)[componentType];\n\n        if (!markerOpt || !markerOpt.data) {\n          inner(seriesModel)[componentType] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = this.createMarkerModelFromSeries(markerOpt, this, ecModel); // markerModel = new ImplementedMarkerModel(\n          //     markerOpt, this, ecModel\n          // );\n\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel._mergeOption(markerOpt, ecModel, true);\n        }\n\n        inner(seriesModel)[componentType] = markerModel;\n      }, this);\n    }\n  };\n\n  MarkerModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var itemName = data.getName(dataIndex);\n    return createTooltipMarkup('section', {\n      header: this.name,\n      blocks: [createTooltipMarkup('nameValue', {\n        name: itemName,\n        value: value,\n        noName: !itemName,\n        noValue: value == null\n      })]\n    });\n  };\n\n  MarkerModel.prototype.getData = function () {\n    return this._data;\n  };\n\n  MarkerModel.prototype.setData = function (data) {\n    this._data = data;\n  };\n\n  MarkerModel.getMarkerModelFromSeries = function (seriesModel, // Support three types of markers. Strict check.\n  componentType) {\n    return inner(seriesModel)[componentType];\n  };\n\n  MarkerModel.type = 'marker';\n  MarkerModel.dependencies = ['series', 'grid', 'polar', 'geo'];\n  return MarkerModel;\n}(ComponentModel);\n\nzrUtil.mixin(MarkerModel, DataFormatMixin.prototype);\nexport default MarkerModel;"]},"metadata":{},"sourceType":"module"}
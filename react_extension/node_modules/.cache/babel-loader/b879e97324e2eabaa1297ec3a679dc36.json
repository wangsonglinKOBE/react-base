{"ast":null,"code":"export function create(x, y) {\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  return [x, y];\n}\nexport function copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\nexport function clone(v) {\n  return [v[0], v[1]];\n}\nexport function set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\nexport function add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\nexport function scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\nexport function sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\nexport function len(v) {\n  return Math.sqrt(lenSquare(v));\n}\nexport var length = len;\nexport function lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\nexport var lengthSquare = lenSquare;\nexport function mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\nexport function div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\nexport function dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\nexport function scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\nexport function normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\nexport function distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\nexport var dist = distance;\nexport function distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\nexport var distSquare = distanceSquare;\nexport function negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\nexport function lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\nexport function applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\nexport function min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\nexport function max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_extension/node_modules/zrender/lib/core/vector.js"],"names":["create","x","y","copy","out","v","clone","set","a","b","add","v1","v2","scaleAndAdd","sub","len","Math","sqrt","lenSquare","length","lengthSquare","mul","div","dot","scale","s","normalize","d","distance","dist","distanceSquare","distSquare","negate","lerp","t","applyTransform","m","min","max"],"mappings":"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","sourcesContent":["export function create(x, y) {\n    if (x == null) {\n        x = 0;\n    }\n    if (y == null) {\n        y = 0;\n    }\n    return [x, y];\n}\nexport function copy(out, v) {\n    out[0] = v[0];\n    out[1] = v[1];\n    return out;\n}\nexport function clone(v) {\n    return [v[0], v[1]];\n}\nexport function set(out, a, b) {\n    out[0] = a;\n    out[1] = b;\n    return out;\n}\nexport function add(out, v1, v2) {\n    out[0] = v1[0] + v2[0];\n    out[1] = v1[1] + v2[1];\n    return out;\n}\nexport function scaleAndAdd(out, v1, v2, a) {\n    out[0] = v1[0] + v2[0] * a;\n    out[1] = v1[1] + v2[1] * a;\n    return out;\n}\nexport function sub(out, v1, v2) {\n    out[0] = v1[0] - v2[0];\n    out[1] = v1[1] - v2[1];\n    return out;\n}\nexport function len(v) {\n    return Math.sqrt(lenSquare(v));\n}\nexport var length = len;\nexport function lenSquare(v) {\n    return v[0] * v[0] + v[1] * v[1];\n}\nexport var lengthSquare = lenSquare;\nexport function mul(out, v1, v2) {\n    out[0] = v1[0] * v2[0];\n    out[1] = v1[1] * v2[1];\n    return out;\n}\nexport function div(out, v1, v2) {\n    out[0] = v1[0] / v2[0];\n    out[1] = v1[1] / v2[1];\n    return out;\n}\nexport function dot(v1, v2) {\n    return v1[0] * v2[0] + v1[1] * v2[1];\n}\nexport function scale(out, v, s) {\n    out[0] = v[0] * s;\n    out[1] = v[1] * s;\n    return out;\n}\nexport function normalize(out, v) {\n    var d = len(v);\n    if (d === 0) {\n        out[0] = 0;\n        out[1] = 0;\n    }\n    else {\n        out[0] = v[0] / d;\n        out[1] = v[1] / d;\n    }\n    return out;\n}\nexport function distance(v1, v2) {\n    return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0])\n        + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\nexport var dist = distance;\nexport function distanceSquare(v1, v2) {\n    return (v1[0] - v2[0]) * (v1[0] - v2[0])\n        + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\nexport var distSquare = distanceSquare;\nexport function negate(out, v) {\n    out[0] = -v[0];\n    out[1] = -v[1];\n    return out;\n}\nexport function lerp(out, v1, v2, t) {\n    out[0] = v1[0] + t * (v2[0] - v1[0]);\n    out[1] = v1[1] + t * (v2[1] - v1[1]);\n    return out;\n}\nexport function applyTransform(out, v, m) {\n    var x = v[0];\n    var y = v[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\nexport function min(out, v1, v2) {\n    out[0] = Math.min(v1[0], v2[0]);\n    out[1] = Math.min(v1[1], v2[1]);\n    return out;\n}\nexport function max(out, v1, v2) {\n    out[0] = Math.max(v1[0], v2[0]);\n    out[1] = Math.max(v1[1], v2[1]);\n    return out;\n}\n"]},"metadata":{},"sourceType":"module"}
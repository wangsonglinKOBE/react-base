{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u684C\\u9762\\\\react\\u57FA\\u7840\\u539F\\u7406\\u5206\\u6790\\\\react_scaffolding\\\\src\\\\pages\\\\Home\\\\Message\\\\Detail\\\\index.jsx\";\nimport React, { Component } from 'react'; // import qs from 'querystring'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DetailData = [//假设是服务器返回id为1,2,3的详情内容\n{\n  id: '01',\n  content: '你好，中国'\n}, {\n  id: '02',\n  content: '你好，Kobe'\n}, {\n  id: '03',\n  content: '你好，tom'\n}]; // let obj = {name:'tom', age:25} //name=tom&age=25 => urlencoded\n// console.log(qs.stringify(obj)); //name=tom&age=25\n// let ooo = \"name=kobe&age=18\"\n// console.log(qs.parse(ooo)) //{name: \"kobe\", age: \"18\"}\n// 只要Message组件把id带过来，后端就给你匹配对应的content\n\nexport default class Detail extends Component {\n  render() {\n    // 打印传递过来的params参数\n    // console.log(this.props)\n    // const { id, title } = this.props.match.params\n    //打印search参数\n    // console.log(this.props); \n    // // 使用react脚手架自带的qs库将 key=value&key=value urlencoded 编码格式转为对象格式\n    // console.log(this.props.location.search);\n    // const { search } = this.props.location\n    // const searchData = qs.parse(search)\n    // console.log(searchData); //{?id: \"02\", title: \"消息二\"}\n    // // 注意去除问号\n    // const {id, title} = qs.parse(search.slice(1))\n    // 打印state参数\n    console.log(this.props);\n    const {\n      id,\n      title\n    } = this.props.location.state || {}; // 使用state参数时，注意 “  ” \n    // 查询后台数据，进行匹配\n\n    const findResult = DetailData.find(detailObj => {\n      return detailObj.id === id; //    return console.log(detailObj.id,'-----', id)\n    }) || {};\n    console.log('findResult---', findResult);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"ID:\", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"title:\", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"content:\", findResult.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_scaffolding/src/pages/Home/Message/Detail/index.jsx"],"names":["React","Component","DetailData","id","content","Detail","render","console","log","props","title","location","state","findResult","find","detailObj"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;;AAEA,MAAMC,UAAU,GAAG,CAAE;AACjB;AAAEC,EAAAA,EAAE,EAAC,IAAL;AAAWC,EAAAA,OAAO,EAAC;AAAnB,CADe,EAEf;AAAED,EAAAA,EAAE,EAAC,IAAL;AAAWC,EAAAA,OAAO,EAAC;AAAnB,CAFe,EAGf;AAAED,EAAAA,EAAE,EAAC,IAAL;AAAWC,EAAAA,OAAO,EAAC;AAAnB,CAHe,CAAnB,C,CAMA;AACA;AAEA;AACA;AAEA;;AAEA,eAAe,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAE1CK,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,UAAM;AAAEN,MAAAA,EAAF;AAAMO,MAAAA;AAAN,QAAgB,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,KAApB,IAA6B,EAAnD,CAvBK,CAyBL;AAGA;;AACA,UAAMC,UAAU,GAAGX,UAAU,CAACY,IAAX,CAAiBC,SAAD,IAAe;AAC9C,aAAOA,SAAS,CAACZ,EAAV,KAAiBA,EAAxB,CAD8C,CAElD;AACC,KAHkB,KAGb,EAHN;AAKAI,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BK,UAA5B;AAEA,wBACI;AAAA,8BACI;AAAA,0BAAQV,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,6BAAWO,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,+BAAaG,UAAU,CAACT,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA7CyC","sourcesContent":["import React, { Component } from 'react'\r\n// import qs from 'querystring'\r\n\r\nconst DetailData = [ //假设是服务器返回id为1,2,3的详情内容\r\n    { id:'01', content:'你好，中国' },\r\n    { id:'02', content:'你好，Kobe' },\r\n    { id:'03', content:'你好，tom' }\r\n]\r\n\r\n// let obj = {name:'tom', age:25} //name=tom&age=25 => urlencoded\r\n// console.log(qs.stringify(obj)); //name=tom&age=25\r\n\r\n// let ooo = \"name=kobe&age=18\"\r\n// console.log(qs.parse(ooo)) //{name: \"kobe\", age: \"18\"}\r\n\r\n// 只要Message组件把id带过来，后端就给你匹配对应的content\r\n\r\nexport default class Detail extends Component {\r\n\r\n    render() {\r\n        // 打印传递过来的params参数\r\n        // console.log(this.props)\r\n        // const { id, title } = this.props.match.params\r\n\r\n\r\n\r\n        //打印search参数\r\n        // console.log(this.props); \r\n        // // 使用react脚手架自带的qs库将 key=value&key=value urlencoded 编码格式转为对象格式\r\n        // console.log(this.props.location.search);\r\n        // const { search } = this.props.location\r\n\r\n        // const searchData = qs.parse(search)\r\n        // console.log(searchData); //{?id: \"02\", title: \"消息二\"}\r\n\r\n        // // 注意去除问号\r\n        // const {id, title} = qs.parse(search.slice(1))\r\n\r\n\r\n\r\n        // 打印state参数\r\n        console.log(this.props);\r\n        const { id, title } = this.props.location.state || {}\r\n        \r\n        // 使用state参数时，注意 “  ” \r\n        \r\n\r\n        // 查询后台数据，进行匹配\r\n        const findResult = DetailData.find((detailObj) => {\r\n            return detailObj.id === id\r\n        //    return console.log(detailObj.id,'-----', id)\r\n        }) || {}\r\n\r\n        console.log('findResult---',findResult)\r\n\r\n        return (\r\n            <ul>\r\n                <li>ID:{id}</li>\r\n                <li>title:{title}</li>\r\n                <li>content:{findResult.content}</li>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
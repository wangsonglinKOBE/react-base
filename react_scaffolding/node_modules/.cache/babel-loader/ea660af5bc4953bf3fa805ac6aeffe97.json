{"ast":null,"code":"/**\n * Copyright (c) 2010,2011,2012,2013,2014 Morgan Roderick http://roderick.dk\n * License: MIT - http://mrgnrdrck.mit-license.org\n *\n * https://github.com/mroderick/PubSubJS\n */\n(function (root, factory) {\n  'use strict';\n\n  var PubSub = {};\n  root.PubSub = PubSub;\n  factory(PubSub); // CommonJS and Node.js module support\n\n  if (typeof exports === 'object') {\n    if (module !== undefined && module.exports) {\n      exports = module.exports = PubSub; // Node.js specific `module.exports`\n    }\n\n    exports.PubSub = PubSub; // CommonJS module 1.1.1 spec\n\n    module.exports = exports = PubSub; // CommonJS\n  } // AMD support\n\n  /* eslint-disable no-undef */\n  else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return PubSub;\n    });\n    /* eslint-enable no-undef */\n  }\n})(typeof window === 'object' && window || this, function (PubSub) {\n  'use strict';\n\n  var messages = {},\n      lastUid = -1,\n      ALL_SUBSCRIBING_MSG = '*';\n\n  function hasKeys(obj) {\n    var key;\n\n    for (key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Returns a function that throws the passed exception, for use as argument for setTimeout\n   * @alias throwException\n   * @function\n   * @param { Object } ex An Error object\n   */\n\n\n  function throwException(ex) {\n    return function reThrowException() {\n      throw ex;\n    };\n  }\n\n  function callSubscriberWithDelayedExceptions(subscriber, message, data) {\n    try {\n      subscriber(message, data);\n    } catch (ex) {\n      setTimeout(throwException(ex), 0);\n    }\n  }\n\n  function callSubscriberWithImmediateExceptions(subscriber, message, data) {\n    subscriber(message, data);\n  }\n\n  function deliverMessage(originalMessage, matchedMessage, data, immediateExceptions) {\n    var subscribers = messages[matchedMessage],\n        callSubscriber = immediateExceptions ? callSubscriberWithImmediateExceptions : callSubscriberWithDelayedExceptions,\n        s;\n\n    if (!Object.prototype.hasOwnProperty.call(messages, matchedMessage)) {\n      return;\n    }\n\n    for (s in subscribers) {\n      if (Object.prototype.hasOwnProperty.call(subscribers, s)) {\n        callSubscriber(subscribers[s], originalMessage, data);\n      }\n    }\n  }\n\n  function createDeliveryFunction(message, data, immediateExceptions) {\n    return function deliverNamespaced() {\n      var topic = String(message),\n          position = topic.lastIndexOf('.'); // deliver the message as it is now\n\n      deliverMessage(message, message, data, immediateExceptions); // trim the hierarchy and deliver message to each level\n\n      while (position !== -1) {\n        topic = topic.substr(0, position);\n        position = topic.lastIndexOf('.');\n        deliverMessage(message, topic, data, immediateExceptions);\n      }\n\n      deliverMessage(message, ALL_SUBSCRIBING_MSG, data, immediateExceptions);\n    };\n  }\n\n  function hasDirectSubscribersFor(message) {\n    var topic = String(message),\n        found = Boolean(Object.prototype.hasOwnProperty.call(messages, topic) && hasKeys(messages[topic]));\n    return found;\n  }\n\n  function messageHasSubscribers(message) {\n    var topic = String(message),\n        found = hasDirectSubscribersFor(topic) || hasDirectSubscribersFor(ALL_SUBSCRIBING_MSG),\n        position = topic.lastIndexOf('.');\n\n    while (!found && position !== -1) {\n      topic = topic.substr(0, position);\n      position = topic.lastIndexOf('.');\n      found = hasDirectSubscribersFor(topic);\n    }\n\n    return found;\n  }\n\n  function publish(message, data, sync, immediateExceptions) {\n    message = typeof message === 'symbol' ? message.toString() : message;\n    var deliver = createDeliveryFunction(message, data, immediateExceptions),\n        hasSubscribers = messageHasSubscribers(message);\n\n    if (!hasSubscribers) {\n      return false;\n    }\n\n    if (sync === true) {\n      deliver();\n    } else {\n      setTimeout(deliver, 0);\n    }\n\n    return true;\n  }\n  /**\n   * Publishes the message, passing the data to it's subscribers\n   * @function\n   * @alias publish\n   * @param { String } message The message to publish\n   * @param {} data The data to pass to subscribers\n   * @return { Boolean }\n   */\n\n\n  PubSub.publish = function (message, data) {\n    return publish(message, data, false, PubSub.immediateExceptions);\n  };\n  /**\n   * Publishes the message synchronously, passing the data to it's subscribers\n   * @function\n   * @alias publishSync\n   * @param { String } message The message to publish\n   * @param {} data The data to pass to subscribers\n   * @return { Boolean }\n   */\n\n\n  PubSub.publishSync = function (message, data) {\n    return publish(message, data, true, PubSub.immediateExceptions);\n  };\n  /**\n   * Subscribes the passed function to the passed message. Every returned token is unique and should be stored if you need to unsubscribe\n   * @function\n   * @alias subscribe\n   * @param { String } message The message to subscribe to\n   * @param { Function } func The function to call when a new message is published\n   * @return { String }\n   */\n\n\n  PubSub.subscribe = function (message, func) {\n    if (typeof func !== 'function') {\n      return false;\n    }\n\n    message = typeof message === 'symbol' ? message.toString() : message; // message is not registered yet\n\n    if (!Object.prototype.hasOwnProperty.call(messages, message)) {\n      messages[message] = {};\n    } // forcing token as String, to allow for future expansions without breaking usage\n    // and allow for easy use as key names for the 'messages' object\n\n\n    var token = 'uid_' + String(++lastUid);\n    messages[message][token] = func; // return token for unsubscribing\n\n    return token;\n  };\n\n  PubSub.subscribeAll = function (func) {\n    return PubSub.subscribe(ALL_SUBSCRIBING_MSG, func);\n  };\n  /**\n   * Subscribes the passed function to the passed message once\n   * @function\n   * @alias subscribeOnce\n   * @param { String } message The message to subscribe to\n   * @param { Function } func The function to call when a new message is published\n   * @return { PubSub }\n   */\n\n\n  PubSub.subscribeOnce = function (message, func) {\n    var token = PubSub.subscribe(message, function () {\n      // before func apply, unsubscribe message\n      PubSub.unsubscribe(token);\n      func.apply(this, arguments);\n    });\n    return PubSub;\n  };\n  /**\n   * Clears all subscriptions\n   * @function\n   * @public\n   * @alias clearAllSubscriptions\n   */\n\n\n  PubSub.clearAllSubscriptions = function clearAllSubscriptions() {\n    messages = {};\n  };\n  /**\n   * Clear subscriptions by the topic\n   * @function\n   * @public\n   * @alias clearAllSubscriptions\n   * @return { int }\n   */\n\n\n  PubSub.clearSubscriptions = function clearSubscriptions(topic) {\n    var m;\n\n    for (m in messages) {\n      if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0) {\n        delete messages[m];\n      }\n    }\n  };\n  /**\n     Count subscriptions by the topic\n   * @function\n   * @public\n   * @alias countSubscriptions\n   * @return { Array }\n  */\n\n\n  PubSub.countSubscriptions = function countSubscriptions(topic) {\n    var m; // eslint-disable-next-line no-unused-vars\n\n    var token;\n    var count = 0;\n\n    for (m in messages) {\n      if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0) {\n        for (token in messages[m]) {\n          count++;\n        }\n\n        break;\n      }\n    }\n\n    return count;\n  };\n  /**\n     Gets subscriptions by the topic\n   * @function\n   * @public\n   * @alias getSubscriptions\n  */\n\n\n  PubSub.getSubscriptions = function getSubscriptions(topic) {\n    var m;\n    var list = [];\n\n    for (m in messages) {\n      if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0) {\n        list.push(m);\n      }\n    }\n\n    return list;\n  };\n  /**\n   * Removes subscriptions\n   *\n   * - When passed a token, removes a specific subscription.\n   *\n  * - When passed a function, removes all subscriptions for that function\n   *\n  * - When passed a topic, removes all subscriptions for that topic (hierarchy)\n   * @function\n   * @public\n   * @alias subscribeOnce\n   * @param { String | Function } value A token, function or topic to unsubscribe from\n   * @example // Unsubscribing with a token\n   * var token = PubSub.subscribe('mytopic', myFunc);\n   * PubSub.unsubscribe(token);\n   * @example // Unsubscribing with a function\n   * PubSub.unsubscribe(myFunc);\n   * @example // Unsubscribing from a topic\n   * PubSub.unsubscribe('mytopic');\n   */\n\n\n  PubSub.unsubscribe = function (value) {\n    var descendantTopicExists = function (topic) {\n      var m;\n\n      for (m in messages) {\n        if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0) {\n          // a descendant of the topic exists:\n          return true;\n        }\n      }\n\n      return false;\n    },\n        isTopic = typeof value === 'string' && (Object.prototype.hasOwnProperty.call(messages, value) || descendantTopicExists(value)),\n        isToken = !isTopic && typeof value === 'string',\n        isFunction = typeof value === 'function',\n        result = false,\n        m,\n        message,\n        t;\n\n    if (isTopic) {\n      PubSub.clearSubscriptions(value);\n      return;\n    }\n\n    for (m in messages) {\n      if (Object.prototype.hasOwnProperty.call(messages, m)) {\n        message = messages[m];\n\n        if (isToken && message[value]) {\n          delete message[value];\n          result = value; // tokens are unique, so we can just stop here\n\n          break;\n        }\n\n        if (isFunction) {\n          for (t in message) {\n            if (Object.prototype.hasOwnProperty.call(message, t) && message[t] === value) {\n              delete message[t];\n              result = true;\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n});","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_scaffolding/node_modules/pubsub-js/src/pubsub.js"],"names":["root","factory","PubSub","exports","module","undefined","define","amd","window","messages","lastUid","ALL_SUBSCRIBING_MSG","hasKeys","obj","key","Object","prototype","hasOwnProperty","call","throwException","ex","reThrowException","callSubscriberWithDelayedExceptions","subscriber","message","data","setTimeout","callSubscriberWithImmediateExceptions","deliverMessage","originalMessage","matchedMessage","immediateExceptions","subscribers","callSubscriber","s","createDeliveryFunction","deliverNamespaced","topic","String","position","lastIndexOf","substr","hasDirectSubscribersFor","found","Boolean","messageHasSubscribers","publish","sync","toString","deliver","hasSubscribers","publishSync","subscribe","func","token","subscribeAll","subscribeOnce","unsubscribe","apply","arguments","clearAllSubscriptions","clearSubscriptions","m","indexOf","countSubscriptions","count","getSubscriptions","list","push","value","descendantTopicExists","isTopic","isToken","isFunction","result","t"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2010,2011,2012,2013,2014 Morgan Roderick http://roderick.dk\n * License: MIT - http://mrgnrdrck.mit-license.org\n *\n * https://github.com/mroderick/PubSubJS\n */\n\n(function (root, factory){\n    'use strict';\n\n    var PubSub = {};\n    root.PubSub = PubSub;\n    factory(PubSub);\n    // CommonJS and Node.js module support\n    if (typeof exports === 'object'){\n        if (module !== undefined && module.exports) {\n            exports = module.exports = PubSub; // Node.js specific `module.exports`\n        }\n        exports.PubSub = PubSub; // CommonJS module 1.1.1 spec\n        module.exports = exports = PubSub; // CommonJS\n    }\n    // AMD support\n    /* eslint-disable no-undef */\n    else if (typeof define === 'function' && define.amd){\n        define(function() { return PubSub; });\n        /* eslint-enable no-undef */\n    }\n\n}(( typeof window === 'object' && window ) || this, function (PubSub){\n    'use strict';\n\n    var messages = {},\n        lastUid = -1,\n        ALL_SUBSCRIBING_MSG = '*';\n\n    function hasKeys(obj){\n        var key;\n\n        for (key in obj){\n            if ( Object.prototype.hasOwnProperty.call(obj, key) ){\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns a function that throws the passed exception, for use as argument for setTimeout\n     * @alias throwException\n     * @function\n     * @param { Object } ex An Error object\n     */\n    function throwException( ex ){\n        return function reThrowException(){\n            throw ex;\n        };\n    }\n\n    function callSubscriberWithDelayedExceptions( subscriber, message, data ){\n        try {\n            subscriber( message, data );\n        } catch( ex ){\n            setTimeout( throwException( ex ), 0);\n        }\n    }\n\n    function callSubscriberWithImmediateExceptions( subscriber, message, data ){\n        subscriber( message, data );\n    }\n\n    function deliverMessage( originalMessage, matchedMessage, data, immediateExceptions ){\n        var subscribers = messages[matchedMessage],\n            callSubscriber = immediateExceptions ? callSubscriberWithImmediateExceptions : callSubscriberWithDelayedExceptions,\n            s;\n\n        if ( !Object.prototype.hasOwnProperty.call( messages, matchedMessage ) ) {\n            return;\n        }\n\n        for (s in subscribers){\n            if ( Object.prototype.hasOwnProperty.call(subscribers, s)){\n                callSubscriber( subscribers[s], originalMessage, data );\n            }\n        }\n    }\n\n    function createDeliveryFunction( message, data, immediateExceptions ){\n        return function deliverNamespaced(){\n            var topic = String( message ),\n                position = topic.lastIndexOf( '.' );\n\n            // deliver the message as it is now\n            deliverMessage(message, message, data, immediateExceptions);\n\n            // trim the hierarchy and deliver message to each level\n            while( position !== -1 ){\n                topic = topic.substr( 0, position );\n                position = topic.lastIndexOf('.');\n                deliverMessage( message, topic, data, immediateExceptions );\n            }\n\n            deliverMessage(message, ALL_SUBSCRIBING_MSG, data, immediateExceptions);\n        };\n    }\n\n    function hasDirectSubscribersFor( message ) {\n        var topic = String( message ),\n            found = Boolean(Object.prototype.hasOwnProperty.call( messages, topic ) && hasKeys(messages[topic]));\n\n        return found;\n    }\n\n    function messageHasSubscribers( message ){\n        var topic = String( message ),\n            found = hasDirectSubscribersFor(topic) || hasDirectSubscribersFor(ALL_SUBSCRIBING_MSG),\n            position = topic.lastIndexOf( '.' );\n\n        while ( !found && position !== -1 ){\n            topic = topic.substr( 0, position );\n            position = topic.lastIndexOf( '.' );\n            found = hasDirectSubscribersFor(topic);\n        }\n\n        return found;\n    }\n\n    function publish( message, data, sync, immediateExceptions ){\n        message = (typeof message === 'symbol') ? message.toString() : message;\n\n        var deliver = createDeliveryFunction( message, data, immediateExceptions ),\n            hasSubscribers = messageHasSubscribers( message );\n\n        if ( !hasSubscribers ){\n            return false;\n        }\n\n        if ( sync === true ){\n            deliver();\n        } else {\n            setTimeout( deliver, 0 );\n        }\n        return true;\n    }\n\n    /**\n     * Publishes the message, passing the data to it's subscribers\n     * @function\n     * @alias publish\n     * @param { String } message The message to publish\n     * @param {} data The data to pass to subscribers\n     * @return { Boolean }\n     */\n    PubSub.publish = function( message, data ){\n        return publish( message, data, false, PubSub.immediateExceptions );\n    };\n\n    /**\n     * Publishes the message synchronously, passing the data to it's subscribers\n     * @function\n     * @alias publishSync\n     * @param { String } message The message to publish\n     * @param {} data The data to pass to subscribers\n     * @return { Boolean }\n     */\n    PubSub.publishSync = function( message, data ){\n        return publish( message, data, true, PubSub.immediateExceptions );\n    };\n\n    /**\n     * Subscribes the passed function to the passed message. Every returned token is unique and should be stored if you need to unsubscribe\n     * @function\n     * @alias subscribe\n     * @param { String } message The message to subscribe to\n     * @param { Function } func The function to call when a new message is published\n     * @return { String }\n     */\n    PubSub.subscribe = function( message, func ){\n        if ( typeof func !== 'function'){\n            return false;\n        }\n\n        message = (typeof message === 'symbol') ? message.toString() : message;\n\n        // message is not registered yet\n        if ( !Object.prototype.hasOwnProperty.call( messages, message ) ){\n            messages[message] = {};\n        }\n\n        // forcing token as String, to allow for future expansions without breaking usage\n        // and allow for easy use as key names for the 'messages' object\n        var token = 'uid_' + String(++lastUid);\n        messages[message][token] = func;\n\n        // return token for unsubscribing\n        return token;\n    };\n\n    PubSub.subscribeAll = function( func ){\n        return PubSub.subscribe(ALL_SUBSCRIBING_MSG, func);\n    };\n\n    /**\n     * Subscribes the passed function to the passed message once\n     * @function\n     * @alias subscribeOnce\n     * @param { String } message The message to subscribe to\n     * @param { Function } func The function to call when a new message is published\n     * @return { PubSub }\n     */\n    PubSub.subscribeOnce = function( message, func ){\n        var token = PubSub.subscribe( message, function(){\n            // before func apply, unsubscribe message\n            PubSub.unsubscribe( token );\n            func.apply( this, arguments );\n        });\n        return PubSub;\n    };\n\n    /**\n     * Clears all subscriptions\n     * @function\n     * @public\n     * @alias clearAllSubscriptions\n     */\n    PubSub.clearAllSubscriptions = function clearAllSubscriptions(){\n        messages = {};\n    };\n\n    /**\n     * Clear subscriptions by the topic\n     * @function\n     * @public\n     * @alias clearAllSubscriptions\n     * @return { int }\n     */\n    PubSub.clearSubscriptions = function clearSubscriptions(topic){\n        var m;\n        for (m in messages){\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0){\n                delete messages[m];\n            }\n        }\n    };\n\n    /**\n       Count subscriptions by the topic\n     * @function\n     * @public\n     * @alias countSubscriptions\n     * @return { Array }\n    */\n    PubSub.countSubscriptions = function countSubscriptions(topic){\n        var m;\n        // eslint-disable-next-line no-unused-vars\n        var token;\n        var count = 0;\n        for (m in messages) {\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0) {\n                for (token in messages[m]) {\n                    count++;\n                }\n                break;\n            }\n        }\n        return count;\n    };\n\n\n    /**\n       Gets subscriptions by the topic\n     * @function\n     * @public\n     * @alias getSubscriptions\n    */\n    PubSub.getSubscriptions = function getSubscriptions(topic){\n        var m;\n        var list = [];\n        for (m in messages){\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0){\n                list.push(m);\n            }\n        }\n        return list;\n    };\n\n    /**\n     * Removes subscriptions\n     *\n     * - When passed a token, removes a specific subscription.\n     *\n\t * - When passed a function, removes all subscriptions for that function\n     *\n\t * - When passed a topic, removes all subscriptions for that topic (hierarchy)\n     * @function\n     * @public\n     * @alias subscribeOnce\n     * @param { String | Function } value A token, function or topic to unsubscribe from\n     * @example // Unsubscribing with a token\n     * var token = PubSub.subscribe('mytopic', myFunc);\n     * PubSub.unsubscribe(token);\n     * @example // Unsubscribing with a function\n     * PubSub.unsubscribe(myFunc);\n     * @example // Unsubscribing from a topic\n     * PubSub.unsubscribe('mytopic');\n     */\n    PubSub.unsubscribe = function(value){\n        var descendantTopicExists = function(topic) {\n                var m;\n                for ( m in messages ){\n                    if ( Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0 ){\n                        // a descendant of the topic exists:\n                        return true;\n                    }\n                }\n\n                return false;\n            },\n            isTopic    = typeof value === 'string' && ( Object.prototype.hasOwnProperty.call(messages, value) || descendantTopicExists(value) ),\n            isToken    = !isTopic && typeof value === 'string',\n            isFunction = typeof value === 'function',\n            result = false,\n            m, message, t;\n\n        if (isTopic){\n            PubSub.clearSubscriptions(value);\n            return;\n        }\n\n        for ( m in messages ){\n            if ( Object.prototype.hasOwnProperty.call( messages, m ) ){\n                message = messages[m];\n\n                if ( isToken && message[value] ){\n                    delete message[value];\n                    result = value;\n                    // tokens are unique, so we can just stop here\n                    break;\n                }\n\n                if (isFunction) {\n                    for ( t in message ){\n                        if (Object.prototype.hasOwnProperty.call(message, t) && message[t] === value){\n                            delete message[t];\n                            result = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n}));\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u684C\\u9762\\\\react\\u57FA\\u7840\\u539F\\u7406\\u5206\\u6790\\\\react_scaffolding\\\\src\\\\components\\\\Search\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.search = () => {\n      // 获取用户的输入\n      // const { keyWordElement } = this\n      // const { value } = keyWordElement\n      // 连续解构赋值并重命名\n      const {\n        keyWordElement: {\n          value: keyWord\n        }\n      } = this;\n      console.log(keyWord); // 发送请求前通知App更新状态\n\n      this.props.updateAppState({\n        isFirst: false,\n        isLoading: true\n      }); // 发送网络请求 \n      // 使用代理向端口号为5000的服务器发送请求\n      // axios.get(`http://localhost:3000/api1/search/users?q=${keyWord}`).then\n      // 注意：如果使用代理，脚手架和中间代理是同一个域下的可以省略 http://localhost:3000\n      // axios.get(`/api1/search/users?q=${keyWord}`).then\n      // 向github发送请求\n\n      axios.get(`https://api.github.com/search/users?q=${keyWord}`).then(res => {\n        console.log('请求成功', res.data); // 接收App的props调用更新users的函数传入获取的user更新到App中的state中\n        // this.props.saveUsers(res.data.items)\n        // 请求成功后通知App更新状态\n\n        this.props.updateAppState({\n          isLoading: false,\n          users: res.data.items\n        });\n      }, error => {\n        console.log('请求失败', error); // 请求失败后通知App更新状态\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"jumbotron-heading\",\n        children: \"\\u641C\\u7D22github\\u7528\\u6237\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: c => this.keyWordElement = c,\n          type: \"text\",\n          placeholder: \"\\u8F93\\u5165\\u5173\\u952E\\u8BCD\\u70B9\\u51FB\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.search,\n          children: \"\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_scaffolding/src/components/Search/index.jsx"],"names":["React","Component","axios","Search","search","keyWordElement","value","keyWord","console","log","props","updateAppState","isFirst","isLoading","get","then","res","data","users","items","error","render","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAG1CG,MAH0C,GAGjC,MAAM;AACX;AACA;AACA;AACA;AACA,YAAM;AAAEC,QAAAA,cAAc,EAAE;AAACC,UAAAA,KAAK,EAACC;AAAP;AAAlB,UAAsC,IAA5C;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EANW,CAQX;;AACA,WAAKG,KAAL,CAAWC,cAAX,CAA0B;AAACC,QAAAA,OAAO,EAAC,KAAT;AAAgBC,QAAAA,SAAS,EAAC;AAA1B,OAA1B,EATW,CAWX;AACA;AACA;AACA;AACA;AACA;;AACAX,MAAAA,KAAK,CAACY,GAAN,CAAW,yCAAwCP,OAAQ,EAA3D,EAA8DQ,IAA9D,CACIC,GAAG,IAAI;AACHR,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBO,GAAG,CAACC,IAAxB,EADG,CAEH;AACA;AAEA;;AACA,aAAKP,KAAL,CAAWC,cAAX,CAA0B;AAAEE,UAAAA,SAAS,EAAC,KAAZ;AAAmBK,UAAAA,KAAK,EAACF,GAAG,CAACC,IAAJ,CAASE;AAAlC,SAA1B;AACH,OARL,EASIC,KAAK,IAAI;AACLZ,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBW,KAApB,EADK,CAEL;AAEH,OAbL;AAeH,KAnCyC;AAAA;;AAqC1CC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAO,UAAA,GAAG,EAAEC,CAAC,IAAI,KAAKjB,cAAL,GAAsBiB,CAAvC;AAA0C,UAAA,IAAI,EAAC,MAA/C;AAAsD,UAAA,WAAW,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,gBADJ,uBAEI;AAAQ,UAAA,OAAO,EAAE,KAAKlB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA/CyC","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default class Search extends Component {\r\n\r\n\r\n    search = () => {\r\n        // 获取用户的输入\r\n        // const { keyWordElement } = this\r\n        // const { value } = keyWordElement\r\n        // 连续解构赋值并重命名\r\n        const { keyWordElement: {value:keyWord} } = this\r\n        console.log(keyWord)\r\n\r\n        // 发送请求前通知App更新状态\r\n        this.props.updateAppState({isFirst:false, isLoading:true})\r\n\r\n        // 发送网络请求 \r\n        // 使用代理向端口号为5000的服务器发送请求\r\n        // axios.get(`http://localhost:3000/api1/search/users?q=${keyWord}`).then\r\n        // 注意：如果使用代理，脚手架和中间代理是同一个域下的可以省略 http://localhost:3000\r\n        // axios.get(`/api1/search/users?q=${keyWord}`).then\r\n        // 向github发送请求\r\n        axios.get(`https://api.github.com/search/users?q=${keyWord}`).then(\r\n            res => {\r\n                console.log('请求成功', res.data);\r\n                // 接收App的props调用更新users的函数传入获取的user更新到App中的state中\r\n                // this.props.saveUsers(res.data.items)\r\n\r\n                // 请求成功后通知App更新状态\r\n                this.props.updateAppState({ isLoading:false, users:res.data.items})\r\n            },\r\n            error => {\r\n                console.log('请求失败', error);\r\n                // 请求失败后通知App更新状态\r\n                \r\n            },\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"jumbotron\">\r\n                <h3 className=\"jumbotron-heading\">搜索github用户</h3>\r\n                <div>\r\n                    <input ref={c => this.keyWordElement = c} type=\"text\" placeholder=\"输入关键词点击搜索\"/>&nbsp;\r\n                    <button onClick={this.search}>搜索</button>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u684C\\u9762\\\\react\\u57FA\\u7840\\u539F\\u7406\\u5206\\u6790\\\\react_scaffolding\\\\src\\\\pages\\\\Home\\\\Message\\\\Detail\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport qs from 'querystring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DetailData = [//假设是服务器返回id为1,2,3的详情内容\n{\n  id: '01',\n  content: '你好，中国'\n}, {\n  id: '02',\n  content: '你好，Kobe'\n}, {\n  id: '03',\n  content: '你好，tom'\n}];\nlet obj = {\n  name: 'tom',\n  age: 25\n}; //name=tom&age=25 => urlencoded\n\nconsole.log(qs.stringify(obj)); //name=tom&age=25\n\nlet ooo = \"name=kobe&age=18\";\nconsole.log(qs.parse(ooo)); //{name: \"kobe\", age: \"18\"}\n// 只要Message组件把id带过来，后端就给你匹配对应的content\n\nexport default class Detail extends Component {\n  render() {\n    // 打印传递过来的params参数\n    // console.log(this.props)\n    // const { id, title } = this.props.match.params\n    //打印search参数\n    console.log(this.props); // 使用react脚手架自带的qs库将 key=value&key=value urlencoded 编码格式转为对象格式\n\n    console.log(this.props.location.search);\n    const searchData = qs.parse(this.props.location.search);\n    console.log(searchData); //{?id: \"01\", title: \"消息一\"}\n    // 注意去除问号\n\n    console.log(searchData); // 查询后台数据，进行匹配\n    // const findResult = DetailData.find((detailObj) => {\n    //     return detailObj.id === id\n    // //    return console.log(detailObj.id,'-----', id)\n    // })\n    // console.log(findResult)\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_scaffolding/src/pages/Home/Message/Detail/index.jsx"],"names":["React","Component","qs","DetailData","id","content","obj","name","age","console","log","stringify","ooo","parse","Detail","render","props","location","search","searchData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,aAAf;;AAEA,MAAMC,UAAU,GAAG,CAAE;AACjB;AAAEC,EAAAA,EAAE,EAAC,IAAL;AAAWC,EAAAA,OAAO,EAAC;AAAnB,CADe,EAEf;AAAED,EAAAA,EAAE,EAAC,IAAL;AAAWC,EAAAA,OAAO,EAAC;AAAnB,CAFe,EAGf;AAAED,EAAAA,EAAE,EAAC,IAAL;AAAWC,EAAAA,OAAO,EAAC;AAAnB,CAHe,CAAnB;AAMA,IAAIC,GAAG,GAAG;AAACC,EAAAA,IAAI,EAAC,KAAN;AAAaC,EAAAA,GAAG,EAAC;AAAjB,CAAV,C,CAA+B;;AAC/BC,OAAO,CAACC,GAAR,CAAYR,EAAE,CAACS,SAAH,CAAaL,GAAb,CAAZ,E,CAAgC;;AAEhC,IAAIM,GAAG,GAAG,kBAAV;AACAH,OAAO,CAACC,GAAR,CAAYR,EAAE,CAACW,KAAH,CAASD,GAAT,CAAZ,E,CAA2B;AAE3B;;AAEA,eAAe,MAAME,MAAN,SAAqBb,SAArB,CAA+B;AAE1Cc,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AAGA;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAjB,EAPK,CAQL;;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAL,CAAWC,QAAX,CAAoBC,MAAhC;AACA,UAAMC,UAAU,GAAGjB,EAAE,CAACW,KAAH,CAAS,KAAKG,KAAL,CAAWC,QAAX,CAAoBC,MAA7B,CAAnB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYS,UAAZ,EAXK,CAWoB;AACzB;;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYS,UAAZ,EAbK,CAeL;AACA;AACA;AACA;AACA;AAEA;;AAEA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAhCyC","sourcesContent":["import React, { Component } from 'react'\r\nimport qs from 'querystring'\r\n\r\nconst DetailData = [ //假设是服务器返回id为1,2,3的详情内容\r\n    { id:'01', content:'你好，中国' },\r\n    { id:'02', content:'你好，Kobe' },\r\n    { id:'03', content:'你好，tom' }\r\n]\r\n\r\nlet obj = {name:'tom', age:25} //name=tom&age=25 => urlencoded\r\nconsole.log(qs.stringify(obj)); //name=tom&age=25\r\n\r\nlet ooo = \"name=kobe&age=18\"\r\nconsole.log(qs.parse(ooo)) //{name: \"kobe\", age: \"18\"}\r\n\r\n// 只要Message组件把id带过来，后端就给你匹配对应的content\r\n\r\nexport default class Detail extends Component {\r\n\r\n    render() {\r\n        // 打印传递过来的params参数\r\n        // console.log(this.props)\r\n        // const { id, title } = this.props.match.params\r\n\r\n\r\n        //打印search参数\r\n        console.log(this.props); \r\n        // 使用react脚手架自带的qs库将 key=value&key=value urlencoded 编码格式转为对象格式\r\n        console.log(this.props.location.search);\r\n        const searchData = qs.parse(this.props.location.search)\r\n        console.log(searchData); //{?id: \"01\", title: \"消息一\"}\r\n        // 注意去除问号\r\n        console.log(searchData);\r\n\r\n        // 查询后台数据，进行匹配\r\n        // const findResult = DetailData.find((detailObj) => {\r\n        //     return detailObj.id === id\r\n        // //    return console.log(detailObj.id,'-----', id)\r\n        // })\r\n\r\n        // console.log(findResult)\r\n\r\n        return (\r\n            <ul>\r\n                <li>ID:</li>\r\n                <li>title:</li>\r\n                <li>content:</li>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u684C\\u9762\\\\react\\u57FA\\u7840\\u539F\\u7406\\u5206\\u6790\\\\react_scaffolding\\\\src\\\\components\\\\Header\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'; // withRouter是一个函数，用来将一般组件身上加上路由组件所具有的东西，也就是可以操作history了\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Header extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.back = () => {\n      //回退\n      this.props.history.goBack();\n    };\n  }\n\n  render() {\n    console.log('Header组件收到的props是', this.props);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"React Router Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.back,\n        children: \"\\u56DE\\u9000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), \" \\xA0\"]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withRouter(Header); // withRouter函数接收一个参数为一般组件\n// 这样一般组件也会通过props收到路由组件所收到的对象，来操作路由\n// withRouter的返回值是一个新组件 \n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/桌面/react基础原理分析/react_scaffolding/src/components/Header/index.jsx"],"names":["React","Component","withRouter","Header","back","props","history","goBack","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,UAAR,QAAyB,kBAAzB,C,CAEA;;;;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAE3BG,IAF2B,GAEpB,MAAM;AAAC;AACV,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB;AACH,KAJ0B;AAAA;;AAM3BC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKL,KAAtC;AACA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKD,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADJ;AAMH;;AAd0B;;AAgB/B,oBAAeF,UAAU,CAACC,MAAD,CAAzB,C,CACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n// withRouter是一个函数，用来将一般组件身上加上路由组件所具有的东西，也就是可以操作history了\r\n\r\nclass Header extends Component {\r\n\r\n    back = () => {//回退\r\n        this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        console.log('Header组件收到的props是', this.props);\r\n        return (\r\n            <>\r\n                <h2>React Router Demo</h2>\r\n                <button onClick={this.back}>回退</button> &nbsp;\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Header)\r\n// withRouter函数接收一个参数为一般组件\r\n// 这样一般组件也会通过props收到路由组件所收到的对象，来操作路由\r\n// withRouter的返回值是一个新组件 "]},"metadata":{},"sourceType":"module"}
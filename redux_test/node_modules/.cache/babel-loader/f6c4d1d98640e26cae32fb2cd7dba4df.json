{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u684C\\u9762\\\\react\\u57FA\\u7840\\u539F\\u7406\\u5206\\u6790\\\\redux_test\\\\src\\\\containers\\\\Count\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Count extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.add = () => {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\\uFF1A\", this.props.he]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.add,\n        children: \"\\u70B9\\u6211+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect( // 映射状态\nstate => ({\n  he: state\n}), // 映射操作状态的方法\n{})(Count);","map":{"version":3,"sources":["D:/桌面/react基础原理分析/redux_test/src/containers/Count/index.jsx"],"names":["React","Component","connect","Count","add","render","props","he","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAE1BG,GAF0B,GAEpB,MAAM,CAEX,CAJyB;AAAA;;AAM1BC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,2DAAW,KAAKC,KAAL,CAAWC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKH,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAbyB;;AAgB9B,eAAeF,OAAO,EAClB;AACAM,KAAK,KAAK;AAACD,EAAAA,EAAE,EAAEC;AAAL,CAAL,CAFa,EAGlB;AACA,EAJkB,CAAP,CAKbL,KALa,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Count extends Component {\r\n\r\n    add = () => {\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>当前求和为：{this.props.he}</h2>\r\n                <button onClick={this.add}>点我+1</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    // 映射状态\r\n    state => ({he: state}),\r\n    // 映射操作状态的方法\r\n    {}\r\n)(Count)\r\n"]},"metadata":{},"sourceType":"module"}
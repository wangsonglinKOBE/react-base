{"ast":null,"code":"/**\r\n * 该文件专门为Count组件生成action对象\r\n */\nimport { INCREMENT, DECREMENT } from '../constant'; //  创建action对象：通过函数返回一个对象来作为action对象，同步action\n\nexport const increment = data => ({\n  type: INCREMENT,\n  data\n});\nexport const DecrementAction = data => ({\n  type: DECREMENT,\n  data\n}); //  异步action,就是指action的值为函数,异步action中一般都会调用同步action\n\n_c = DecrementAction;\nexport const createIncrementAsyncAction = (data, time) => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(createIncrementAction(data));\n    }, time);\n  };\n}; //  注意这里不用引入store了，也不用storestore.dispatch，而是通过函数参数获取dispatch\n//  ({ type: 'increment', data }):返回一个对象的写法\n\nvar _c;\n\n$RefreshReg$(_c, \"DecrementAction\");","map":{"version":3,"sources":["D:/桌面/react基础原理分析/redux_test/src/redux/actions/count.js"],"names":["INCREMENT","DECREMENT","increment","data","type","DecrementAction","createIncrementAsyncAction","time","dispatch","setTimeout","createIncrementAction"],"mappings":"AAAA;AACA;AACA;AAEA,SAAQA,SAAR,EAAmBC,SAAnB,QAAmC,aAAnC,C,CAEA;;AACC,OAAO,MAAMC,SAAS,GAAGC,IAAI,KAAK;AAAEC,EAAAA,IAAI,EAAEJ,SAAR;AAAmBG,EAAAA;AAAnB,CAAL,CAAtB;AACP,OAAO,MAAME,eAAe,GAAGF,IAAI,KAAK;AAAEC,EAAAA,IAAI,EAAEH,SAAR;AAAmBE,EAAAA;AAAnB,CAAL,CAA5B,C,CAER;;KAFcE,e;AAGb,OAAO,MAAMC,0BAA0B,GAAG,CAACH,IAAD,EAAOI,IAAP,KAAgB;AACvD,SAAQC,QAAD,IAAc;AACjBC,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,QAAQ,CAACE,qBAAqB,CAACP,IAAD,CAAtB,CAAR;AACH,KAFS,EAEPI,IAFO,CAAV;AAGH,GAJD;AAKF,CANM,C,CAQR;AAEA","sourcesContent":["/**\r\n * 该文件专门为Count组件生成action对象\r\n */\r\n\r\nimport {INCREMENT, DECREMENT} from '../constant'\r\n\r\n//  创建action对象：通过函数返回一个对象来作为action对象，同步action\r\n export const increment = data => ({ type: INCREMENT, data })\r\n export const DecrementAction = data => ({ type: DECREMENT, data })\r\n \r\n//  异步action,就是指action的值为函数,异步action中一般都会调用同步action\r\n export const createIncrementAsyncAction = (data, time) => {\r\n    return (dispatch) => {\r\n        setTimeout(() => {\r\n            dispatch(createIncrementAction(data))\r\n        }, time)\r\n    }\r\n }\r\n\r\n//  注意这里不用引入store了，也不用storestore.dispatch，而是通过函数参数获取dispatch\r\n\r\n//  ({ type: 'increment', data }):返回一个对象的写法\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
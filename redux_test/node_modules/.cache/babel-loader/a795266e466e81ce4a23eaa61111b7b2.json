{"ast":null,"code":"// 引入Count的UI组件\nimport CountUI from '../../components/Count';\nimport { createIncrementAction, createDecrementAction } from '../../redux/count_action'; // 引入connect用于连接UI组件与redux\n\nimport { connect } from 'react-redux';\n/*\r\n  1. mapStateToProps函数返回的是一个对象\r\n  2. 返回对象中的key就作为传递给UI组件的props的key,value就作为传递给UI组件的props的value\r\n  3. mapStateToProps用于给UI组件传递状态\r\n */\n\nfunction mapStateToProps(state) {\n  //state:redux中的状态，初始化为0\n  return {\n    count: state\n  }; // 相当于<CountUI n={900}/>\n}\n/*\r\n  1. mapDispatchToProps函数返回的是一个对象\r\n  2. 返回对象中的key就作为传递给UI组件的props的key,value就作为传递给UI组件的props的value\r\n  3. mapDispatchToProps用于给UI组件传递操作状态的方法\r\n */\n\n\nfunction mapDispatchToProps(dispatch) {\n  //dispatch:redux中的dispatch\n  // 通知redux执行加法\n  return {\n    jia: value => dispatch(createIncrementAction(value))\n  };\n} // 使用connect()()创建并暴露一个Count的容器组件\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountUI);","map":{"version":3,"sources":["D:/桌面/react基础原理分析/redux_test/src/containers/Count/index.jsx"],"names":["CountUI","createIncrementAction","createDecrementAction","connect","mapStateToProps","state","count","mapDispatchToProps","dispatch","jia","value"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,wBAApB;AACA,SACIC,qBADJ,EAEIC,qBAFJ,QAGO,0BAHP,C,CAKA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAG;AAC/B,SAAO;AAACC,IAAAA,KAAK,EAAED;AAAR,GAAP,CAD4B,CAE5B;AACH;AAGD;AACA;AACA;AACA;AACA;;;AACA,SAASE,kBAAT,CAA4BC,QAA5B,EAAsC;AAAE;AACpC;AACA,SAAO;AACHC,IAAAA,GAAG,EAAEC,KAAK,IAAIF,QAAQ,CAACP,qBAAqB,CAACS,KAAD,CAAtB;AADnB,GAAP;AAGH,C,CAED;;;AACA,eAAeP,OAAO,CAACC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CP,OAA7C,CAAf","sourcesContent":["// 引入Count的UI组件\r\nimport CountUI from '../../components/Count'\r\nimport {\r\n    createIncrementAction,\r\n    createDecrementAction\r\n} from '../../redux/count_action'\r\n\r\n// 引入connect用于连接UI组件与redux\r\nimport {connect} from 'react-redux'\r\n\r\n/*\r\n  1. mapStateToProps函数返回的是一个对象\r\n  2. 返回对象中的key就作为传递给UI组件的props的key,value就作为传递给UI组件的props的value\r\n  3. mapStateToProps用于给UI组件传递状态\r\n */\r\nfunction mapStateToProps(state) {  //state:redux中的状态，初始化为0\r\n    return {count: state}\r\n    // 相当于<CountUI n={900}/>\r\n}\r\n\r\n\r\n/*\r\n  1. mapDispatchToProps函数返回的是一个对象\r\n  2. 返回对象中的key就作为传递给UI组件的props的key,value就作为传递给UI组件的props的value\r\n  3. mapDispatchToProps用于给UI组件传递操作状态的方法\r\n */\r\nfunction mapDispatchToProps(dispatch) { //dispatch:redux中的dispatch\r\n    // 通知redux执行加法\r\n    return {\r\n        jia: value => dispatch(createIncrementAction(value)) \r\n}\r\n}\r\n\r\n// 使用connect()()创建并暴露一个Count的容器组件\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CountUI)"]},"metadata":{},"sourceType":"module"}